{
  "contractName": "Proof",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "document",
          "type": "bytes"
        }
      ],
      "name": "notarize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"document\",\"type\":\"bytes\"}],\"name\":\"notarize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"notarize(bytes)\":{\"details\":\"Hashes the Proposal and add it as a Proof of approval.\",\"params\":{\"document\":\"Proposal details. \"},\"returns\":{\"_0\":\"hash of the Proposal.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/Proof.sol\":\"Proof\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"project:/contracts/proposal/Proposal.sol\":{\"keccak256\":\"0xe131204ebdea5d3ee38850cddb3f7b83c417bca9c7dfc1365202cfdfcd58376a\",\"urls\":[\"bzz-raw://4ff77f5e5defbc0aad6108acde432a2da09b2ad1bc86a6e2a97ccb552ead5f0c\",\"dweb:/ipfs/QmTiKjMCP9WQASJwabBpVzyrkDQuE153Nrc7yQdN4BEJr5\"]},\"project:/contracts/utils/Proof.sol\":{\"keccak256\":\"0x530e5f81f55db98daa749b9b1213675edbc0307b695b89171679a787e35f081b\",\"urls\":[\"bzz-raw://b3393921b01cdae48ead409d1e17635be035a5d4d65c5270dfe233edff8465ee\",\"dweb:/ipfs/QmZYXC2Lq8VZqP9nebQPTGppddcSNSsFbUh9gsRttYXzuB\"]}},\"version\":1}",
  "bytecode": "0x61012c61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063fb1ace34146038575b600080fd5b604760433660046079565b6059565b60405190815260200160405180910390f35b60008282604051606992919060e6565b6040518091039020905092915050565b60008060208385031215608b57600080fd5b823567ffffffffffffffff8082111560a257600080fd5b818501915085601f83011260b557600080fd5b81358181111560c357600080fd5b86602082850101111560d457600080fd5b60209290920196919550909350505050565b818382376000910190815291905056fea2646970667358221220dc76becb779568ab8f3d2cb78ff89a9c81825f9b37397fb6170dfce66ee86c3b64736f6c63430008110033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361060335760003560e01c8063fb1ace34146038575b600080fd5b604760433660046079565b6059565b60405190815260200160405180910390f35b60008282604051606992919060e6565b6040518091039020905092915050565b60008060208385031215608b57600080fd5b823567ffffffffffffffff8082111560a257600080fd5b818501915085601f83011260b557600080fd5b81358181111560c357600080fd5b86602082850101111560d457600080fd5b60209290920196919550909350505050565b818382376000910190815291905056fea2646970667358221220dc76becb779568ab8f3d2cb78ff89a9c81825f9b37397fb6170dfce66ee86c3b64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1073:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "103:502:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "149:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "158:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "161:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "151:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "151:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "151:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "124:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "133:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "120:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "120:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "145:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "116:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "116:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "113:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "174:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "201:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "188:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "188:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "178:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "220:28:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "230:18:11",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "224:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "263:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "271:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "260:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:14:11"
                  },
                  "nodeType": "YulIf",
                  "src": "257:34:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "300:32:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "314:9:11"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "325:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "310:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:22:11"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "304:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "380:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "389:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "392:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "382:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "382:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "382:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "359:2:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "363:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "355:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "355:13:11"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "370:7:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "351:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "351:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "344:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "344:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "341:55:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "405:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "432:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "419:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "419:16:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "409:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "471:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "474:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "464:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "450:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "458:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "447:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "447:14:11"
                  },
                  "nodeType": "YulIf",
                  "src": "444:34:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "528:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "537:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "530:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "530:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "530:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "501:2:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "505:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "497:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "497:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "514:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "493:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "493:24:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "519:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "490:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "490:37:11"
                  },
                  "nodeType": "YulIf",
                  "src": "487:57:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "553:21:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "567:2:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "571:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "563:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "563:11:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "583:16:11",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "593:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "583:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "92:6:11",
                "type": ""
              }
            ],
            "src": "14:591:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "719:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "729:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "741:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "752:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "737:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "729:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "771:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "782:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "764:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "764:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "764:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "688:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "699:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "710:4:11",
                "type": ""
              }
            ],
            "src": "610:185:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "947:124:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "970:3:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "975:6:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "983:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "957:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "957:33:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "957:33:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "999:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1013:3:11"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1018:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1009:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:16:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1003:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1041:2:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1045:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:13:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1034:13:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1056:9:11",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "1063:2:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1056:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "915:3:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "920:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "928:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "939:3:11",
                "type": ""
              }
            ],
            "src": "800:271:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "60:277:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;60:277:10;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "60:277:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;224:111;;;;;;:::i;:::-;;:::i;:::-;;;764:25:11;;;752:2;737:18;224:111:10;;;;;;;;290:7;321:8;;311:19;;;;;;;:::i;:::-;;;;;;;;304:26;;224:111;;;;:::o;14:591:11:-;84:6;92;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;201:9;188:23;230:18;271:2;263:6;260:14;257:34;;;287:1;284;277:12;257:34;325:6;314:9;310:22;300:32;;370:7;363:4;359:2;355:13;351:27;341:55;;392:1;389;382:12;341:55;432:2;419:16;458:2;450:6;447:14;444:34;;;474:1;471;464:12;444:34;519:7;514:2;505:6;501:2;497:15;493:24;490:37;487:57;;;540:1;537;530:12;487:57;571:2;563:11;;;;;593:6;;-1:-1:-1;14:591:11;;-1:-1:-1;;;;14:591:11:o;800:271::-;983:6;975;970:3;957:33;939:3;1009:16;;1034:13;;;1009:16;800:271;-1:-1:-1;800:271:11:o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"../proposal/Proposal.sol\";\nlibrary Proof {\n  \n  /// @dev Hashes the Proposal and add it as a Proof of approval.\n  /// @param document Proposal details. \n  /// @return hash of the Proposal.\n  function notarize(bytes calldata document) external pure returns (bytes32){\n    return keccak256(document);\n  }\n}\n",
  "sourcePath": "/mnt/c/Users/josep/WebstormProjects/proposal-dapp/contracts/utils/Proof.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/Proof.sol",
    "exportedSymbols": {
      "Proof": [
        2043
      ],
      "Proposal": [
        2026
      ]
    },
    "id": 2044,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2028,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:10"
      },
      {
        "absolutePath": "project:/contracts/proposal/Proposal.sol",
        "file": "../proposal/Proposal.sol",
        "id": 2029,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2044,
        "sourceUnit": 2027,
        "src": "25:34:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Proof",
        "contractDependencies": [],
        "contractKind": "library",
        "fullyImplemented": true,
        "id": 2043,
        "linearizedBaseContracts": [
          2043
        ],
        "name": "Proof",
        "nameLocation": "68:5:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2041,
              "nodeType": "Block",
              "src": "298:37:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2038,
                        "name": "document",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2032,
                        "src": "321:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 2037,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "311:9:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "311:19:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2036,
                  "id": 2040,
                  "nodeType": "Return",
                  "src": "304:26:10"
                }
              ]
            },
            "documentation": {
              "id": 2030,
              "nodeType": "StructuredDocumentation",
              "src": "81:140:10",
              "text": "@dev Hashes the Proposal and add it as a Proof of approval.\n @param document Proposal details. \n @return hash of the Proposal."
            },
            "functionSelector": "fb1ace34",
            "id": 2042,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "notarize",
            "nameLocation": "233:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2032,
                  "mutability": "mutable",
                  "name": "document",
                  "nameLocation": "257:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2042,
                  "src": "242:23:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2031,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "241:25:10"
            },
            "returnParameters": {
              "id": 2036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2035,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2042,
                  "src": "290:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2034,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "290:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "289:9:10"
            },
            "scope": 2043,
            "src": "224:111:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2044,
        "src": "60:277:10",
        "usedErrors": []
      }
    ],
    "src": "0:338:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xEF243C3E2fd7bDF1aD0e25Ebae6E9ffE23d6dE00",
      "transactionHash": "0x947686c52aab259fe3fdcf4b224874415b1aa34859d4cd09e4cd024e698fb0ec"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFE45399aC69481485fae5F4c535675aeA267f27A",
      "transactionHash": "0xf98ce1b6ac703a8ba6f853275d9f64d34b538c123dd4e35c501308c2a3a24d7b"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-20T06:37:44.079Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "notarize(bytes)": {
        "details": "Hashes the Proposal and add it as a Proof of approval.",
        "params": {
          "document": "Proposal details. "
        },
        "returns": {
          "_0": "hash of the Proposal."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}