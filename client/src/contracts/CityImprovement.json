{
  "contractName": "CityImprovement",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "LogApprove",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "LogApproverApply",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "LogClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "LogReject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "LogSubmit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "LogVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "LogVoterApply",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "applicants",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "approvers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "improvements",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "problem",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "solution",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "approvals",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "proof",
          "type": "bytes32"
        },
        {
          "internalType": "enum Proposal.State",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "readProposal",
      "outputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "applicant",
          "type": "address"
        },
        {
          "internalType": "address payable[]",
          "name": "approver",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "proof",
          "type": "bytes32"
        },
        {
          "internalType": "enum Proposal.State",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "problem",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "solution",
          "type": "string"
        }
      ],
      "name": "submit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "reject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyForApprover",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "applyForVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "doneApproving",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "doneVoting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogApprove\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"LogApproverApply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogReject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"LogSubmit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"LogVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"LogVoterApply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"applicants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyForApprover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"applyForVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"doneApproving\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"doneVoting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"improvements\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"problem\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"solution\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"approvals\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"},{\"internalType\":\"enum Proposal.State\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"readProposal\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"applicant\",\"type\":\"address\"},{\"internalType\":\"address payable[]\",\"name\":\"approver\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"proof\",\"type\":\"bytes32\"},{\"internalType\":\"enum Proposal.State\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"reject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"problem\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"solution\",\"type\":\"string\"}],\"name\":\"submit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Joseph Nicholas R. Alcantara\",\"details\":\"All of the functionalities are experimental but are already unit tested.\",\"kind\":\"dev\",\"methods\":{\"applyForApprover()\":{\"details\":\"Marks the caller as the an approver, which will be assigned as among the 2 to approve proposals.\"},\"applyForVoter()\":{\"details\":\"Marks the caller as a voter, which can then be vote for proposals.\"},\"approve(uint256)\":{\"details\":\"Approves the City improvement proposal. Application approval sents some reward amount to      the applicant which will also vary depending on the number of votes.\",\"params\":{\"id\":\"City improvement ID.\"}},\"close(uint256)\":{\"details\":\"Owner only function to close a proposal when it is approved or rejected.\",\"params\":{\"id\":\"Proposal id.\"}},\"doneApproving(uint256,address)\":{\"details\":\"Helper function to know if approver already is done.\",\"returns\":{\"_0\":\"true/false if approver is found in proposal\"}},\"doneVoting(uint256,address)\":{\"details\":\"Helper function to know if voter already is done.\",\"returns\":{\"_0\":\"true/false if voter is found in proposal\"}},\"getNumberOfProposals()\":{\"details\":\"Gets the number of proposals.\",\"returns\":{\"_0\":\"number of proposals\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"readProposal(uint256)\":{\"details\":\"Reads and returns the proposal by Id.\",\"params\":{\"id\":\"Proposal id.\"}},\"reject(uint256)\":{\"details\":\"This function rejects the idea by the approver.\",\"params\":{\"id\":\"Proposal id.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"submit(string,string,string,string)\":{\"details\":\"Start of city improvement application.\",\"params\":{\"description\":\"City improvement description.\",\"problem\":\"City improvement problem it wishes to tackle.\",\"solution\":\"Problem's solution.\",\"title\":\"City improvement title.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vote(uint256)\":{\"details\":\"This function rejects the idea by the approver.\",\"params\":{\"id\":\"Proposal id.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn. Causes the `escrow` to emit a {Withdrawn} event.\"}}},\"title\":\"Simulation for City improvement proposal system.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract for educational purposes only,          this will simulate a City improvement which          is a type of legal proposal.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/city/CityImprovement.sol\":\"CityImprovement\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":300},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/PullPayment.sol\":{\"keccak256\":\"0xa74a6e4245ef1e87603aaf2c8924bd65351eba1fce23112e861fc230b2d8b309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a3327cea9f8bfd3c82f1bfbf75a92948b4c8c799b159eb73b494dbc9bc4f49f\",\"dweb:/ipfs/QmWvWbUtXtrZvpZfrA8PLExL5hMUcPcEyYhevfbJF5HjPX\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/escrow/Escrow.sol\":{\"keccak256\":\"0xabdff382f93edb8bd94b227798fc0daf64abe891403e1e525f5870c2cae8bf65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://402701e1bf7c6314463211809668b51986f27695b5d552dcd51aed0730c66680\",\"dweb:/ipfs/QmRLv8Tr9ZV7QABCSr2ri4N1EsKGebFC87ti9794GMGLiL\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/city/CityImprovement.sol\":{\"keccak256\":\"0x13dadbed8116375b06afdcf1ceb1d2de752d75f5526f2dc2a08c36272db3f995\",\"urls\":[\"bzz-raw://a315a7104f8720395948891b7972db40b2a7a726a944f34916f28eaf858cc375\",\"dweb:/ipfs/QmRGRcQATiAThRib7DXircEhL1eKCYKkbzENasfAjsx3zL\"]},\"project:/contracts/proposal/Proposal.sol\":{\"keccak256\":\"0xe131204ebdea5d3ee38850cddb3f7b83c417bca9c7dfc1365202cfdfcd58376a\",\"urls\":[\"bzz-raw://4ff77f5e5defbc0aad6108acde432a2da09b2ad1bc86a6e2a97ccb552ead5f0c\",\"dweb:/ipfs/QmTiKjMCP9WQASJwabBpVzyrkDQuE153Nrc7yQdN4BEJr5\"]},\"project:/contracts/utils/Proof.sol\":{\"keccak256\":\"0x530e5f81f55db98daa749b9b1213675edbc0307b695b89171679a787e35f081b\",\"urls\":[\"bzz-raw://b3393921b01cdae48ead409d1e17635be035a5d4d65c5270dfe233edff8465ee\",\"dweb:/ipfs/QmZYXC2Lq8VZqP9nebQPTGppddcSNSsFbUh9gsRttYXzuB\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200002090620000b8565b604051809103906000f0801580156200003d573d6000803e3d6000fd5b506001600160a01b0316608052620000553362000068565b6000805460ff60a01b19169055620000c6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105a980620028f983390190565b608051612809620000f0600039600081816109a301528181611c6e015261200e01526128096000f3fe60806040526004361061013a5760003560e01c8063905d5e25116100bb578063bf4f1e981161007f578063e2982c2111610059578063e2982c21146103ca578063f2fde38b146103ea578063fdaa0cc71461040a57600080fd5b8063bf4f1e9814610332578063ccd6686314610367578063d1eba6c71461039757600080fd5b8063905d5e251461029a578063a3ec138d146102af578063b759f954146102df578063b7808b2e146102f2578063b8adaa111461031257600080fd5b806333809b6c1161010257806333809b6c14610206578063441822a1146102295780635c975abb1461023e578063715018a61461025d5780638da5cb5b1461027257600080fd5b80630121b93f1461013f5780630a144391146101615780630aebeb4e146101a657806312645ed4146101c657806331b3eb94146101e6575b600080fd5b34801561014b57600080fd5b5061015f61015a3660046120ea565b61042a565b005b34801561016d57600080fd5b5061019161017c366004612118565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101b257600080fd5b5061015f6101c13660046120ea565b61073d565b3480156101d257600080fd5b506101916101e1366004612135565b61093a565b3480156101f257600080fd5b5061015f610201366004612118565b610984565b34801561021257600080fd5b5061021b610a02565b60405190815260200161019d565b34801561023557600080fd5b5061015f610a13565b34801561024a57600080fd5b50600054600160a01b900460ff16610191565b34801561026957600080fd5b5061015f610ada565b34801561027e57600080fd5b506000546040516001600160a01b03909116815260200161019d565b3480156102a657600080fd5b5061015f610aee565b3480156102bb57600080fd5b506101916102ca366004612118565b60036020526000908152604090205460ff1681565b61015f6102ed3660046120ea565b610baf565b3480156102fe57600080fd5b5061019161030d366004612135565b6112e4565b34801561031e57600080fd5b5061015f61032d3660046120ea565b61139c565b34801561033e57600080fd5b5061035261034d3660046120ea565b6116a2565b60405161019d999897969594939291906121e3565b34801561037357600080fd5b50610191610382366004612118565b60016020526000908152604090205460ff1681565b3480156103a357600080fd5b506103b76103b23660046120ea565b61192e565b60405161019d9796959493929190612273565b3480156103d657600080fd5b5061021b6103e5366004612118565b611c4c565b3480156103f657600080fd5b5061015f610405366004612118565b611cdb565b34801561041657600080fd5b5061015f6104253660046123b2565b611d54565b3360008181526003602052604090205460ff1615156001146104935760405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920766f74657220697320616c6c6f776564000000000000000000000060448201526064015b60405180910390fd5b8160048082815481106104a8576104a861245f565b60009182526020909120600a600b90920201015460ff1660058111156104d0576104d06121ab565b0361051d5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b610525611ee5565b60006004848154811061053a5761053a61245f565b60009182526020909120600a600b90920201015460ff166005811115610562576105626121ab565b1461057f5760405162461bcd60e51b815260040161048a90612475565b600483815481106105925761059261245f565b600091825260208083203384526006600b90930201919091019052604090205460ff16156106025760405162461bcd60e51b815260206004820152601960248201527f566f7465722063616e206f6e6c7920766f7465206f6e63652e00000000000000604482015260640161048a565b6002600484815481106106175761061761245f565b60009182526020909120600a600b90920201015460ff16600581111561063f5761063f6121ab565b0361068c5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420766f746520696620616c72656164792072656a656374656400604482015260640161048a565b6004838154811061069f5761069f61245f565b6000918252602082206007600b90920201018054916106bd836124d4565b91905055506001600484815481106106d7576106d761245f565b60009182526020808320338452600b929092029091016006018152604091829020805460ff191693151593909317909255518481527f6387485947507482674c11c0a0f1418b30f5e2fd196714c629bbd4e561828f7191015b60405180910390a1505050565b610745611f32565b80600480828154811061075a5761075a61245f565b60009182526020909120600a600b90920201015460ff166005811115610782576107826121ab565b036107cf5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b6107d7611ee5565b6003600483815481106107ec576107ec61245f565b60009182526020909120600a600b90920201015460ff166005811115610814576108146121ab565b148061085a57506002600483815481106108305761083061245f565b60009182526020909120600a600b90920201015460ff166005811115610858576108586121ab565b145b6108bd5760405162461bcd60e51b815260206004820152602e60248201527f50726f706f73616c2073746174652073686f756c6420626520617070726f766560448201526d321037b9103932b532b1ba32b21760911b606482015260840161048a565b60048083815481106108d1576108d161245f565b60009182526020909120600a600b9092020101805460ff191660018360058111156108fe576108fe6121ab565b02179055506040518281527f4b9b0f1aa3faaeeee0ef981e1c0dc91a646fd5365cc6d9f2a3c2792b931ba9399060200160405180910390a15050565b60006004838154811061094f5761094f61245f565b600091825260208083206001600160a01b03861684526006600b90930201919091019052604090205460ff1690505b92915050565b6040516351cff8d960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906351cff8d990602401600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b5050505050565b6000610a0c611ee5565b5060045490565b610a1b611ee5565b3360009081526001602052604090205460ff1615610a3857600080fd5b3360009081526003602052604090205460ff1615610a5557600080fd5b3360009081526002602052604090205460ff1615610a7257600080fd5b6000546001600160a01b03163303610a8957600080fd5b33600081815260036020908152604091829020805460ff1916600117905590519182527f3b6d1122be20c447e0ffabe6b11504493f6711532b7376c380078ececacf219991015b60405180910390a1565b610ae2611f32565b610aec6000611f8c565b565b610af6611ee5565b3360009081526001602052604090205460ff1615610b1357600080fd5b3360009081526003602052604090205460ff1615610b3057600080fd5b3360009081526002602052604090205460ff1615610b4d57600080fd5b6000546001600160a01b03163303610b6457600080fd5b33600081815260026020908152604091829020805460ff1916600117905590519182527fc38871933b40c4ffa8d26c750fd2068c580d67b247afac95ad4448e74f5e6ef79101610ad0565b3360008181526002602052604090205460ff161515600114610c0e5760405162461bcd60e51b815260206004820152601860248201527713db9b1e48185c1c1c9bdd995c881a5cc8185b1b1bddd95960421b604482015260640161048a565b816004808281548110610c2357610c2361245f565b60009182526020909120600a600b90920201015460ff166005811115610c4b57610c4b6121ab565b03610c985760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b610ca0611ee5565b600060048481548110610cb557610cb561245f565b90600052602060002090600b02016007015411610d2a5760405162461bcd60e51b815260206004820152602d60248201527f50726f706f73616c20766f7465732073686f756c642062652070726573656e7460448201526c08199bdc88185c1c1c9bdd985b609a1b606482015260840161048a565b600260048481548110610d3f57610d3f61245f565b90600052602060002090600b0201600801541115610d9f5760405162461bcd60e51b815260206004820152601f60248201527f50726f706f73616c20617070726f76616c73206e6f7420657863656564203200604482015260640161048a565b600060048481548110610db457610db461245f565b60009182526020909120600a600b90920201015460ff166005811115610ddc57610ddc6121ab565b14610df95760405162461bcd60e51b815260040161048a90612475565b600060048481548110610e0e57610e0e61245f565b90600052602060002090600b0201600501805490501115610ec25760048381548110610e3c57610e3c61245f565b90600052602060002090600b0201600501600081548110610e5f57610e5f61245f565b6000918252602090912001546001600160a01b03163303610ec25760405162461bcd60e51b815260206004820152601e60248201527f417070726f7665722063616e206f6e6c7920617070726f7665206f6e63650000604482015260640161048a565b60048381548110610ed557610ed561245f565b6000918252602082206008600b9092020101805491610ef3836124d4565b919050555060048381548110610f0b57610f0b61245f565b600091825260208083206005600b9093020191909101805460018101825590835291200180546001600160a01b031916331790556004805484908110610f5357610f5361245f565b90600052602060002090600b0201600801546002036112df57600360048481548110610f8157610f8161245f565b60009182526020909120600a600b9092020101805460ff19166001836005811115610fae57610fae6121ab565b021790555073__Proof_________________________________63fb1ace3460048581548110610fe057610fe061245f565b90600052602060002090600b0201600001600486815481106110045761100461245f565b90600052602060002090600b0201600101600487815481106110285761102861245f565b90600052602060002090600b02016002016004888154811061104c5761104c61245f565b90600052602060002090600b0201600301600489815481106110705761107061245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b031660048a815481106110a8576110a861245f565b90600052602060002090600b020160050160048b815481106110cc576110cc61245f565b90600052602060002090600b02016007015460048c815481106110f1576110f161245f565b90600052602060002090600b02016008015460048d815481106111165761111661245f565b6000918252602091829020600a600b9092020101546040516111469a999897969594939260ff90921691016125a4565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016111719190612663565b602060405180830381865af415801561118e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b29190612676565b600484815481106111c5576111c561245f565b90600052602060002090600b020160090181905550611259600484815481106111f0576111f061245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b03166112546004868154811061122b5761122b61245f565b90600052602060002090600b020160070154670de0b6b3a7640000611fdc90919063ffffffff16565b611fef565b600060016000600486815481106112725761127261245f565b60009182526020808320600b92909202909101600401546001600160a01b031683528281019390935260409182019020805460ff19169315159390931790925590518481527f98c0bb6d6210814cc6a978e62068562220015c52cff19f9e6d948aece9d5ab4e9101610730565b505050565b6000805b600484815481106112fb576112fb61245f565b90600052602060002090600b0201600501805490508160ff16101561139257826001600160a01b0316600485815481106113375761133761245f565b90600052602060002090600b02016005018260ff168154811061135c5761135c61245f565b6000918252602090912001546001600160a01b03160361138057600191505061097e565b8061138a8161268f565b9150506112e8565b5060009392505050565b3360008181526002602052604090205460ff1615156001146113fb5760405162461bcd60e51b815260206004820152601860248201527713db9b1e48185c1c1c9bdd995c881a5cc8185b1b1bddd95960421b604482015260640161048a565b8160048082815481106114105761141061245f565b60009182526020909120600a600b90920201015460ff166005811115611438576114386121ab565b036114855760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b61148d611ee5565b6000600484815481106114a2576114a261245f565b90600052602060002090600b020160050180549050111561156b57600483815481106114d0576114d061245f565b90600052602060002090600b02016005016000815481106114f3576114f361245f565b6000918252602090912001546001600160a01b0316330361156b5760405162461bcd60e51b815260206004820152602c60248201527f466972737420617070726f7665722063616e6e6f742072656a6563742074686560448201526b1030b8383634b1b0ba34b7b760a11b606482015260840161048a565b6000600484815481106115805761158061245f565b60009182526020909120600a600b90920201015460ff1660058111156115a8576115a86121ab565b146115c55760405162461bcd60e51b815260040161048a90612475565b600483815481106115d8576115d861245f565b600091825260208083206005600b9093020191909101805460018101825590835291200180546001600160a01b031916331790556004805460029190859081106116245761162461245f565b60009182526020909120600a600b9092020101805460ff19166001836005811115611651576116516121ab565b021790555033600090815260016020818152604092839020805460ff191690921790915590518481527fdc40839d55e815edf4d9e581b370ff6ddfa8ba7985ea1fa97103cd409f0136ee9101610730565b600481815481106116b257600080fd5b90600052602060002090600b02016000915090508060000180546116d5906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611701906124ed565b801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b505050505090806001018054611763906124ed565b80601f016020809104026020016040519081016040528092919081815260200182805461178f906124ed565b80156117dc5780601f106117b1576101008083540402835291602001916117dc565b820191906000526020600020905b8154815290600101906020018083116117bf57829003601f168201915b5050505050908060020180546117f1906124ed565b80601f016020809104026020016040519081016040528092919081815260200182805461181d906124ed565b801561186a5780601f1061183f5761010080835404028352916020019161186a565b820191906000526020600020905b81548152906001019060200180831161184d57829003601f168201915b50505050509080600301805461187f906124ed565b80601f01602080910402602001604051908101604052809291908181526020018280546118ab906124ed565b80156118f85780601f106118cd576101008083540402835291602001916118f8565b820191906000526020600020905b8154815290600101906020018083116118db57829003601f168201915b5050506004840154600785015460088601546009870154600a9097015495966001600160a01b0390931695919450925060ff1689565b606080600060606000806000611942611ee5565b60045461199f5760405162461bcd60e51b815260206004820152602560248201527f54686572652073686f756c6420626520612070726f706f73616c20746f20726560448201526430b21037b760d91b606482015260840161048a565b600488815481106119b2576119b261245f565b90600052602060002090600b0201600001600489815481106119d6576119d661245f565b90600052602060002090600b020160010160048a815481106119fa576119fa61245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b031660048b81548110611a3257611a3261245f565b90600052602060002090600b020160050160048c81548110611a5657611a5661245f565b90600052602060002090600b02016007015460048d81548110611a7b57611a7b61245f565b90600052602060002090600b02016009015460048e81548110611aa057611aa061245f565b90600052602060002090600b0201600a0160009054906101000a900460ff16868054611acb906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611af7906124ed565b8015611b445780601f10611b1957610100808354040283529160200191611b44565b820191906000526020600020905b815481529060010190602001808311611b2757829003601f168201915b50505050509650858054611b57906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611b83906124ed565b8015611bd05780601f10611ba557610100808354040283529160200191611bd0565b820191906000526020600020905b815481529060010190602001808311611bb357829003601f168201915b5050505050955083805480602002602001604051908101604052809291908181526020018280548015611c2c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c0e575b505050505093509650965096509650965096509650919395979092949650565b6040516371d4ed8d60e11b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e3a9db1a90602401602060405180830381865afa158015611cb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190612676565b611ce3611f32565b6001600160a01b038116611d485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048a565b611d5181611f8c565b50565b611d5c611ee5565b3360009081526001602052604090205460ff1615611d7957600080fd5b3360009081526003602052604090205460ff1615611d9657600080fd5b3360009081526002602052604090205460ff1615611db357600080fd5b6000546001600160a01b03163303611dca57600080fd5b60048054600181018255600091909152600b027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180611e0a86826126fc565b5060018101611e1985826126fc565b5060028101611e2884826126fc565b5060038101611e3783826126fc565b506004810180546001600160a01b031916331790556040805160008152602081019182905251611e6b916005840191612070565b5060006008820181905560098201819055600a8201805460ff19908116909155338083526001602081815260409485902080549094169091179092556004548351908152918201527f87548bfe9b4f8ecb6b1bc3a07fa980ae775360df21b3e966464afadee044941a910160405180910390a15050505050565b600054600160a01b900460ff1615610aec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161048a565b6000546001600160a01b03163314610aec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611fe882846127bc565b9392505050565b60405163f340fa0160e01b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f340fa019083906024016000604051808303818588803b15801561205357600080fd5b505af1158015612067573d6000803e3d6000fd5b50505050505050565b8280548282559060005260206000209081019282156120c5579160200282015b828111156120c557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612090565b506120d19291506120d5565b5090565b5b808211156120d157600081556001016120d6565b6000602082840312156120fc57600080fd5b5035919050565b6001600160a01b0381168114611d5157600080fd5b60006020828403121561212a57600080fd5b8135611fe881612103565b6000806040838503121561214857600080fd5b82359150602083013561215a81612103565b809150509250929050565b6000815180845260005b8181101561218b5760208185018101518683018201520161216f565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b600681106121df57634e487b7160e01b600052602160045260246000fd5b9052565b60006101208083526121f78184018d612165565b9050828103602084015261220b818c612165565b9050828103604084015261221f818b612165565b90508281036060840152612233818a612165565b9150506001600160a01b03871660808301528560a08301528460c08301528360e08301526122656101008301846121c1565b9a9950505050505050505050565b60e08152600061228660e083018a612165565b602083820381850152612299828b612165565b6001600160a01b038a8116604087015285820360608701528951808352838b019450909183019060005b818110156122e15785518416835294840194918401916001016122c3565b5050809450505050508460808301528360a083015261230360c08301846121c1565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261233657600080fd5b813567ffffffffffffffff808211156123515761235161230f565b604051601f8301601f19908116603f011681019082821181831017156123795761237961230f565b8160405283815286602085880101111561239257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156123c857600080fd5b843567ffffffffffffffff808211156123e057600080fd5b6123ec88838901612325565b9550602087013591508082111561240257600080fd5b61240e88838901612325565b9450604087013591508082111561242457600080fd5b61243088838901612325565b9350606087013591508082111561244657600080fd5b5061245387828801612325565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60208082526029908201527f50726f706f73616c207374617475732073686f756c64207374696c6c206265206040820152681cdd589b5a5d1d195960ba1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016124e6576124e66124be565b5060010190565b600181811c9082168061250157607f821691505b60208210810361252157634e487b7160e01b600052602260045260246000fd5b50919050565b60008154612534816124ed565b808552602060018381168015612551576001811461256b57612599565b60ff1985168884015283151560051b880183019550612599565b866000528260002060005b858110156125915781548a8201860152908301908401612576565b890184019650505b505050505092915050565b60006101208083526125b88184018d612527565b90506020838203818501526125cd828d612527565b915083820360408501526125e1828c612527565b915083820360608501526125f5828b612527565b6001600160a01b038a8116608087015285820360a0870152895480835260008b8152848120955091928401915b81811015612640578554841683526001958601959285019201612622565b5050809450505050508460c08301528360e08301526122656101008301846121c1565b602081526000611fe86020830184612165565b60006020828403121561268857600080fd5b5051919050565b600060ff821660ff81036126a5576126a56124be565b60010192915050565b601f8211156112df57600081815260208120601f850160051c810160208610156126d55750805b601f850160051c820191505b818110156126f4578281556001016126e1565b505050505050565b815167ffffffffffffffff8111156127165761271661230f565b61272a8161272484546124ed565b846126ae565b602080601f83116001811461275f57600084156127475750858301515b600019600386901b1c1916600185901b1785556126f4565b600085815260208120601f198616915b8281101561278e5788860151825594840194600190910190840161276f565b50858210156127ac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761097e5761097e6124be56fea264697066735822122000cea7b417828296b452d86e8ba3e35119c382545e3204f46017738bfcc4e6bc64736f6c63430008110033608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61052b8061007e6000396000f3fe6080604052600436106100655760003560e01c8063e3a9db1a11610043578063e3a9db1a146100ce578063f2fde38b14610112578063f340fa011461013257600080fd5b806351cff8d91461006a578063715018a61461008c5780638da5cb5b146100a1575b600080fd5b34801561007657600080fd5b5061008a6100853660046104aa565b610145565b005b34801561009857600080fd5b5061008a6101bc565b3480156100ad57600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b3480156100da57600080fd5b506101046100e93660046104aa565b6001600160a01b031660009081526001602052604090205490565b6040519081526020016100c5565b34801561011e57600080fd5b5061008a61012d3660046104aa565b6101d0565b61008a6101403660046104aa565b61024e565b61014d6102c0565b6001600160a01b0381166000818152600160205260408120805491905590610175908261031a565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516101b091815260200190565b60405180910390a25050565b6101c46102c0565b6101ce6000610438565b565b6101d86102c0565b6001600160a01b0381166102425760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61024b81610438565b50565b6102566102c0565b6001600160a01b0381166000908152600160205260408120805434928392916102809084906104ce565b90915550506040518181526001600160a01b038316907f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4906020016101b0565b6000546001600160a01b031633146101ce5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610239565b8047101561036a5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610239565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146103b7576040519150601f19603f3d011682016040523d82523d6000602084013e6103bc565b606091505b50509050806104335760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610239565b505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461024b57600080fd5b6000602082840312156104bc57600080fd5b81356104c781610495565b9392505050565b808201808211156104ef57634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220afc878dfbe039d8a072c282553224cf433161b10d3daec33649cd03f73f1c30f64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061013a5760003560e01c8063905d5e25116100bb578063bf4f1e981161007f578063e2982c2111610059578063e2982c21146103ca578063f2fde38b146103ea578063fdaa0cc71461040a57600080fd5b8063bf4f1e9814610332578063ccd6686314610367578063d1eba6c71461039757600080fd5b8063905d5e251461029a578063a3ec138d146102af578063b759f954146102df578063b7808b2e146102f2578063b8adaa111461031257600080fd5b806333809b6c1161010257806333809b6c14610206578063441822a1146102295780635c975abb1461023e578063715018a61461025d5780638da5cb5b1461027257600080fd5b80630121b93f1461013f5780630a144391146101615780630aebeb4e146101a657806312645ed4146101c657806331b3eb94146101e6575b600080fd5b34801561014b57600080fd5b5061015f61015a3660046120ea565b61042a565b005b34801561016d57600080fd5b5061019161017c366004612118565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b3480156101b257600080fd5b5061015f6101c13660046120ea565b61073d565b3480156101d257600080fd5b506101916101e1366004612135565b61093a565b3480156101f257600080fd5b5061015f610201366004612118565b610984565b34801561021257600080fd5b5061021b610a02565b60405190815260200161019d565b34801561023557600080fd5b5061015f610a13565b34801561024a57600080fd5b50600054600160a01b900460ff16610191565b34801561026957600080fd5b5061015f610ada565b34801561027e57600080fd5b506000546040516001600160a01b03909116815260200161019d565b3480156102a657600080fd5b5061015f610aee565b3480156102bb57600080fd5b506101916102ca366004612118565b60036020526000908152604090205460ff1681565b61015f6102ed3660046120ea565b610baf565b3480156102fe57600080fd5b5061019161030d366004612135565b6112e4565b34801561031e57600080fd5b5061015f61032d3660046120ea565b61139c565b34801561033e57600080fd5b5061035261034d3660046120ea565b6116a2565b60405161019d999897969594939291906121e3565b34801561037357600080fd5b50610191610382366004612118565b60016020526000908152604090205460ff1681565b3480156103a357600080fd5b506103b76103b23660046120ea565b61192e565b60405161019d9796959493929190612273565b3480156103d657600080fd5b5061021b6103e5366004612118565b611c4c565b3480156103f657600080fd5b5061015f610405366004612118565b611cdb565b34801561041657600080fd5b5061015f6104253660046123b2565b611d54565b3360008181526003602052604090205460ff1615156001146104935760405162461bcd60e51b815260206004820152601560248201527f4f6e6c7920766f74657220697320616c6c6f776564000000000000000000000060448201526064015b60405180910390fd5b8160048082815481106104a8576104a861245f565b60009182526020909120600a600b90920201015460ff1660058111156104d0576104d06121ab565b0361051d5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b610525611ee5565b60006004848154811061053a5761053a61245f565b60009182526020909120600a600b90920201015460ff166005811115610562576105626121ab565b1461057f5760405162461bcd60e51b815260040161048a90612475565b600483815481106105925761059261245f565b600091825260208083203384526006600b90930201919091019052604090205460ff16156106025760405162461bcd60e51b815260206004820152601960248201527f566f7465722063616e206f6e6c7920766f7465206f6e63652e00000000000000604482015260640161048a565b6002600484815481106106175761061761245f565b60009182526020909120600a600b90920201015460ff16600581111561063f5761063f6121ab565b0361068c5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f7420766f746520696620616c72656164792072656a656374656400604482015260640161048a565b6004838154811061069f5761069f61245f565b6000918252602082206007600b90920201018054916106bd836124d4565b91905055506001600484815481106106d7576106d761245f565b60009182526020808320338452600b929092029091016006018152604091829020805460ff191693151593909317909255518481527f6387485947507482674c11c0a0f1418b30f5e2fd196714c629bbd4e561828f7191015b60405180910390a1505050565b610745611f32565b80600480828154811061075a5761075a61245f565b60009182526020909120600a600b90920201015460ff166005811115610782576107826121ab565b036107cf5760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b6107d7611ee5565b6003600483815481106107ec576107ec61245f565b60009182526020909120600a600b90920201015460ff166005811115610814576108146121ab565b148061085a57506002600483815481106108305761083061245f565b60009182526020909120600a600b90920201015460ff166005811115610858576108586121ab565b145b6108bd5760405162461bcd60e51b815260206004820152602e60248201527f50726f706f73616c2073746174652073686f756c6420626520617070726f766560448201526d321037b9103932b532b1ba32b21760911b606482015260840161048a565b60048083815481106108d1576108d161245f565b60009182526020909120600a600b9092020101805460ff191660018360058111156108fe576108fe6121ab565b02179055506040518281527f4b9b0f1aa3faaeeee0ef981e1c0dc91a646fd5365cc6d9f2a3c2792b931ba9399060200160405180910390a15050565b60006004838154811061094f5761094f61245f565b600091825260208083206001600160a01b03861684526006600b90930201919091019052604090205460ff1690505b92915050565b6040516351cff8d960e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906351cff8d990602401600060405180830381600087803b1580156109e757600080fd5b505af11580156109fb573d6000803e3d6000fd5b5050505050565b6000610a0c611ee5565b5060045490565b610a1b611ee5565b3360009081526001602052604090205460ff1615610a3857600080fd5b3360009081526003602052604090205460ff1615610a5557600080fd5b3360009081526002602052604090205460ff1615610a7257600080fd5b6000546001600160a01b03163303610a8957600080fd5b33600081815260036020908152604091829020805460ff1916600117905590519182527f3b6d1122be20c447e0ffabe6b11504493f6711532b7376c380078ececacf219991015b60405180910390a1565b610ae2611f32565b610aec6000611f8c565b565b610af6611ee5565b3360009081526001602052604090205460ff1615610b1357600080fd5b3360009081526003602052604090205460ff1615610b3057600080fd5b3360009081526002602052604090205460ff1615610b4d57600080fd5b6000546001600160a01b03163303610b6457600080fd5b33600081815260026020908152604091829020805460ff1916600117905590519182527fc38871933b40c4ffa8d26c750fd2068c580d67b247afac95ad4448e74f5e6ef79101610ad0565b3360008181526002602052604090205460ff161515600114610c0e5760405162461bcd60e51b815260206004820152601860248201527713db9b1e48185c1c1c9bdd995c881a5cc8185b1b1bddd95960421b604482015260640161048a565b816004808281548110610c2357610c2361245f565b60009182526020909120600a600b90920201015460ff166005811115610c4b57610c4b6121ab565b03610c985760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b610ca0611ee5565b600060048481548110610cb557610cb561245f565b90600052602060002090600b02016007015411610d2a5760405162461bcd60e51b815260206004820152602d60248201527f50726f706f73616c20766f7465732073686f756c642062652070726573656e7460448201526c08199bdc88185c1c1c9bdd985b609a1b606482015260840161048a565b600260048481548110610d3f57610d3f61245f565b90600052602060002090600b0201600801541115610d9f5760405162461bcd60e51b815260206004820152601f60248201527f50726f706f73616c20617070726f76616c73206e6f7420657863656564203200604482015260640161048a565b600060048481548110610db457610db461245f565b60009182526020909120600a600b90920201015460ff166005811115610ddc57610ddc6121ab565b14610df95760405162461bcd60e51b815260040161048a90612475565b600060048481548110610e0e57610e0e61245f565b90600052602060002090600b0201600501805490501115610ec25760048381548110610e3c57610e3c61245f565b90600052602060002090600b0201600501600081548110610e5f57610e5f61245f565b6000918252602090912001546001600160a01b03163303610ec25760405162461bcd60e51b815260206004820152601e60248201527f417070726f7665722063616e206f6e6c7920617070726f7665206f6e63650000604482015260640161048a565b60048381548110610ed557610ed561245f565b6000918252602082206008600b9092020101805491610ef3836124d4565b919050555060048381548110610f0b57610f0b61245f565b600091825260208083206005600b9093020191909101805460018101825590835291200180546001600160a01b031916331790556004805484908110610f5357610f5361245f565b90600052602060002090600b0201600801546002036112df57600360048481548110610f8157610f8161245f565b60009182526020909120600a600b9092020101805460ff19166001836005811115610fae57610fae6121ab565b021790555073__Proof_________________________________63fb1ace3460048581548110610fe057610fe061245f565b90600052602060002090600b0201600001600486815481106110045761100461245f565b90600052602060002090600b0201600101600487815481106110285761102861245f565b90600052602060002090600b02016002016004888154811061104c5761104c61245f565b90600052602060002090600b0201600301600489815481106110705761107061245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b031660048a815481106110a8576110a861245f565b90600052602060002090600b020160050160048b815481106110cc576110cc61245f565b90600052602060002090600b02016007015460048c815481106110f1576110f161245f565b90600052602060002090600b02016008015460048d815481106111165761111661245f565b6000918252602091829020600a600b9092020101546040516111469a999897969594939260ff90921691016125a4565b6040516020818303038152906040526040518263ffffffff1660e01b81526004016111719190612663565b602060405180830381865af415801561118e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b29190612676565b600484815481106111c5576111c561245f565b90600052602060002090600b020160090181905550611259600484815481106111f0576111f061245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b03166112546004868154811061122b5761122b61245f565b90600052602060002090600b020160070154670de0b6b3a7640000611fdc90919063ffffffff16565b611fef565b600060016000600486815481106112725761127261245f565b60009182526020808320600b92909202909101600401546001600160a01b031683528281019390935260409182019020805460ff19169315159390931790925590518481527f98c0bb6d6210814cc6a978e62068562220015c52cff19f9e6d948aece9d5ab4e9101610730565b505050565b6000805b600484815481106112fb576112fb61245f565b90600052602060002090600b0201600501805490508160ff16101561139257826001600160a01b0316600485815481106113375761133761245f565b90600052602060002090600b02016005018260ff168154811061135c5761135c61245f565b6000918252602090912001546001600160a01b03160361138057600191505061097e565b8061138a8161268f565b9150506112e8565b5060009392505050565b3360008181526002602052604090205460ff1615156001146113fb5760405162461bcd60e51b815260206004820152601860248201527713db9b1e48185c1c1c9bdd995c881a5cc8185b1b1bddd95960421b604482015260640161048a565b8160048082815481106114105761141061245f565b60009182526020909120600a600b90920201015460ff166005811115611438576114386121ab565b036114855760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f77656400604482015260640161048a565b61148d611ee5565b6000600484815481106114a2576114a261245f565b90600052602060002090600b020160050180549050111561156b57600483815481106114d0576114d061245f565b90600052602060002090600b02016005016000815481106114f3576114f361245f565b6000918252602090912001546001600160a01b0316330361156b5760405162461bcd60e51b815260206004820152602c60248201527f466972737420617070726f7665722063616e6e6f742072656a6563742074686560448201526b1030b8383634b1b0ba34b7b760a11b606482015260840161048a565b6000600484815481106115805761158061245f565b60009182526020909120600a600b90920201015460ff1660058111156115a8576115a86121ab565b146115c55760405162461bcd60e51b815260040161048a90612475565b600483815481106115d8576115d861245f565b600091825260208083206005600b9093020191909101805460018101825590835291200180546001600160a01b031916331790556004805460029190859081106116245761162461245f565b60009182526020909120600a600b9092020101805460ff19166001836005811115611651576116516121ab565b021790555033600090815260016020818152604092839020805460ff191690921790915590518481527fdc40839d55e815edf4d9e581b370ff6ddfa8ba7985ea1fa97103cd409f0136ee9101610730565b600481815481106116b257600080fd5b90600052602060002090600b02016000915090508060000180546116d5906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611701906124ed565b801561174e5780601f106117235761010080835404028352916020019161174e565b820191906000526020600020905b81548152906001019060200180831161173157829003601f168201915b505050505090806001018054611763906124ed565b80601f016020809104026020016040519081016040528092919081815260200182805461178f906124ed565b80156117dc5780601f106117b1576101008083540402835291602001916117dc565b820191906000526020600020905b8154815290600101906020018083116117bf57829003601f168201915b5050505050908060020180546117f1906124ed565b80601f016020809104026020016040519081016040528092919081815260200182805461181d906124ed565b801561186a5780601f1061183f5761010080835404028352916020019161186a565b820191906000526020600020905b81548152906001019060200180831161184d57829003601f168201915b50505050509080600301805461187f906124ed565b80601f01602080910402602001604051908101604052809291908181526020018280546118ab906124ed565b80156118f85780601f106118cd576101008083540402835291602001916118f8565b820191906000526020600020905b8154815290600101906020018083116118db57829003601f168201915b5050506004840154600785015460088601546009870154600a9097015495966001600160a01b0390931695919450925060ff1689565b606080600060606000806000611942611ee5565b60045461199f5760405162461bcd60e51b815260206004820152602560248201527f54686572652073686f756c6420626520612070726f706f73616c20746f20726560448201526430b21037b760d91b606482015260840161048a565b600488815481106119b2576119b261245f565b90600052602060002090600b0201600001600489815481106119d6576119d661245f565b90600052602060002090600b020160010160048a815481106119fa576119fa61245f565b90600052602060002090600b020160040160009054906101000a90046001600160a01b031660048b81548110611a3257611a3261245f565b90600052602060002090600b020160050160048c81548110611a5657611a5661245f565b90600052602060002090600b02016007015460048d81548110611a7b57611a7b61245f565b90600052602060002090600b02016009015460048e81548110611aa057611aa061245f565b90600052602060002090600b0201600a0160009054906101000a900460ff16868054611acb906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611af7906124ed565b8015611b445780601f10611b1957610100808354040283529160200191611b44565b820191906000526020600020905b815481529060010190602001808311611b2757829003601f168201915b50505050509650858054611b57906124ed565b80601f0160208091040260200160405190810160405280929190818152602001828054611b83906124ed565b8015611bd05780601f10611ba557610100808354040283529160200191611bd0565b820191906000526020600020905b815481529060010190602001808311611bb357829003601f168201915b5050505050955083805480602002602001604051908101604052809291908181526020018280548015611c2c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611c0e575b505050505093509650965096509650965096509650919395979092949650565b6040516371d4ed8d60e11b81526001600160a01b0382811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063e3a9db1a90602401602060405180830381865afa158015611cb7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e9190612676565b611ce3611f32565b6001600160a01b038116611d485760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161048a565b611d5181611f8c565b50565b611d5c611ee5565b3360009081526001602052604090205460ff1615611d7957600080fd5b3360009081526003602052604090205460ff1615611d9657600080fd5b3360009081526002602052604090205460ff1615611db357600080fd5b6000546001600160a01b03163303611dca57600080fd5b60048054600181018255600091909152600b027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180611e0a86826126fc565b5060018101611e1985826126fc565b5060028101611e2884826126fc565b5060038101611e3783826126fc565b506004810180546001600160a01b031916331790556040805160008152602081019182905251611e6b916005840191612070565b5060006008820181905560098201819055600a8201805460ff19908116909155338083526001602081815260409485902080549094169091179092556004548351908152918201527f87548bfe9b4f8ecb6b1bc3a07fa980ae775360df21b3e966464afadee044941a910160405180910390a15050505050565b600054600160a01b900460ff1615610aec5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161048a565b6000546001600160a01b03163314610aec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161048a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000611fe882846127bc565b9392505050565b60405163f340fa0160e01b81526001600160a01b0383811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063f340fa019083906024016000604051808303818588803b15801561205357600080fd5b505af1158015612067573d6000803e3d6000fd5b50505050505050565b8280548282559060005260206000209081019282156120c5579160200282015b828111156120c557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190612090565b506120d19291506120d5565b5090565b5b808211156120d157600081556001016120d6565b6000602082840312156120fc57600080fd5b5035919050565b6001600160a01b0381168114611d5157600080fd5b60006020828403121561212a57600080fd5b8135611fe881612103565b6000806040838503121561214857600080fd5b82359150602083013561215a81612103565b809150509250929050565b6000815180845260005b8181101561218b5760208185018101518683018201520161216f565b506000602082860101526020601f19601f83011685010191505092915050565b634e487b7160e01b600052602160045260246000fd5b600681106121df57634e487b7160e01b600052602160045260246000fd5b9052565b60006101208083526121f78184018d612165565b9050828103602084015261220b818c612165565b9050828103604084015261221f818b612165565b90508281036060840152612233818a612165565b9150506001600160a01b03871660808301528560a08301528460c08301528360e08301526122656101008301846121c1565b9a9950505050505050505050565b60e08152600061228660e083018a612165565b602083820381850152612299828b612165565b6001600160a01b038a8116604087015285820360608701528951808352838b019450909183019060005b818110156122e15785518416835294840194918401916001016122c3565b5050809450505050508460808301528360a083015261230360c08301846121c1565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261233657600080fd5b813567ffffffffffffffff808211156123515761235161230f565b604051601f8301601f19908116603f011681019082821181831017156123795761237961230f565b8160405283815286602085880101111561239257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156123c857600080fd5b843567ffffffffffffffff808211156123e057600080fd5b6123ec88838901612325565b9550602087013591508082111561240257600080fd5b61240e88838901612325565b9450604087013591508082111561242457600080fd5b61243088838901612325565b9350606087013591508082111561244657600080fd5b5061245387828801612325565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b60208082526029908201527f50726f706f73616c207374617475732073686f756c64207374696c6c206265206040820152681cdd589b5a5d1d195960ba1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000600182016124e6576124e66124be565b5060010190565b600181811c9082168061250157607f821691505b60208210810361252157634e487b7160e01b600052602260045260246000fd5b50919050565b60008154612534816124ed565b808552602060018381168015612551576001811461256b57612599565b60ff1985168884015283151560051b880183019550612599565b866000528260002060005b858110156125915781548a8201860152908301908401612576565b890184019650505b505050505092915050565b60006101208083526125b88184018d612527565b90506020838203818501526125cd828d612527565b915083820360408501526125e1828c612527565b915083820360608501526125f5828b612527565b6001600160a01b038a8116608087015285820360a0870152895480835260008b8152848120955091928401915b81811015612640578554841683526001958601959285019201612622565b5050809450505050508460c08301528360e08301526122656101008301846121c1565b602081526000611fe86020830184612165565b60006020828403121561268857600080fd5b5051919050565b600060ff821660ff81036126a5576126a56124be565b60010192915050565b601f8211156112df57600081815260208120601f850160051c810160208610156126d55750805b601f850160051c820191505b818110156126f4578281556001016126e1565b505050505050565b815167ffffffffffffffff8111156127165761271661230f565b61272a8161272484546124ed565b846126ae565b602080601f83116001811461275f57600084156127475750858301515b600019600386901b1c1916600185901b1785556126f4565b600085815260208120601f198616915b8281101561278e5788860151825594840194600190910190840161276f565b50858210156127ac5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b808202811582820484141761097e5761097e6124be56fea264697066735822122000cea7b417828296b452d86e8ba3e35119c382545e3204f46017738bfcc4e6bc64736f6c63430008110033",
  "immutableReferences": {
    "227": [
      {
        "length": 32,
        "start": 2467
      },
      {
        "length": 32,
        "start": 7278
      },
      {
        "length": 32,
        "start": 8206
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:19610:11",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:11",
                "type": ""
              }
            ],
            "src": "14:180:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "244:109:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "267:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "278:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "285:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "274:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "274:54:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "264:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "264:65:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "257:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "257:73:11"
                  },
                  "nodeType": "YulIf",
                  "src": "254:93:11"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "233:5:11",
                "type": ""
              }
            ],
            "src": "199:154:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "428:177:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "474:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "483:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "486:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "476:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "476:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "476:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "449:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "458:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "445:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "445:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "441:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "438:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "499:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "525:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "512:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "503:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "569:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "544:24:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:31:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "594:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "394:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "405:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "417:6:11",
                "type": ""
              }
            ],
            "src": "358:247:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "705:92:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "715:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "727:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "723:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "715:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "757:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "782:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "775:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "775:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "768:6:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "768:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:41:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "750:41:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "674:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "685:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "696:4:11",
                "type": ""
              }
            ],
            "src": "610:187:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "889:228:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "935:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "944:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "937:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "937:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "937:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "910:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "919:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "906:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "906:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "931:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "902:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "902:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "899:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "960:33:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "983:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "970:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:23:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "960:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1002:45:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1032:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1043:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1028:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1028:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1015:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:32:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1006:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1081:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1056:24:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1056:31:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1096:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1106:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1096:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "847:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "858:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "870:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "878:6:11",
                "type": ""
              }
            ],
            "src": "802:315:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1200:177:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1246:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1255:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1258:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1248:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1248:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1248:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1221:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1230:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1217:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1217:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1242:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1213:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "1210:52:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1271:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1297:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1284:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1284:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1275:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1341:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1316:24:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:31:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1356:15:11",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1366:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1356:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1166:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1177:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1189:6:11",
                "type": ""
              }
            ],
            "src": "1122:255:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1483:76:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1493:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1505:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1516:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1501:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1501:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1493:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1546:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1528:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1528:25:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1452:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1463:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1474:4:11",
                "type": ""
              }
            ],
            "src": "1382:177:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1665:125:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1675:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1687:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1698:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1683:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1683:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1675:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1717:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1732:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1740:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1728:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1728:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1710:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1710:74:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1710:74:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1634:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1645:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1656:4:11",
                "type": ""
              }
            ],
            "src": "1564:226:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1845:373:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1855:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1875:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1869:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:12:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1859:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1897:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1902:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1890:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1890:19:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1918:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1927:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1922:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1989:110:11",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2003:14:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2013:4:11",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2007:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2045:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2050:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2041:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2041:11:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2054:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2037:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2037:20:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2073:5:11"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2080:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2069:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2069:13:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2084:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2065:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2065:22:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2059:5:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2059:29:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2030:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2030:59:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2030:59:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1948:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1951:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1945:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1959:21:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1961:17:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1970:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1973:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1966:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1966:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1961:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1941:3:11",
                    "statements": []
                  },
                  "src": "1937:162:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2123:3:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2128:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2119:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2119:16:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2137:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2115:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2115:27:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2144:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2108:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2108:38:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2108:38:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2155:57:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2170:3:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2183:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2191:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2179:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2179:15:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2200:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2196:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2196:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2175:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2175:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2166:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2166:39:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2207:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2162:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2155:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1822:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1829:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1837:3:11",
                "type": ""
              }
            ],
            "src": "1795:423:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2255:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2272:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2279:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2284:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2275:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2265:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2265:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2265:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2312:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:4:11",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2305:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2305:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2305:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2336:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2339:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2329:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2329:15:11"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2223:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2402:186:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2444:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2465:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2472:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2477:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2468:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2468:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2458:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2458:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2458:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2509:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2512:4:11",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2502:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2502:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2502:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2537:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2540:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2530:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2530:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2530:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2425:5:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2432:1:11",
                            "type": "",
                            "value": "6"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2422:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2422:12:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2415:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2415:20:11"
                  },
                  "nodeType": "YulIf",
                  "src": "2412:143:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2571:3:11"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2576:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2564:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2564:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2564:18:11"
                }
              ]
            },
            "name": "abi_encode_enum_State",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2386:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2393:3:11",
                "type": ""
              }
            ],
            "src": "2355:233:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3022:750:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3032:13:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3042:3:11",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3036:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3061:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3072:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3054:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3054:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3054:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3084:59:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3116:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3128:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3139:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3098:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3098:45:11"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3088:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3163:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3174:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3159:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3159:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "3183:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3191:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3179:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3179:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3152:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3152:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3152:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3211:47:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3243:6:11"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3251:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3225:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3225:33:11"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "3215:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3278:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3289:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3274:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "3298:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3306:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3294:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3294:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3267:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3267:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3267:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3326:47:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3358:6:11"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "3366:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3340:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:33:11"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "3330:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3393:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3404:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3389:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3389:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "3413:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3421:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3409:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3409:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3382:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3382:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3382:50:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3441:41:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3467:6:11"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "3475:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "3449:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3449:33:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3441:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3502:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3513:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3498:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3498:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "3523:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3531:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3519:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3519:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3491:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3491:84:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3491:84:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3595:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3606:3:11",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3591:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3591:19:11"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "3612:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3584:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3584:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3584:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3639:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3650:3:11",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3635:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3635:19:11"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "3656:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3628:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3683:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3694:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3679:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3679:19:11"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "3700:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3672:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3672:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3672:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "3738:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3750:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3761:3:11",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3746:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3746:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_State",
                      "nodeType": "YulIdentifier",
                      "src": "3716:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3716:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3716:50:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_uint256_t_uint256_t_bytes32_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_uint256_t_uint256_t_bytes32_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2927:9:11",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "2938:6:11",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "2946:6:11",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "2954:6:11",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2962:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2970:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2978:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2986:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2994:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3002:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3013:4:11",
                "type": ""
              }
            ],
            "src": "2593:1179:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4160:950:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4177:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4188:3:11",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4170:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4170:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4170:22:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4201:60:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4233:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4245:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4256:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4241:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4241:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4215:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4215:46:11"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "4205:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4270:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4280:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4274:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4302:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4313:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "4322:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4330:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4291:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4291:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4350:47:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4382:6:11"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "4390:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "4364:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:33:11"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "4354:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4406:52:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4416:42:11",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "4410:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4478:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4489:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4474:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4474:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4498:6:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "4506:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4494:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4494:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4467:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4467:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4467:43:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4530:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4541:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4526:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4526:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "4550:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4558:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4546:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4546:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4519:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4519:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4519:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4578:17:11",
                  "value": {
                    "name": "tail_2",
                    "nodeType": "YulIdentifier",
                    "src": "4589:6:11"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "4582:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4604:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4624:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4618:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4618:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4608:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "4647:6:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4655:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4640:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4640:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4640:22:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4671:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "4682:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4690:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4678:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4678:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4671:3:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4702:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4720:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "4728:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4716:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4716:15:11"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "4706:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4740:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "4749:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "4744:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4808:129:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4829:3:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "4844:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "4838:5:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4838:13:11"
                                },
                                {
                                  "name": "_2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4853:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "4834:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4834:22:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4822:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4822:35:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4822:35:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4870:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4881:3:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4886:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4877:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4877:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4870:3:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4902:25:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4916:6:11"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "4924:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4912:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4912:15:11"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4902:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "4770:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4773:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4767:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4767:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "4781:18:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4783:14:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "4792:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4795:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "4788:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4788:9:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "4783:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "4763:3:11",
                    "statements": []
                  },
                  "src": "4759:178:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4946:11:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4954:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4946:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4977:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4988:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4973:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4973:19:11"
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4994:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4966:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4966:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4966:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5021:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5032:3:11",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5017:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5017:19:11"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "5038:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5010:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5010:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5010:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "5076:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5088:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5099:3:11",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5084:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5084:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_State",
                      "nodeType": "YulIdentifier",
                      "src": "5054:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5054:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5054:50:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_bytes32_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_bytes32_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4081:9:11",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4092:6:11",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4100:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4108:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4116:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4124:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4132:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4140:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4151:4:11",
                "type": ""
              }
            ],
            "src": "3777:1333:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5147:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5164:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5171:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5176:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5167:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5167:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5157:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5157:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5157:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5204:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5207:4:11",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5197:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5197:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5197:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5228:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5231:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5221:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5221:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5221:15:11"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5115:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5300:666:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5349:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5358:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5361:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5351:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5351:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5351:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5328:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5336:4:11",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5324:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5324:17:11"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "5343:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "5320:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5320:27:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5313:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5313:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5310:55:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5374:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "5397:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5384:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5384:20:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5378:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5413:28:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5423:18:11",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "5417:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5464:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5466:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5466:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5466:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5456:2:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "5460:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5453:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5453:10:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5450:36:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5495:17:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5509:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "5505:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5505:7:11"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "5499:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5521:23:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5541:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5535:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5535:9:11"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "5525:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5553:71:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5575:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5599:2:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5603:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5595:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5595:13:11"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5610:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5591:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5591:22:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5615:2:11",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5587:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5587:31:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "5620:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5583:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5583:40:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5571:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5571:53:11"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5557:10:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5683:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5685:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5685:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5685:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5642:10:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "5654:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5639:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5639:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5662:10:11"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5674:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5659:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5659:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5636:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5636:46:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5633:72:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5721:2:11",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5725:10:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5714:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5714:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5714:22:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5752:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5760:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5745:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5745:18:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5745:18:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5811:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5820:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5823:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5813:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5813:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5813:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5786:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5794:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5782:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5782:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5799:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5778:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5778:26:11"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "5806:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5775:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5775:35:11"
                  },
                  "nodeType": "YulIf",
                  "src": "5772:55:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5853:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5861:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5849:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5849:17:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "5872:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5880:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5868:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5868:17:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5887:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "5836:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5836:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5836:54:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5914:6:11"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5922:2:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5910:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5910:15:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5927:4:11",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:26:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5934:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:37:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:37:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5945:15:11",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "5954:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "5945:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "5274:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5282:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "5290:5:11",
                "type": ""
              }
            ],
            "src": "5247:719:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6132:783:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6179:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6188:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6191:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6181:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6181:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6181:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6153:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6162:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6149:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6149:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6174:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6145:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6145:33:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6142:53:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6204:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6231:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6218:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6218:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "6208:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6250:28:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6260:18:11",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6254:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6305:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6314:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6317:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6307:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6307:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6307:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "6293:6:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6301:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6290:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6290:14:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6287:34:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6330:60:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6362:9:11"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "6373:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6358:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6358:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6382:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6340:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6340:50:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6330:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6399:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6432:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6443:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6428:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6428:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6415:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6415:32:11"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "6403:8:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6476:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6485:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6488:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6478:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6478:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6478:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "6462:8:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6472:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6459:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6459:16:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6456:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6501:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6533:9:11"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "6544:8:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6529:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6529:24:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6555:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6511:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6511:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "6501:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6572:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6605:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6616:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6601:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6601:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6588:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6588:32:11"
                  },
                  "variables": [
                    {
                      "name": "offset_2",
                      "nodeType": "YulTypedName",
                      "src": "6576:8:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6649:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6658:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6661:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6651:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6651:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6651:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_2",
                        "nodeType": "YulIdentifier",
                        "src": "6635:8:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6645:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6632:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6632:16:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6629:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6674:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6706:9:11"
                          },
                          {
                            "name": "offset_2",
                            "nodeType": "YulIdentifier",
                            "src": "6717:8:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6702:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6702:24:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6728:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6684:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "6674:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6745:48:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6778:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6789:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6774:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6774:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "6761:12:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6761:32:11"
                  },
                  "variables": [
                    {
                      "name": "offset_3",
                      "nodeType": "YulTypedName",
                      "src": "6749:8:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6822:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6831:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6834:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6824:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6824:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6824:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_3",
                        "nodeType": "YulIdentifier",
                        "src": "6808:8:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "6818:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6805:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:16:11"
                  },
                  "nodeType": "YulIf",
                  "src": "6802:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6847:62:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6879:9:11"
                          },
                          {
                            "name": "offset_3",
                            "nodeType": "YulIdentifier",
                            "src": "6890:8:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6875:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6875:24:11"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "6901:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string",
                      "nodeType": "YulIdentifier",
                      "src": "6857:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6857:52:11"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "6847:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6074:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6085:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6097:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6105:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6113:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6121:6:11",
                "type": ""
              }
            ],
            "src": "5971:944:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7094:171:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7111:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7122:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7104:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7104:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7104:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7145:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7156:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7141:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7141:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7161:2:11",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7134:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7134:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7134:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7184:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7195:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7180:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7180:18:11"
                      },
                      {
                        "hexValue": "4f6e6c7920766f74657220697320616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7200:23:11",
                        "type": "",
                        "value": "Only voter is allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7173:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7173:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7173:51:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7233:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7245:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7256:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7241:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7241:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7233:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a4ed89fa2f171494e93272cc7b869ed69bb1b885cec91064a15ada8a2e9f42f2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7071:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7085:4:11",
                "type": ""
              }
            ],
            "src": "6920:345:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7302:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7319:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7326:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7331:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7322:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7322:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7312:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7312:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7312:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7359:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7362:4:11",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7352:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7352:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7352:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7383:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7386:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7376:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7376:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7376:15:11"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "7270:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7576:181:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7593:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7604:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7586:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7586:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7586:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7627:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7638:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7623:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7623:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7643:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7616:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7616:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7616:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7666:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7677:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7662:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7662:18:11"
                      },
                      {
                        "hexValue": "4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7682:33:11",
                        "type": "",
                        "value": "Only open proposals are allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7655:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7655:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7655:61:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7725:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7737:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7748:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7733:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7733:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7725:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_352a142377b9a4c12807000a01c867d6704dfd507b82beaa8bd1658bd8f2e516__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7553:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7567:4:11",
                "type": ""
              }
            ],
            "src": "7402:355:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7936:231:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7953:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7964:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7946:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7946:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7987:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7998:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7983:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7983:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8003:2:11",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7976:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7976:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7976:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8026:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8037:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8022:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8022:18:11"
                      },
                      {
                        "hexValue": "50726f706f73616c207374617475732073686f756c64207374696c6c20626520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8042:34:11",
                        "type": "",
                        "value": "Proposal status should still be "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8015:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8015:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8015:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8097:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8108:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8093:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8093:18:11"
                      },
                      {
                        "hexValue": "7375626d6974746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8113:11:11",
                        "type": "",
                        "value": "submitted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8086:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8086:39:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8086:39:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8134:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8146:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8157:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8142:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8142:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8134:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7913:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7927:4:11",
                "type": ""
              }
            ],
            "src": "7762:405:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8346:175:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8363:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8374:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8356:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8356:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8356:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8397:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8408:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8393:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8393:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8413:2:11",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8386:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8386:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8386:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8436:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8447:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8432:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8432:18:11"
                      },
                      {
                        "hexValue": "566f7465722063616e206f6e6c7920766f7465206f6e63652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8452:27:11",
                        "type": "",
                        "value": "Voter can only vote once."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8425:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8425:55:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8425:55:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8489:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8501:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8512:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8497:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8497:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8489:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_312e135ffbe4e255aad2d472622b5941207f58a868ef10b8a7ca1e5b538d1bc1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8323:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8337:4:11",
                "type": ""
              }
            ],
            "src": "8172:349:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8700:181:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8717:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8728:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8710:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8710:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8710:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8751:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8762:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8747:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8747:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8767:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8740:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8740:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8740:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8790:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8801:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8786:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8786:18:11"
                      },
                      {
                        "hexValue": "43616e6e6f7420766f746520696620616c72656164792072656a6563746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8806:33:11",
                        "type": "",
                        "value": "Cannot vote if already rejected"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8779:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8779:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8779:61:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8849:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8861:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8872:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8857:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8857:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8849:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_294613bc706ea900ba3abf6597b1777c99fac053793d24310e1c06ca0b5d327f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8677:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8691:4:11",
                "type": ""
              }
            ],
            "src": "8526:355:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8918:95:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8935:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8942:3:11",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8947:10:11",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8938:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8938:20:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8928:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8928:31:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8928:31:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8975:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8978:4:11",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8968:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8968:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8999:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9002:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8992:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8992:15:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8992:15:11"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "8886:127:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9065:88:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9096:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9098:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9098:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9098:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9081:5:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9092:1:11",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9088:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9088:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "9078:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9078:17:11"
                  },
                  "nodeType": "YulIf",
                  "src": "9075:43:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9127:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9138:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9145:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9134:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9134:13:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "9127:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9047:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "9057:3:11",
                "type": ""
              }
            ],
            "src": "9018:135:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9332:236:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9349:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9360:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9342:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9342:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9342:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9383:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9394:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9379:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9379:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9399:2:11",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9372:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9372:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9372:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9422:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9433:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9418:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9418:18:11"
                      },
                      {
                        "hexValue": "50726f706f73616c2073746174652073686f756c6420626520617070726f7665",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9438:34:11",
                        "type": "",
                        "value": "Proposal state should be approve"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9411:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9411:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9411:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9493:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9504:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9489:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9489:18:11"
                      },
                      {
                        "hexValue": "64206f722072656a65637465642e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9509:16:11",
                        "type": "",
                        "value": "d or rejected."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9482:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9482:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9482:44:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9535:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9547:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9558:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9543:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9543:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9535:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e945accec4963faa60b880facca57fbdb41b762bbda9c489314a0b8d9516652__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9309:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9323:4:11",
                "type": ""
              }
            ],
            "src": "9158:410:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9690:125:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9700:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9712:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9723:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9708:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9708:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9700:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9742:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9757:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9765:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9753:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9753:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9735:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9735:74:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9735:74:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9659:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9670:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9681:4:11",
                "type": ""
              }
            ],
            "src": "9573:242:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9994:174:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10011:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10022:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10004:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10004:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10004:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10045:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10056:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10041:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10041:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10061:2:11",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10034:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10034:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10034:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10084:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10095:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10080:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10080:18:11"
                      },
                      {
                        "hexValue": "4f6e6c7920617070726f76657220697320616c6c6f776564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10100:26:11",
                        "type": "",
                        "value": "Only approver is allowed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10073:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10073:54:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10073:54:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10136:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10148:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10159:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10144:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10144:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10136:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7a7ee7d584e25d0f1b6e810a2c61c245981ac08c3cdf79dcbd9cc118ad0f1bc9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9971:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9985:4:11",
                "type": ""
              }
            ],
            "src": "9820:348:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10347:235:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10364:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10375:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10357:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10357:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10357:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10398:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10409:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10394:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10394:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10414:2:11",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10387:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10387:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10387:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10437:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10448:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10433:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10433:18:11"
                      },
                      {
                        "hexValue": "50726f706f73616c20766f7465732073686f756c642062652070726573656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10453:34:11",
                        "type": "",
                        "value": "Proposal votes should be present"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10426:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10426:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10426:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10508:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10519:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10504:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10504:18:11"
                      },
                      {
                        "hexValue": "20666f7220617070726f76616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10524:15:11",
                        "type": "",
                        "value": " for approval"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10497:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10497:43:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10497:43:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10549:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10561:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10572:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10557:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10557:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10549:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_08ffc111a0ed98409a55085016b51ffdaf90681463006f6c12b322f42f4ff119__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10324:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10338:4:11",
                "type": ""
              }
            ],
            "src": "10173:409:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10761:181:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10778:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10789:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10771:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10771:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10812:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10823:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10808:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10808:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10828:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10801:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10801:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10801:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10851:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10862:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10847:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10847:18:11"
                      },
                      {
                        "hexValue": "50726f706f73616c20617070726f76616c73206e6f74206578636565642032",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10867:33:11",
                        "type": "",
                        "value": "Proposal approvals not exceed 2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10840:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10840:61:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10840:61:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10910:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10922:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10933:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10918:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10918:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10910:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_23cc21b0be89388eaddd27462435586264c4df8010ef33707d8837ebd3294f5f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10738:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10752:4:11",
                "type": ""
              }
            ],
            "src": "10587:355:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11121:180:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11138:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11149:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11131:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11131:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11131:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11172:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11183:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11168:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11168:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11188:2:11",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11161:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11161:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11161:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11211:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11222:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11207:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11207:18:11"
                      },
                      {
                        "hexValue": "417070726f7665722063616e206f6e6c7920617070726f7665206f6e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11227:32:11",
                        "type": "",
                        "value": "Approver can only approve once"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11200:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11200:60:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11200:60:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11269:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11281:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11292:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11277:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11277:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11269:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_51a9fd02ae513733ddc16cb73ca8d0327f466d4638dccfd4ee134b5191efef2b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11098:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11112:4:11",
                "type": ""
              }
            ],
            "src": "10947:354:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11361:325:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11371:22:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11385:1:11",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11388:4:11"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "11381:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11381:12:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "11371:6:11"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11402:38:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "11432:4:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11438:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11428:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11428:12:11"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "11406:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11479:31:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11481:27:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "11495:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11503:4:11",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "11491:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11491:17:11"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11481:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11459:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11452:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11452:26:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11449:61:11"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11569:111:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11590:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11597:3:11",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "11602:10:11",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "11593:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11593:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11583:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11583:31:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11583:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11634:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11637:4:11",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11627:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11627:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11627:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11662:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11665:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11655:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11655:15:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11655:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "11525:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11548:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11556:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "11545:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11545:14:11"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "11522:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11522:38:11"
                  },
                  "nodeType": "YulIf",
                  "src": "11519:161:11"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11341:4:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11350:6:11",
                "type": ""
              }
            ],
            "src": "11306:380:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11747:65:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11764:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "11767:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11757:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11757:14:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11757:14:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11780:26:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11798:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11801:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "11788:9:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11788:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "11780:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "11730:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "11738:4:11",
                "type": ""
              }
            ],
            "src": "11691:121:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11875:714:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11885:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11908:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "11902:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11902:12:11"
                  },
                  "variables": [
                    {
                      "name": "slotValue",
                      "nodeType": "YulTypedName",
                      "src": "11889:9:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11923:50:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "11963:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "extract_byte_array_length",
                      "nodeType": "YulIdentifier",
                      "src": "11937:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11937:36:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "11927:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11989:3:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11994:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11982:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11982:19:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11982:19:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12010:14:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12020:4:11",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12014:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12033:11:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "12043:1:11",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "12037:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12094:139:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "12119:3:11"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "12124:2:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12115:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12115:12:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "slotValue",
                                      "nodeType": "YulIdentifier",
                                      "src": "12133:9:11"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12148:3:11",
                                          "type": "",
                                          "value": "255"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "not",
                                        "nodeType": "YulIdentifier",
                                        "src": "12144:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12144:8:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "12129:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12129:24:11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12108:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12108:46:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12108:46:11"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12167:56:11",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "12182:3:11"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12191:1:11",
                                          "type": "",
                                          "value": "5"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12208:6:11"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "iszero",
                                                "nodeType": "YulIdentifier",
                                                "src": "12201:6:11"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12201:14:11"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "iszero",
                                            "nodeType": "YulIdentifier",
                                            "src": "12194:6:11"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12194:22:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "12187:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "12187:30:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12178:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12178:40:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12220:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12174:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12174:49:11"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "12167:3:11"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12087:146:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12092:1:11",
                        "type": "",
                        "value": "0"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "12249:334:11",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12270:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "12273:5:11"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "12263:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12263:16:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "12263:16:11"
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "12292:31:11",
                            "value": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "12317:1:11",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12320:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "keccak256",
                                "nodeType": "YulIdentifier",
                                "src": "12307:9:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12307:16:11"
                            },
                            "variables": [
                              {
                                "name": "dataPos",
                                "nodeType": "YulTypedName",
                                "src": "12296:7:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "12336:10:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12345:1:11",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "12340:1:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "12413:120:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "pos",
                                                "nodeType": "YulIdentifier",
                                                "src": "12446:3:11"
                                              },
                                              {
                                                "name": "i",
                                                "nodeType": "YulIdentifier",
                                                "src": "12451:1:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "12442:3:11"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "12442:11:11"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "12455:2:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "12438:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12438:20:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "dataPos",
                                            "nodeType": "YulIdentifier",
                                            "src": "12466:7:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "12460:5:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "12460:14:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "12431:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12431:44:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "12431:44:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12492:27:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dataPos",
                                        "nodeType": "YulIdentifier",
                                        "src": "12507:7:11"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "12516:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12503:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12503:16:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dataPos",
                                      "nodeType": "YulIdentifier",
                                      "src": "12492:7:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "12370:1:11"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "12373:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "12367:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12367:13:11"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "12381:19:11",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "12383:15:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "12392:1:11"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "12395:2:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12388:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12388:10:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12383:1:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "12363:3:11",
                              "statements": []
                            },
                            "src": "12359:174:11"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "12546:27:11",
                            "value": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "12561:3:11"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "12566:1:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "12557:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "12557:11:11"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "12570:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "12553:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "12553:20:11"
                            },
                            "variableNames": [
                              {
                                "name": "ret",
                                "nodeType": "YulIdentifier",
                                "src": "12546:3:11"
                              }
                            ]
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "12242:341:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12247:1:11",
                        "type": "",
                        "value": "1"
                      }
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "slotValue",
                        "nodeType": "YulIdentifier",
                        "src": "12064:9:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "12075:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "12060:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12060:18:11"
                  },
                  "nodeType": "YulSwitch",
                  "src": "12053:530:11"
                }
              ]
            },
            "name": "abi_encode_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11852:5:11",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11859:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "11867:3:11",
                "type": ""
              }
            ],
            "src": "11817:772:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13074:1260:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13084:13:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13094:3:11",
                    "type": "",
                    "value": "288"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13088:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13113:9:11"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "13124:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13106:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13106:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13106:21:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13136:67:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13176:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13188:9:11"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13199:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13184:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13184:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "13150:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13150:53:11"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "13140:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13212:12:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13222:2:11",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "13216:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13244:9:11"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "13255:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13240:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13240:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "13264:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13272:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13260:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13260:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13233:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13233:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13233:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13292:55:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13332:6:11"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "13340:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "13306:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13306:41:11"
                  },
                  "variables": [
                    {
                      "name": "tail_2",
                      "nodeType": "YulTypedName",
                      "src": "13296:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13367:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13378:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13363:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13363:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_2",
                            "nodeType": "YulIdentifier",
                            "src": "13387:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13395:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13383:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13383:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13356:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13356:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13356:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13415:55:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13455:6:11"
                      },
                      {
                        "name": "tail_2",
                        "nodeType": "YulIdentifier",
                        "src": "13463:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "13429:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13429:41:11"
                  },
                  "variables": [
                    {
                      "name": "tail_3",
                      "nodeType": "YulTypedName",
                      "src": "13419:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13490:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13501:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13486:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13486:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_3",
                            "nodeType": "YulIdentifier",
                            "src": "13510:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13518:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13506:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13506:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13479:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13479:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13479:50:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13538:55:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "13578:6:11"
                      },
                      {
                        "name": "tail_3",
                        "nodeType": "YulIdentifier",
                        "src": "13586:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "13552:25:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13552:41:11"
                  },
                  "variables": [
                    {
                      "name": "tail_4",
                      "nodeType": "YulTypedName",
                      "src": "13542:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13602:52:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13612:42:11",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "13606:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13674:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13685:3:11",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13670:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13670:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "13695:6:11"
                          },
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "13703:2:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13691:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13691:15:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13663:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13663:44:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13663:44:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13727:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13738:3:11",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13723:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13723:19:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_4",
                            "nodeType": "YulIdentifier",
                            "src": "13748:6:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13756:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13744:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13744:22:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13716:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13716:51:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13716:51:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13776:17:11",
                  "value": {
                    "name": "tail_4",
                    "nodeType": "YulIdentifier",
                    "src": "13787:6:11"
                  },
                  "variables": [
                    {
                      "name": "pos",
                      "nodeType": "YulTypedName",
                      "src": "13780:3:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13802:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "13822:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "sload",
                      "nodeType": "YulIdentifier",
                      "src": "13816:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13816:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13806:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "tail_4",
                        "nodeType": "YulIdentifier",
                        "src": "13845:6:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13853:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13838:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13838:22:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13838:22:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13869:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail_4",
                        "nodeType": "YulIdentifier",
                        "src": "13880:6:11"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "13888:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13876:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13876:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13869:3:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13907:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "13910:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13900:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13900:17:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13900:17:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13926:30:11",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13950:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "13953:2:11"
                      }
                    ],
                    "functionName": {
                      "name": "keccak256",
                      "nodeType": "YulIdentifier",
                      "src": "13940:9:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13940:16:11"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "13930:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13965:10:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13974:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "13969:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14033:128:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "14054:3:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "srcPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "14069:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "sload",
                                    "nodeType": "YulIdentifier",
                                    "src": "14063:5:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14063:13:11"
                                },
                                {
                                  "name": "_3",
                                  "nodeType": "YulIdentifier",
                                  "src": "14078:2:11"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "14059:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14059:22:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "14047:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14047:35:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14047:35:11"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "14095:19:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "14106:3:11"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "14111:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14102:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14102:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "14095:3:11"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "14127:24:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "14141:6:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14149:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14137:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14137:14:11"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "14127:6:11"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13995:1:11"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13998:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13992:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13992:13:11"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "14006:18:11",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "14008:14:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "14017:1:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14020:1:11",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "14013:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14013:9:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14008:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13988:3:11",
                    "statements": []
                  },
                  "src": "13984:177:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14170:11:11",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "14178:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14170:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14201:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14212:3:11",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14197:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14197:19:11"
                      },
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "14218:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14190:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14190:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14190:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14245:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14256:3:11",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14241:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14241:19:11"
                      },
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "14262:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14234:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14234:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14234:35:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value8",
                        "nodeType": "YulIdentifier",
                        "src": "14300:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14312:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14323:3:11",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14308:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14308:19:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_enum_State",
                      "nodeType": "YulIdentifier",
                      "src": "14278:21:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14278:50:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14278:50:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_storage_t_string_storage_t_string_storage_t_string_storage_t_address_payable_t_array$_t_address_payable_$dyn_storage_t_uint256_t_uint256_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_uint256_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12979:9:11",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "12990:6:11",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "12998:6:11",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "13006:6:11",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "13014:6:11",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "13022:6:11",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13030:6:11",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13038:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13046:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13054:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13065:4:11",
                "type": ""
              }
            ],
            "src": "12594:1740:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14466:99:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14483:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14494:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14476:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14476:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14476:21:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14506:53:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14532:6:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14544:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14555:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14540:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14540:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_string",
                      "nodeType": "YulIdentifier",
                      "src": "14514:17:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14514:45:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14506:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14435:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14446:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14457:4:11",
                "type": ""
              }
            ],
            "src": "14339:226:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14651:103:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14697:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14706:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14709:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14699:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14699:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14699:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14672:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14681:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14668:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14668:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14693:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14664:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14664:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14661:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14722:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14738:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "14732:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14732:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "14722:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14617:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14628:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14640:6:11",
                "type": ""
              }
            ],
            "src": "14570:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14804:130:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14814:31:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14833:5:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14840:4:11",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "14829:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14829:16:11"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "14818:7:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14875:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14877:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14877:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14877:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "14860:7:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14869:4:11",
                        "type": "",
                        "value": "0xff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "14857:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14857:17:11"
                  },
                  "nodeType": "YulIf",
                  "src": "14854:43:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14906:22:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "14917:7:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14926:1:11",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14913:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14913:15:11"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "14906:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14786:5:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "14796:3:11",
                "type": ""
              }
            ],
            "src": "14759:175:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15113:234:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15130:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15141:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15123:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15123:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15123:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15164:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15175:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15160:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15160:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15180:2:11",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15153:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15153:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15153:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15203:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15214:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15199:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15199:18:11"
                      },
                      {
                        "hexValue": "466972737420617070726f7665722063616e6e6f742072656a65637420746865",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15219:34:11",
                        "type": "",
                        "value": "First approver cannot reject the"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15192:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15192:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15192:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15274:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15285:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15270:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15270:18:11"
                      },
                      {
                        "hexValue": "206170706c69636174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15290:14:11",
                        "type": "",
                        "value": " application"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15263:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15263:42:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15263:42:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15314:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15326:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15337:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15322:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15322:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15314:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b35f0ba61c5433fc14926aedd9b0a825971530a099db8277cdf75ce9772a216__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15090:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15104:4:11",
                "type": ""
              }
            ],
            "src": "14939:408:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15526:227:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15543:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15554:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15536:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15536:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15536:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15577:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15588:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15573:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15573:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15593:2:11",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15566:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15566:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15566:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15616:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15627:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15612:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15612:18:11"
                      },
                      {
                        "hexValue": "54686572652073686f756c6420626520612070726f706f73616c20746f207265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15632:34:11",
                        "type": "",
                        "value": "There should be a proposal to re"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15605:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15605:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15605:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15687:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15698:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15683:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15683:18:11"
                      },
                      {
                        "hexValue": "6164206f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15703:7:11",
                        "type": "",
                        "value": "ad on"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15676:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15676:35:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15676:35:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15720:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15732:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15743:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15728:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15728:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15720:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_77850cb0f8037976b44c42b20abc5057dedc82423b7e5227f8bc87659e8d42e3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15503:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15517:4:11",
                "type": ""
              }
            ],
            "src": "15352:401:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15839:103:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15885:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15894:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15897:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "15887:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15887:12:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15887:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "15860:7:11"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15869:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "15856:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15856:23:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15881:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "15852:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15852:32:11"
                  },
                  "nodeType": "YulIf",
                  "src": "15849:52:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15910:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15926:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15920:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15920:16:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "15910:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15805:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "15816:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15828:6:11",
                "type": ""
              }
            ],
            "src": "15758:184:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16121:228:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16138:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16149:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16131:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16131:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16131:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16172:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16183:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16168:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16168:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16188:2:11",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16161:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16161:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16161:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16211:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16222:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16207:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16207:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16227:34:11",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16200:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16200:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16200:62:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16282:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16293:2:11",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16278:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16278:18:11"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16298:8:11",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16271:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16271:36:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16271:36:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16316:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16328:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16339:3:11",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16324:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16324:19:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16316:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16098:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16112:4:11",
                "type": ""
              }
            ],
            "src": "15947:402:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16435:464:11",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16468:425:11",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16482:11:11",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "16492:1:11",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "16486:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "16513:2:11"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "16517:5:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "16506:6:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16506:17:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16506:17:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16536:31:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "16558:2:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16562:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "keccak256",
                            "nodeType": "YulIdentifier",
                            "src": "16548:9:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16548:19:11"
                        },
                        "variables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "16540:4:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16580:57:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "16603:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16613:1:11",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "startIndex",
                                      "nodeType": "YulIdentifier",
                                      "src": "16620:10:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "16632:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16616:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16616:19:11"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "16609:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16609:27:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16599:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16599:38:11"
                        },
                        "variables": [
                          {
                            "name": "deleteStart",
                            "nodeType": "YulTypedName",
                            "src": "16584:11:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16674:23:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16676:19:11",
                              "value": {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "16691:4:11"
                              },
                              "variableNames": [
                                {
                                  "name": "deleteStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "16676:11:11"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "startIndex",
                              "nodeType": "YulIdentifier",
                              "src": "16656:10:11"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "16668:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "16653:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16653:20:11"
                        },
                        "nodeType": "YulIf",
                        "src": "16650:47:11"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16710:41:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "data",
                              "nodeType": "YulIdentifier",
                              "src": "16724:4:11"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16734:1:11",
                                  "type": "",
                                  "value": "5"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "len",
                                      "nodeType": "YulIdentifier",
                                      "src": "16741:3:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "16746:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "16737:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "16737:12:11"
                                }
                              ],
                              "functionName": {
                                "name": "shr",
                                "nodeType": "YulIdentifier",
                                "src": "16730:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16730:20:11"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "16720:3:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16720:31:11"
                        },
                        "variables": [
                          {
                            "name": "_2",
                            "nodeType": "YulTypedName",
                            "src": "16714:2:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "16764:24:11",
                        "value": {
                          "name": "deleteStart",
                          "nodeType": "YulIdentifier",
                          "src": "16777:11:11"
                        },
                        "variables": [
                          {
                            "name": "start",
                            "nodeType": "YulTypedName",
                            "src": "16768:5:11",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16862:21:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "16871:5:11"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16878:2:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16864:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16864:17:11"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16864:17:11"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "start",
                              "nodeType": "YulIdentifier",
                              "src": "16812:5:11"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "16819:2:11"
                            }
                          ],
                          "functionName": {
                            "name": "lt",
                            "nodeType": "YulIdentifier",
                            "src": "16809:2:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16809:13:11"
                        },
                        "nodeType": "YulForLoop",
                        "post": {
                          "nodeType": "YulBlock",
                          "src": "16823:26:11",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16825:22:11",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "start",
                                    "nodeType": "YulIdentifier",
                                    "src": "16838:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16845:1:11",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16834:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16834:13:11"
                              },
                              "variableNames": [
                                {
                                  "name": "start",
                                  "nodeType": "YulIdentifier",
                                  "src": "16825:5:11"
                                }
                              ]
                            }
                          ]
                        },
                        "pre": {
                          "nodeType": "YulBlock",
                          "src": "16805:3:11",
                          "statements": []
                        },
                        "src": "16801:82:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "len",
                        "nodeType": "YulIdentifier",
                        "src": "16451:3:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16456:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16448:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16448:11:11"
                  },
                  "nodeType": "YulIf",
                  "src": "16445:448:11"
                }
              ]
            },
            "name": "clean_up_bytearray_end_slots_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "16407:5:11",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "16414:3:11",
                "type": ""
              },
              {
                "name": "startIndex",
                "nodeType": "YulTypedName",
                "src": "16419:10:11",
                "type": ""
              }
            ],
            "src": "16354:545:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16989:81:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16999:65:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "17014:4:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17032:1:11",
                                        "type": "",
                                        "value": "3"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "17035:3:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "17028:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17028:11:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17045:1:11",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "17041:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17041:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "17024:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17024:24:11"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "17020:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17020:29:11"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "17010:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17010:40:11"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17056:1:11",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "len",
                            "nodeType": "YulIdentifier",
                            "src": "17059:3:11"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "17052:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17052:11:11"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "17007:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17007:57:11"
                  },
                  "variableNames": [
                    {
                      "name": "used",
                      "nodeType": "YulIdentifier",
                      "src": "16999:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "extract_used_part_and_set_length_of_short_byte_array",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "16966:4:11",
                "type": ""
              },
              {
                "name": "len",
                "nodeType": "YulTypedName",
                "src": "16972:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "used",
                "nodeType": "YulTypedName",
                "src": "16980:4:11",
                "type": ""
              }
            ],
            "src": "16904:166:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17171:1256:11",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17181:24:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "17201:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "17195:5:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17195:10:11"
                  },
                  "variables": [
                    {
                      "name": "newLen",
                      "nodeType": "YulTypedName",
                      "src": "17185:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17248:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "17250:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17250:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17250:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "17220:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17228:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17217:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17217:30:11"
                  },
                  "nodeType": "YulIf",
                  "src": "17214:56:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "slot",
                        "nodeType": "YulIdentifier",
                        "src": "17323:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "slot",
                                "nodeType": "YulIdentifier",
                                "src": "17361:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "sload",
                              "nodeType": "YulIdentifier",
                              "src": "17355:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17355:11:11"
                          }
                        ],
                        "functionName": {
                          "name": "extract_byte_array_length",
                          "nodeType": "YulIdentifier",
                          "src": "17329:25:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17329:38:11"
                      },
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "17369:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "clean_up_bytearray_end_slots_string_storage",
                      "nodeType": "YulIdentifier",
                      "src": "17279:43:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17279:97:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17279:97:11"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17385:18:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17402:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulTypedName",
                      "src": "17389:9:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "17412:23:11",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "17431:4:11",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "srcOffset_1",
                      "nodeType": "YulTypedName",
                      "src": "17416:11:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17444:24:11",
                  "value": {
                    "name": "srcOffset_1",
                    "nodeType": "YulIdentifier",
                    "src": "17457:11:11"
                  },
                  "variableNames": [
                    {
                      "name": "srcOffset",
                      "nodeType": "YulIdentifier",
                      "src": "17444:9:11"
                    }
                  ]
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "17514:656:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17528:35:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "17547:6:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17559:2:11",
                                      "type": "",
                                      "value": "31"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "17555:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17555:7:11"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "17543:3:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17543:20:11"
                            },
                            "variables": [
                              {
                                "name": "loopEnd",
                                "nodeType": "YulTypedName",
                                "src": "17532:7:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17576:49:11",
                            "value": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "17620:4:11"
                                }
                              ],
                              "functionName": {
                                "name": "array_dataslot_string_storage",
                                "nodeType": "YulIdentifier",
                                "src": "17590:29:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17590:35:11"
                            },
                            "variables": [
                              {
                                "name": "dstPtr",
                                "nodeType": "YulTypedName",
                                "src": "17580:6:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "17638:10:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "17647:1:11",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "i",
                                "nodeType": "YulTypedName",
                                "src": "17642:1:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "17725:172:11",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17750:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "src",
                                                "nodeType": "YulIdentifier",
                                                "src": "17768:3:11"
                                              },
                                              {
                                                "name": "srcOffset",
                                                "nodeType": "YulIdentifier",
                                                "src": "17773:9:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "17764:3:11"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "17764:19:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "17758:5:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17758:26:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "17743:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17743:42:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "17743:42:11"
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17802:24:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "17816:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17824:1:11",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17812:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17812:14:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "dstPtr",
                                      "nodeType": "YulIdentifier",
                                      "src": "17802:6:11"
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17843:40:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "srcOffset",
                                        "nodeType": "YulIdentifier",
                                        "src": "17860:9:11"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "17871:11:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17856:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17856:27:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "srcOffset",
                                      "nodeType": "YulIdentifier",
                                      "src": "17843:9:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "17672:1:11"
                                },
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "17675:7:11"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "17669:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17669:14:11"
                            },
                            "nodeType": "YulForLoop",
                            "post": {
                              "nodeType": "YulBlock",
                              "src": "17684:28:11",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "17686:24:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "17695:1:11"
                                      },
                                      {
                                        "name": "srcOffset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "17698:11:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17691:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17691:19:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "17686:1:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "pre": {
                              "nodeType": "YulBlock",
                              "src": "17665:3:11",
                              "statements": []
                            },
                            "src": "17661:236:11"
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "17945:166:11",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "17963:43:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "17990:3:11"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "17995:9:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "17986:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17986:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "17980:5:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17980:26:11"
                                  },
                                  "variables": [
                                    {
                                      "name": "lastValue",
                                      "nodeType": "YulTypedName",
                                      "src": "17967:9:11",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "dstPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "18030:6:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "lastValue",
                                            "nodeType": "YulIdentifier",
                                            "src": "18042:9:11"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "kind": "number",
                                                            "nodeType": "YulLiteral",
                                                            "src": "18069:1:11",
                                                            "type": "",
                                                            "value": "3"
                                                          },
                                                          {
                                                            "name": "newLen",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "18072:6:11"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "shl",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "18065:3:11"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "18065:14:11"
                                                      },
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "18081:3:11",
                                                        "type": "",
                                                        "value": "248"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "18061:3:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "18061:24:11"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "18091:1:11",
                                                        "type": "",
                                                        "value": "0"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "not",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "18087:3:11"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "18087:6:11"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "18057:3:11"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "18057:37:11"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "18053:3:11"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "18053:42:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "18038:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18038:58:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sstore",
                                      "nodeType": "YulIdentifier",
                                      "src": "18023:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18023:74:11"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "18023:74:11"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "loopEnd",
                                  "nodeType": "YulIdentifier",
                                  "src": "17916:7:11"
                                },
                                {
                                  "name": "newLen",
                                  "nodeType": "YulIdentifier",
                                  "src": "17925:6:11"
                                }
                              ],
                              "functionName": {
                                "name": "lt",
                                "nodeType": "YulIdentifier",
                                "src": "17913:2:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "17913:19:11"
                            },
                            "nodeType": "YulIf",
                            "src": "17910:201:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "18131:4:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18145:1:11",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "18148:6:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "18141:3:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18141:14:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "18157:1:11",
                                      "type": "",
                                      "value": "1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "18137:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18137:22:11"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "18124:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18124:36:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18124:36:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "17507:663:11",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17512:1:11",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "18187:234:11",
                        "statements": [
                          {
                            "nodeType": "YulVariableDeclaration",
                            "src": "18201:14:11",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "18214:1:11",
                              "type": "",
                              "value": "0"
                            },
                            "variables": [
                              {
                                "name": "value",
                                "nodeType": "YulTypedName",
                                "src": "18205:5:11",
                                "type": ""
                              }
                            ]
                          },
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "18250:67:11",
                              "statements": [
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "18268:35:11",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "src",
                                            "nodeType": "YulIdentifier",
                                            "src": "18287:3:11"
                                          },
                                          {
                                            "name": "srcOffset",
                                            "nodeType": "YulIdentifier",
                                            "src": "18292:9:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "18283:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "18283:19:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "18277:5:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18277:26:11"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "18268:5:11"
                                    }
                                  ]
                                }
                              ]
                            },
                            "condition": {
                              "name": "newLen",
                              "nodeType": "YulIdentifier",
                              "src": "18231:6:11"
                            },
                            "nodeType": "YulIf",
                            "src": "18228:89:11"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "slot",
                                  "nodeType": "YulIdentifier",
                                  "src": "18337:4:11"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "18396:5:11"
                                    },
                                    {
                                      "name": "newLen",
                                      "nodeType": "YulIdentifier",
                                      "src": "18403:6:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "extract_used_part_and_set_length_of_short_byte_array",
                                    "nodeType": "YulIdentifier",
                                    "src": "18343:52:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "18343:67:11"
                                }
                              ],
                              "functionName": {
                                "name": "sstore",
                                "nodeType": "YulIdentifier",
                                "src": "18330:6:11"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "18330:81:11"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "18330:81:11"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "18179:242:11",
                      "value": "default"
                    }
                  ],
                  "expression": {
                    "arguments": [
                      {
                        "name": "newLen",
                        "nodeType": "YulIdentifier",
                        "src": "17487:6:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17495:2:11",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17484:2:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17484:14:11"
                  },
                  "nodeType": "YulSwitch",
                  "src": "17477:944:11"
                }
              ]
            },
            "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "slot",
                "nodeType": "YulTypedName",
                "src": "17156:4:11",
                "type": ""
              },
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "17162:3:11",
                "type": ""
              }
            ],
            "src": "17075:1352:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18561:168:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18571:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18583:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18594:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18579:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18579:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "18571:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18613:9:11"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18624:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18606:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18606:25:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18606:25:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18651:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18662:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18647:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18647:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "18671:6:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18679:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "18667:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18667:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18640:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18640:83:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18640:83:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18522:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18533:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18541:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18552:4:11",
                "type": ""
              }
            ],
            "src": "18432:297:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18908:166:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "18925:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18936:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18918:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18918:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18918:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18959:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18970:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18955:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18955:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18975:2:11",
                        "type": "",
                        "value": "16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18948:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18948:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18948:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "18998:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19009:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18994:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18994:18:11"
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19014:18:11",
                        "type": "",
                        "value": "Pausable: paused"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18987:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18987:46:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18987:46:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19042:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19054:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19065:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19050:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19050:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19042:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "18885:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "18899:4:11",
                "type": ""
              }
            ],
            "src": "18734:340:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19253:182:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19270:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19281:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19263:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19263:21:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19263:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19304:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19315:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19300:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19300:18:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19320:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19293:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19293:30:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19293:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19343:9:11"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19354:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19339:3:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19339:18:11"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19359:34:11",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19332:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19332:62:11"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19332:62:11"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19403:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19415:9:11"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19426:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19411:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19411:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19403:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19230:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19244:4:11",
                "type": ""
              }
            ],
            "src": "19079:356:11"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19492:116:11",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19502:20:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "19517:1:11"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "19520:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "19513:3:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19513:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "19502:7:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "19580:22:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "19582:16:11"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "19582:18:11"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "19582:18:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "19551:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "19544:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19544:9:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "19558:1:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "19565:7:11"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19574:1:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "19561:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19561:15:11"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "19555:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19555:22:11"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "19541:2:11"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19541:37:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "19534:6:11"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19534:45:11"
                  },
                  "nodeType": "YulIf",
                  "src": "19531:71:11"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "19471:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "19474:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "19480:7:11",
                "type": ""
              }
            ],
            "src": "19440:168:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_State(value, pos)\n    {\n        if iszero(lt(value, 6))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_uint256_t_uint256_t_bytes32_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_uint256_t_uint256_t_bytes32_t_uint8__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string(value0, add(headStart, _1))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_string(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        tail := abi_encode_string(value3, tail_3)\n        mstore(add(headStart, 128), and(value4, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        abi_encode_enum_State(value8, add(headStart, 256))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_address_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_bytes32_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_bytes32_t_uint8__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        let tail_1 := abi_encode_string(value0, add(headStart, 224))\n        let _1 := 32\n        mstore(add(headStart, _1), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string(value1, tail_1)\n        let _2 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _2))\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        let pos := tail_2\n        let length := mload(value3)\n        mstore(tail_2, length)\n        pos := add(tail_2, _1)\n        let srcPtr := add(value3, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _2))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        abi_encode_enum_State(value6, add(headStart, 192))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset_2), dataEnd)\n        let offset_3 := calldataload(add(headStart, 96))\n        if gt(offset_3, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_3), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_a4ed89fa2f171494e93272cc7b869ed69bb1b885cec91064a15ada8a2e9f42f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Only voter is allowed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_352a142377b9a4c12807000a01c867d6704dfd507b82beaa8bd1658bd8f2e516__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Only open proposals are allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Proposal status should still be \")\n        mstore(add(headStart, 96), \"submitted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_312e135ffbe4e255aad2d472622b5941207f58a868ef10b8a7ca1e5b538d1bc1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Voter can only vote once.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_294613bc706ea900ba3abf6597b1777c99fac053793d24310e1c06ca0b5d327f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Cannot vote if already rejected\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_6e945accec4963faa60b880facca57fbdb41b762bbda9c489314a0b8d9516652__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Proposal state should be approve\")\n        mstore(add(headStart, 96), \"d or rejected.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_7a7ee7d584e25d0f1b6e810a2c61c245981ac08c3cdf79dcbd9cc118ad0f1bc9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Only approver is allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_08ffc111a0ed98409a55085016b51ffdaf90681463006f6c12b322f42f4ff119__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Proposal votes should be present\")\n        mstore(add(headStart, 96), \" for approval\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_23cc21b0be89388eaddd27462435586264c4df8010ef33707d8837ebd3294f5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Proposal approvals not exceed 2\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51a9fd02ae513733ddc16cb73ca8d0327f466d4638dccfd4ee134b5191efef2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Approver can only approve once\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_string_storage(value, pos) -> ret\n    {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        mstore(pos, length)\n        let _1 := 0x20\n        let _2 := 1\n        switch and(slotValue, _2)\n        case 0 {\n            mstore(add(pos, _1), and(slotValue, not(255)))\n            ret := add(add(pos, shl(5, iszero(iszero(length)))), _1)\n        }\n        case 1 {\n            mstore(0, value)\n            let dataPos := keccak256(0, _1)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _1) }\n            {\n                mstore(add(add(pos, i), _1), sload(dataPos))\n                dataPos := add(dataPos, _2)\n            }\n            ret := add(add(pos, i), _1)\n        }\n    }\n    function abi_encode_tuple_t_string_storage_t_string_storage_t_string_storage_t_string_storage_t_address_payable_t_array$_t_address_payable_$dyn_storage_t_uint256_t_uint256_t_enum$_State_$1924__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_address_payable_t_array$_t_address_payable_$dyn_memory_ptr_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := 288\n        mstore(headStart, _1)\n        let tail_1 := abi_encode_string_storage(value0, add(headStart, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), sub(tail_1, headStart))\n        let tail_2 := abi_encode_string_storage(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_string_storage(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        let tail_4 := abi_encode_string_storage(value3, tail_3)\n        let _3 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 128), and(value4, _3))\n        mstore(add(headStart, 160), sub(tail_4, headStart))\n        let pos := tail_4\n        let length := sload(value5)\n        mstore(tail_4, length)\n        pos := add(tail_4, _2)\n        mstore(0, value5)\n        let srcPtr := keccak256(0, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(sload(srcPtr), _3))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, 1)\n        }\n        tail := pos\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n        abi_encode_enum_State(value8, add(headStart, 256))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_5b35f0ba61c5433fc14926aedd9b0a825971530a099db8277cdf75ce9772a216__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"First approver cannot reject the\")\n        mstore(add(headStart, 96), \" application\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_77850cb0f8037976b44c42b20abc5057dedc82423b7e5227f8bc87659e8d42e3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"There should be a proposal to re\")\n        mstore(add(headStart, 96), \"ad on\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "655:8146:8:-:0;;;;;;;;;;;;;1230:12:2;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1220:22:2;;;936:32:0;719:10:4;936:18:0;:32::i;:::-;1006:5:1;996:15;;-1:-1:-1;;;;996:15:1;;;655:8146:8;;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;655:8146:8:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "655:8146:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6115:507;;;;;;;;;;-1:-1:-1;6115:507:8;;;;;:::i;:::-;;:::i;:::-;;883:41;;;;;;;;;;-1:-1:-1;883:41:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;775:14:11;;768:22;750:41;;738:2;723:18;883:41:8;;;;;;;;6745:333;;;;;;;;;;-1:-1:-1;6745:333:8;;;;;:::i;:::-;;:::i;8675:124::-;;;;;;;;;;-1:-1:-1;8675:124:8;;;;;:::i;:::-;;:::i;1961:104:2:-;;;;;;;;;;-1:-1:-1;1961:104:2;;;;;:::i;:::-;;:::i;8002:117:8:-;;;;;;;;;;;;;:::i;:::-;;;1528:25:11;;;1516:2;1501:18;8002:117:8;1382:177:11;7603:314:8;;;;;;;;;;;;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1662:4:1;1685:7;-1:-1:-1;;;1685:7:1;;;;1615:84;;1831:101:0;;;;;;;;;;;;;:::i;1201:85::-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:0;;;1710:74:11;;1698:2;1683:18;1201:85:0;1564:226:11;7194:323:8;;;;;;;;;;;;;:::i;968:38::-;;;;;;;;;;-1:-1:-1;968:38:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;3714:1574;;;;;;:::i;:::-;;:::i;8251:298::-;;;;;;;;;;-1:-1:-1;8251:298:8;;;;;:::i;:::-;;:::i;5386:631::-;;;;;;;;;;-1:-1:-1;5386:631:8;;;;;:::i;:::-;;:::i;1111:46::-;;;;;;;;;;-1:-1:-1;1111:46:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;798:42::-;;;;;;;;;;-1:-1:-1;798:42:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;1680:619;;;;;;;;;;-1:-1:-1;1680:619:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;2183:110:2:-;;;;;;;;;;-1:-1:-1;2183:110:2;;;;;:::i;:::-;;:::i;2081:198:0:-;;;;;;;;;;-1:-1:-1;2081:198:0;;;;;:::i;:::-;;:::i;2572:913:8:-;;;;;;;;;;-1:-1:-1;2572:913:8;;;;;:::i;:::-;;:::i;6115:507::-;6153:10;1370:16;;;;:6;:16;;;;;;;;:24;;:16;:24;1362:58;;;;-1:-1:-1;;;1362:58:8;;7122:2:11;1362:58:8;;;7104:21:11;7161:2;7141:18;;;7134:30;7200:23;7180:18;;;7173:51;7241:18;;1362:58:8;;;;;;;;;6175:2;1517:21:::1;1490:12:::0;1503:2:::1;1490:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:16;::::0;;::::1;;:23;::::0;::::1;;:48;::::0;::::1;;;;;;:::i;:::-;::::0;1482:92:::1;;;::::0;-1:-1:-1;;;1482:92:8;;7604:2:11;1482:92:8::1;::::0;::::1;7586:21:11::0;7643:2;7623:18;;;7616:30;7682:33;7662:18;;;7655:61;7733:18;;1482:92:8::1;7402:355:11::0;1482:92:8::1;1239:19:1::2;:17;:19::i;:::-;6238:24:8::3;6211:12;6224:2;6211:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:51;::::0;::::3;;;;;;:::i;:::-;;6203:105;;;;-1:-1:-1::0;;;6203:105:8::3;;;;;;;:::i;:::-;6326:12;6339:2;6326:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;6349:10:::3;6326:34:::0;;:22:::3;:16;::::0;;::::3;;:22:::0;;;::::3;:34:::0;;;;;;::::3;;:43;6318:81;;;::::0;-1:-1:-1;;;6318:81:8;;8374:2:11;6318:81:8::3;::::0;::::3;8356:21:11::0;8413:2;8393:18;;;8386:30;8452:27;8432:18;;;8425:55;8497:18;;6318:81:8::3;8172:349:11::0;6318:81:8::3;6444:23;6417:12;6430:2;6417:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:50;::::0;::::3;;;;;;:::i;:::-;::::0;6409:94:::3;;;::::0;-1:-1:-1;;;6409:94:8;;8728:2:11;6409:94:8::3;::::0;::::3;8710:21:11::0;8767:2;8747:18;;;8740:30;8806:33;8786:18;;;8779:61;8857:18;;6409:94:8::3;8526:355:11::0;6409:94:8::3;6514:12;6527:2;6514:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;:22:::3;:16;::::0;;::::3;;:22;:24:::0;;;::::3;::::0;::::3;:::i;:::-;;;;;;6585:4;6548:12;6561:2;6548:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;6571:10:::3;6548:34:::0;;:16:::3;::::0;;;::::3;::::0;;::::3;:22;;:34:::0;;;;;;;:41;;-1:-1:-1;;6548:41:8::3;::::0;::::3;;::::0;;;::::3;::::0;;;6604:11;1528:25:11;;;6604:11:8::3;::::0;1501:18:11;6604:11:8::3;;;;;;;;1430:1:::1;6115:507:::0;;:::o;6745:333::-;1094:13:0;:11;:13::i;:::-;6796:2:8;1517:21:::1;1490:12:::0;1503:2:::1;1490:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:16;::::0;;::::1;;:23;::::0;::::1;;:48;::::0;::::1;;;;;;:::i;:::-;::::0;1482:92:::1;;;::::0;-1:-1:-1;;;1482:92:8;;7604:2:11;1482:92:8::1;::::0;::::1;7586:21:11::0;7643:2;7623:18;;;7616:30;7682:33;7662:18;;;7655:61;7733:18;;1482:92:8::1;7402:355:11::0;1482:92:8::1;1239:19:1::2;:17;:19::i;:::-;6859:23:8::3;6832:12;6845:2;6832:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:50;::::0;::::3;;;;;;:::i;:::-;;:104;;;-1:-1:-1::0;6913:23:8::3;6886:12;6899:2;6886:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:50;::::0;::::3;;;;;;:::i;:::-;;6832:104;6824:163;;;::::0;-1:-1:-1;;;6824:163:8;;9360:2:11;6824:163:8::3;::::0;::::3;9342:21:11::0;9399:2;9379:18;;;9372:30;9438:34;9418:18;;;9411:62;-1:-1:-1;;;9489:18:11;;;9482:44;9543:19;;6824:163:8::3;9158:410:11::0;6824:163:8::3;7023:21;6997:12:::0;7010:2:::3;6997:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;:47:::0;;-1:-1:-1;;6997:47:8::3;::::0;;::::3;::::0;::::3;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;7059:12:8::3;::::0;1528:25:11;;;7059:12:8::3;::::0;1516:2:11;1501:18;7059:12:8::3;;;;;;;1117:1:0::1;6745:333:8::0;:::o;8675:124::-;8740:4;8763:12;8776:2;8763:16;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;8763:29:8;;;;:22;:16;;;;;:22;;;;:29;;;;;;;;;-1:-1:-1;8675:124:8;;;;;:::o;1961:104:2:-;2035:23;;-1:-1:-1;;;2035:23:2;;-1:-1:-1;;;;;1728:55:11;;;2035:23:2;;;1710:74:11;2035:7:2;:16;;;;1683:18:11;;2035:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1961:104;:::o;8002:117:8:-;8069:4;1239:19:1;:17;:19::i;:::-;-1:-1:-1;8093:12:8::1;:19:::0;8002:117;:::o;7603:314::-;1239:19:1;:17;:19::i;:::-;7678:10:8::1;7667:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;:31;7659:40;;;::::0;::::1;;7724:10;7717:18;::::0;;;:6:::1;:18;::::0;;;;;::::1;;:27;7709:36;;;::::0;::::1;;7773:10;7763:21;::::0;;;:9:::1;:21;::::0;;;;;::::1;;:30;7755:39;;;::::0;::::1;;1247:7:0::0;1273:6;-1:-1:-1;;;;;1273:6:0;7812:10:8::1;:21:::0;7804:30:::1;;;::::0;::::1;;7852:10;7845:18;::::0;;;:6:::1;:18;::::0;;;;;;;;:25;;-1:-1:-1;;7845:25:8::1;7866:4;7845:25;::::0;;7885;;1710:74:11;;;7885:25:8::1;::::0;1683:18:11;7885:25:8::1;;;;;;;;7603:314::o:0;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;7194:323:8:-;1239:19:1;:17;:19::i;:::-;7272:10:8::1;7261:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;:31;7253:40;;;::::0;::::1;;7318:10;7311:18;::::0;;;:6:::1;:18;::::0;;;;;::::1;;:27;7303:36;;;::::0;::::1;;7367:10;7357:21;::::0;;;:9:::1;:21;::::0;;;;;::::1;;:30;7349:39;;;::::0;::::1;;1247:7:0::0;1273:6;-1:-1:-1;;;;;1273:6:0;7406:10:8::1;:21:::0;7398:30:::1;;;::::0;::::1;;7449:10;7439:21;::::0;;;:9:::1;:21;::::0;;;;;;;;:28;;-1:-1:-1;;7439:28:8::1;7463:4;7439:28;::::0;;7482;;1710:74:11;;;7482:28:8::1;::::0;1683:18:11;7482:28:8::1;1564:226:11::0;3714:1574:8;3766:10;1237:19;;;;:9;:19;;;;;;;;:27;;:19;:27;1229:64;;;;-1:-1:-1;;;1229:64:8;;10022:2:11;1229:64:8;;;10004:21:11;10061:2;10041:18;;;10034:30;-1:-1:-1;;;10080:18:11;;;10073:54;10144:18;;1229:64:8;9820:348:11;1229:64:8;3788:2;1517:21:::1;1490:12:::0;1503:2:::1;1490:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:16;::::0;;::::1;;:23;::::0;::::1;;:48;::::0;::::1;;;;;;:::i;:::-;::::0;1482:92:::1;;;::::0;-1:-1:-1;;;1482:92:8;;7604:2:11;1482:92:8::1;::::0;::::1;7586:21:11::0;7643:2;7623:18;;;7616:30;7682:33;7662:18;;;7655:61;7733:18;;1482:92:8::1;7402:355:11::0;1482:92:8::1;1239:19:1::2;:17;:19::i;:::-;3849:1:8::3;3824:12;3837:2;3824:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;:26;3816:84;;;::::0;-1:-1:-1;;;3816:84:8;;10375:2:11;3816:84:8::3;::::0;::::3;10357:21:11::0;10414:2;10394:18;;;10387:30;10453:34;10433:18;;;10426:62;-1:-1:-1;;;10504:18:11;;;10497:43;10557:19;;3816:84:8::3;10173:409:11::0;3816:84:8::3;3948:1;3918:12;3931:2;3918:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:31;;3910:75;;;::::0;-1:-1:-1;;;3910:75:8;;10789:2:11;3910:75:8::3;::::0;::::3;10771:21:11::0;10828:2;10808:18;;;10801:30;10867:33;10847:18;;;10840:61;10918:18;;3910:75:8::3;10587:355:11::0;3910:75:8::3;4030:24;4003:12;4016:2;4003:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:51;::::0;::::3;;;;;;:::i;:::-;;3995:105;;;;-1:-1:-1::0;;;3995:105:8::3;;;;;;;:::i;:::-;4149:1;4114:12;4127:2;4114:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:32;;;;:36;4110:152;;;4188:12;4201:2;4188:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;4214:1;4188:28;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;-1:-1:-1;;;;;4188:28:8::3;4174:10;:42:::0;4166:85:::3;;;::::0;-1:-1:-1;;;4166:85:8;;11149:2:11;4166:85:8::3;::::0;::::3;11131:21:11::0;11188:2;11168:18;;;11161:30;11227:32;11207:18;;;11200:60;11277:18;;4166:85:8::3;10947:354:11::0;4166:85:8::3;4272:12;4285:2;4272:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;:26:::3;:16;::::0;;::::3;;:26;:28:::0;;;::::3;::::0;::::3;:::i;:::-;;;;;;4310:12;4323:2;4310:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:25:::3;:16;::::0;;::::3;;:25:::0;;;::::3;:51:::0;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;;-1:-1:-1;;;;;;4310:51:8::3;4349:10;4310:51;::::0;;4375:12:::3;:16:::0;;4388:2;;4375:16;::::3;;;;;:::i;:::-;;;;;;;;;;;:26;;;4405:1;4375:31:::0;4371:911:::3;;4448:23;4422:12;4435:2;4422:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;:49:::0;;-1:-1:-1;;4422:49:8::3;::::0;;::::3;::::0;::::3;;;;;;:::i;:::-;;;;;;4559:5;:14;4585:12;4598:2;4585:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;4625:12;4638:2;4625:16;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;4671:12;4684:2;4671:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;4713:12;4726:2;4713:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;4756:12;4769:2;4756:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;;;-1:-1:-1::0;;;;;4756:26:8::3;4800:12;4813:2;4800:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;4843:12;4856:2;4843:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;4883:12;4896:2;4883:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;4927:12;4940:2;4927:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;;:23:::3;:16;::::0;;::::3;;:23;::::0;4574:377:::3;::::0;::::3;::::0;;;;;;;;;4927:23:::3;::::0;;::::3;::::0;4574:377:::3;;:::i;:::-;;;;;;;;;;;;;4559:393;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4534:12;4547:2;4534:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;:418;;;;5015:85;5030:12;5043:2;5030:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;;;-1:-1:-1::0;;;;;5030:26:8::3;5058:41;5076:12;5089:2;5076:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;1072:7;5058:17;;:41;;;;:::i;:::-;5015:14;:85::i;:::-;5232:5;5191:10;:38;5202:12;5215:2;5202:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;::::3;:26;;::::0;-1:-1:-1;;;;;5202:26:8::3;5191:38:::0;;;;::::3;::::0;;;;;;;;;;:46;;-1:-1:-1;;5191:46:8::3;::::0;::::3;;::::0;;;::::3;::::0;;;5257:14;;1528:25:11;;;5257:14:8::3;::::0;1501:18:11;5257:14:8::3;1382:177:11::0;4371:911:8::3;1303:1:::1;3714:1574:::0;;:::o;8251:298::-;8322:4;;8338:183;8364:12;8377:2;8364:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:32;;;;8358:3;:38;;;8338:183;;;8457:8;-1:-1:-1;;;;;8423:42:8;:12;8436:2;8423:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;8449:3;8423:30;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;8423:30:8;:42;8419:92;;8492:4;8485:11;;;;;8419:92;8398:5;;;;:::i;:::-;;;;8338:183;;;-1:-1:-1;8537:5:8;;8251:298;-1:-1:-1;;;8251:298:8:o;5386:631::-;5429:10;1237:19;;;;:9;:19;;;;;;;;:27;;:19;:27;1229:64;;;;-1:-1:-1;;;1229:64:8;;10022:2:11;1229:64:8;;;10004:21:11;10061:2;10041:18;;;10034:30;-1:-1:-1;;;10080:18:11;;;10073:54;10144:18;;1229:64:8;9820:348:11;1229:64:8;5451:2;1517:21:::1;1490:12:::0;1503:2:::1;1490:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:23:::1;:16;::::0;;::::1;;:23;::::0;::::1;;:48;::::0;::::1;;;;;;:::i;:::-;::::0;1482:92:::1;;;::::0;-1:-1:-1;;;1482:92:8;;7604:2:11;1482:92:8::1;::::0;::::1;7586:21:11::0;7643:2;7623:18;;;7616:30;7682:33;7662:18;;;7655:61;7733:18;;1482:92:8::1;7402:355:11::0;1482:92:8::1;1239:19:1::2;:17;:19::i;:::-;5582:1:8::3;5547:12;5560:2;5547:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:32;;;;:36;5543:166;;;5621:12;5634:2;5621:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;5647:1;5621:28;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;::::3;::::0;-1:-1:-1;;;;;5621:28:8::3;5607:10;:42:::0;5599:99:::3;;;::::0;-1:-1:-1;;;5599:99:8;;15141:2:11;5599:99:8::3;::::0;::::3;15123:21:11::0;15180:2;15160:18;;;15153:30;15219:34;15199:18;;;15192:62;-1:-1:-1;;;15270:18:11;;;15263:42;15322:19;;5599:99:8::3;14939:408:11::0;5599:99:8::3;5753:24;5726:12;5739:2;5726:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;::::0;::::3;;:51;::::0;::::3;;;;;;:::i;:::-;;5718:105;;;;-1:-1:-1::0;;;5718:105:8::3;;;;;;;:::i;:::-;5833:12;5846:2;5833:16;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:25:::3;:16;::::0;;::::3;;:25:::0;;;::::3;:51:::0;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;;-1:-1:-1;;;;;;5833:51:8::3;5872:10;5833:51;::::0;;5894:12:::3;:16:::0;;5920:23:::3;::::0;5894:12;5907:2;;5894:16;::::3;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;:23:::3;:16;::::0;;::::3;;:23;:49:::0;;-1:-1:-1;;5894:49:8::3;::::0;;::::3;::::0;::::3;;;;;;:::i;:::-;;;::::0;;-1:-1:-1;5964:10:8::3;5953:22;::::0;;;5978:4:::3;5953:22;::::0;;;;;;;;:29;;-1:-1:-1;;5953:29:8::3;::::0;;::::3;::::0;;;5997:13;;1528:25:11;;;5997:13:8::3;::::0;1501:18:11;5997:13:8::3;1382:177:11::0;1111:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1111:46:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1111:46:8;;;;;;-1:-1:-1;1111:46:8;-1:-1:-1;1111:46:8;;;:::o;1680:619::-;1762:19;1791:25;1826:17;1853:33;1896:10;1916:13;1939:21;1239:19:1;:17;:19::i;:::-;1980:12:8::1;:19:::0;1972:73:::1;;;::::0;-1:-1:-1;;;1972:73:8;;15554:2:11;1972:73:8::1;::::0;::::1;15536:21:11::0;15593:2;15573:18;;;15566:30;15632:34;15612:18;;;15605:62;-1:-1:-1;;;15683:18:11;;;15676:35;15728:19;;1972:73:8::1;15352:401:11::0;1972:73:8::1;2063:12;2076:2;2063:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;2095:12;2108:2;2095:16;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;2133:12;2146:2;2133:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;;;;;;;;-1:-1:-1::0;;;;;2133:26:8::1;2169:12;2182:2;2169:16;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;2204:12;2217:2;2204:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;2236:12;2249:2;2236:16;;;;;;;;:::i;:::-;;;;;;;;;;;:22;;;2268:12;2281:2;2268:16;;;;;;;;:::i;:::-;;;;;;;;;;;:23;;;;;;;;;;;;2055:237;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2055:237:8::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;1680:619:::0;;;;;;;;;:::o;2183:110:2:-;2262:24;;-1:-1:-1;;;2262:24:2;;-1:-1:-1;;;;;1728:55:11;;;2262:24:2;;;1710:74:11;2236:7:2;;2262;:18;;;;;;1683::11;;2262:24:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;16149:2:11;2161:73:0::1;::::0;::::1;16131:21:11::0;16188:2;16168:18;;;16161:30;16227:34;16207:18;;;16200:62;-1:-1:-1;;;16278:18:11;;;16271:36;16324:19;;2161:73:0::1;15947:402:11::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;2572:913:8:-;1239:19:1;:17;:19::i;:::-;2733:10:8::1;2722:22;::::0;;;:10:::1;:22;::::0;;;;;::::1;;:31;2714:40;;;::::0;::::1;;2779:10;2772:18;::::0;;;:6:::1;:18;::::0;;;;;::::1;;:27;2764:36;;;::::0;::::1;;2828:10;2818:21;::::0;;;:9:::1;:21;::::0;;;;;::::1;;:30;2810:39;;;::::0;::::1;;1247:7:0::0;1273:6;-1:-1:-1;;;;;1273:6:0;2867:10:8::1;:21:::0;2859:30:::1;;;::::0;::::1;;2938:12;:19:::0;;::::1;::::0;::::1;::::0;;2900:35:::1;2938:19:::0;;;;::::1;;::::0;::::1;::::0;2967:25:::1;2987:5:::0;2938:19;2967:25:::1;:::i;:::-;-1:-1:-1::0;3002:23:8::1;::::0;::::1;:37;3028:11:::0;3002:23;:37:::1;:::i;:::-;-1:-1:-1::0;3049:19:8::1;::::0;::::1;:29;3071:7:::0;3049:19;:29:::1;:::i;:::-;-1:-1:-1::0;3088:20:8::1;::::0;::::1;:31;3111:8:::0;3088:20;:31:::1;:::i;:::-;-1:-1:-1::0;3129:21:8::1;::::0;::::1;:43:::0;;-1:-1:-1;;;;;;3129:43:8::1;3161:10;3129:43;::::0;;3205:24:::1;::::0;;-1:-1:-1;3205:24:8;;::::1;::::0;::::1;::::0;;;;3182:47;::::1;::::0;:20:::1;::::0;::::1;::::0;:47:::1;:::i;:::-;-1:-1:-1::0;3291:1:8::1;3267:21;::::0;::::1;:25:::0;;;3302:17:::1;::::0;::::1;:23:::0;;;3335:18:::1;::::0;::::1;:45:::0;;-1:-1:-1;;3335:45:8;;::::1;::::0;;;3403:10:::1;3392:22:::0;;;3335:45;3392:22:::1;::::0;;;;;;;;:29;;;;::::1;::::0;;::::1;::::0;;;3446:12:::1;:19:::0;3436:42;;18606:25:11;;;18647:18;;;18640:83;3436:42:8::1;::::0;18579:18:11;3436:42:8::1;;;;;;;2704:781;2572:913:::0;;;;:::o;1767:106:1:-;1662:4;1685:7;-1:-1:-1;;;1685:7:1;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;18936:2:11;1828:38:1;;;18918:21:11;18975:2;18955:18;;;18948:30;-1:-1:-1;;;18994:18:11;;;18987:46;19050:18;;1828:38:1;18734:340:11;1359:130:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;19281:2:11;1414:68:0;;;19263:21:11;;;19300:18;;;19293:30;19359:34;19339:18;;;19332:62;19411:18;;1414:68:0;19079:356:11;2433:187:0;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;3465:96:6:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:6:o;2715:124:2:-;2796:36;;-1:-1:-1;;;2796:36:2;;-1:-1:-1;;;;;1728:55:11;;;2796:36:2;;;1710:74:11;2796:7:2;:15;;;;2819:6;;1683:18:11;;2796:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2715:124;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:11;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:11;;14:180;-1:-1:-1;14:180:11:o;199:154::-;-1:-1:-1;;;;;278:5:11;274:54;267:5;264:65;254:93;;343:1;340;333:12;358:247;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;525:9;512:23;544:31;569:5;544:31;:::i;802:315::-;870:6;878;931:2;919:9;910:7;906:23;902:32;899:52;;;947:1;944;937:12;899:52;983:9;970:23;960:33;;1043:2;1032:9;1028:18;1015:32;1056:31;1081:5;1056:31;:::i;:::-;1106:5;1096:15;;;802:315;;;;;:::o;1795:423::-;1837:3;1875:5;1869:12;1902:6;1897:3;1890:19;1927:1;1937:162;1951:6;1948:1;1945:13;1937:162;;;2013:4;2069:13;;;2065:22;;2059:29;2041:11;;;2037:20;;2030:59;1966:12;1937:162;;;1941:3;2144:1;2137:4;2128:6;2123:3;2119:16;2115:27;2108:38;2207:4;2200:2;2196:7;2191:2;2183:6;2179:15;2175:29;2170:3;2166:39;2162:50;2155:57;;;1795:423;;;;:::o;2223:127::-;2284:10;2279:3;2275:20;2272:1;2265:31;2315:4;2312:1;2305:15;2339:4;2336:1;2329:15;2355:233;2432:1;2425:5;2422:12;2412:143;;2477:10;2472:3;2468:20;2465:1;2458:31;2512:4;2509:1;2502:15;2540:4;2537:1;2530:15;2412:143;2564:18;;2355:233::o;2593:1179::-;3013:4;3042:3;3072:2;3061:9;3054:21;3098:45;3139:2;3128:9;3124:18;3116:6;3098:45;:::i;:::-;3084:59;;3191:9;3183:6;3179:22;3174:2;3163:9;3159:18;3152:50;3225:33;3251:6;3243;3225:33;:::i;:::-;3211:47;;3306:9;3298:6;3294:22;3289:2;3278:9;3274:18;3267:50;3340:33;3366:6;3358;3340:33;:::i;:::-;3326:47;;3421:9;3413:6;3409:22;3404:2;3393:9;3389:18;3382:50;3449:33;3475:6;3467;3449:33;:::i;:::-;3441:41;;;-1:-1:-1;;;;;3523:6:11;3519:55;3513:3;3502:9;3498:19;3491:84;3612:6;3606:3;3595:9;3591:19;3584:35;3656:6;3650:3;3639:9;3635:19;3628:35;3700:6;3694:3;3683:9;3679:19;3672:35;3716:50;3761:3;3750:9;3746:19;3738:6;3716:50;:::i;:::-;2593:1179;;;;;;;;;;;;:::o;3777:1333::-;4188:3;4177:9;4170:22;4151:4;4215:46;4256:3;4245:9;4241:19;4233:6;4215:46;:::i;:::-;4280:2;4330:9;4322:6;4318:22;4313:2;4302:9;4298:18;4291:50;4364:33;4390:6;4382;4364:33;:::i;:::-;-1:-1:-1;;;;;4494:15:11;;;4489:2;4474:18;;4467:43;4546:22;;;4541:2;4526:18;;4519:50;4618:13;;4640:22;;;4716:15;;;;-1:-1:-1;4416:42:11;;4678:15;;;-1:-1:-1;4759:178:11;4773:6;4770:1;4767:13;4759:178;;;4838:13;;4834:22;;4822:35;;4912:15;;;;4877:12;;;;4795:1;4788:9;4759:178;;;4763:3;;4954;4946:11;;;;;;4994:6;4988:3;4977:9;4973:19;4966:35;5038:6;5032:3;5021:9;5017:19;5010:35;5054:50;5099:3;5088:9;5084:19;5076:6;5054:50;:::i;:::-;3777:1333;;;;;;;;;;:::o;5115:127::-;5176:10;5171:3;5167:20;5164:1;5157:31;5207:4;5204:1;5197:15;5231:4;5228:1;5221:15;5247:719;5290:5;5343:3;5336:4;5328:6;5324:17;5320:27;5310:55;;5361:1;5358;5351:12;5310:55;5397:6;5384:20;5423:18;5460:2;5456;5453:10;5450:36;;;5466:18;;:::i;:::-;5541:2;5535:9;5509:2;5595:13;;-1:-1:-1;;5591:22:11;;;5615:2;5587:31;5583:40;5571:53;;;5639:18;;;5659:22;;;5636:46;5633:72;;;5685:18;;:::i;:::-;5725:10;5721:2;5714:22;5760:2;5752:6;5745:18;5806:3;5799:4;5794:2;5786:6;5782:15;5778:26;5775:35;5772:55;;;5823:1;5820;5813:12;5772:55;5887:2;5880:4;5872:6;5868:17;5861:4;5853:6;5849:17;5836:54;5934:1;5927:4;5922:2;5914:6;5910:15;5906:26;5899:37;5954:6;5945:15;;;;;;5247:719;;;;:::o;5971:944::-;6097:6;6105;6113;6121;6174:3;6162:9;6153:7;6149:23;6145:33;6142:53;;;6191:1;6188;6181:12;6142:53;6231:9;6218:23;6260:18;6301:2;6293:6;6290:14;6287:34;;;6317:1;6314;6307:12;6287:34;6340:50;6382:7;6373:6;6362:9;6358:22;6340:50;:::i;:::-;6330:60;;6443:2;6432:9;6428:18;6415:32;6399:48;;6472:2;6462:8;6459:16;6456:36;;;6488:1;6485;6478:12;6456:36;6511:52;6555:7;6544:8;6533:9;6529:24;6511:52;:::i;:::-;6501:62;;6616:2;6605:9;6601:18;6588:32;6572:48;;6645:2;6635:8;6632:16;6629:36;;;6661:1;6658;6651:12;6629:36;6684:52;6728:7;6717:8;6706:9;6702:24;6684:52;:::i;:::-;6674:62;;6789:2;6778:9;6774:18;6761:32;6745:48;;6818:2;6808:8;6805:16;6802:36;;;6834:1;6831;6824:12;6802:36;;6857:52;6901:7;6890:8;6879:9;6875:24;6857:52;:::i;:::-;6847:62;;;5971:944;;;;;;;:::o;7270:127::-;7331:10;7326:3;7322:20;7319:1;7312:31;7362:4;7359:1;7352:15;7386:4;7383:1;7376:15;7762:405;7964:2;7946:21;;;8003:2;7983:18;;;7976:30;8042:34;8037:2;8022:18;;8015:62;-1:-1:-1;;;8108:2:11;8093:18;;8086:39;8157:3;8142:19;;7762:405::o;8886:127::-;8947:10;8942:3;8938:20;8935:1;8928:31;8978:4;8975:1;8968:15;9002:4;8999:1;8992:15;9018:135;9057:3;9078:17;;;9075:43;;9098:18;;:::i;:::-;-1:-1:-1;9145:1:11;9134:13;;9018:135::o;11306:380::-;11385:1;11381:12;;;;11428;;;11449:61;;11503:4;11495:6;11491:17;11481:27;;11449:61;11556:2;11548:6;11545:14;11525:18;11522:38;11519:161;;11602:10;11597:3;11593:20;11590:1;11583:31;11637:4;11634:1;11627:15;11665:4;11662:1;11655:15;11519:161;;11306:380;;;:::o;11817:772::-;11867:3;11908:5;11902:12;11937:36;11963:9;11937:36;:::i;:::-;11982:19;;;12020:4;12043:1;12060:18;;;12087:146;;;;12247:1;12242:341;;;;12053:530;;12087:146;-1:-1:-1;;12129:24:11;;12115:12;;;12108:46;12201:14;;12194:22;12191:1;12187:30;12178:40;;12174:49;;;-1:-1:-1;12087:146:11;;12242:341;12273:5;12270:1;12263:16;12320:2;12317:1;12307:16;12345:1;12359:174;12373:6;12370:1;12367:13;12359:174;;;12460:14;;12442:11;;;12438:20;;12431:44;12503:16;;;;12388:10;;12359:174;;;12557:11;;12553:20;;;-1:-1:-1;;12053:530:11;;;;;;11817:772;;;;:::o;12594:1740::-;13065:4;13094:3;13124:2;13113:9;13106:21;13150:53;13199:2;13188:9;13184:18;13176:6;13150:53;:::i;:::-;13136:67;;13222:2;13272:9;13264:6;13260:22;13255:2;13244:9;13240:18;13233:50;13306:41;13340:6;13332;13306:41;:::i;:::-;13292:55;;13395:9;13387:6;13383:22;13378:2;13367:9;13363:18;13356:50;13429:41;13463:6;13455;13429:41;:::i;:::-;13415:55;;13518:9;13510:6;13506:22;13501:2;13490:9;13486:18;13479:50;13552:41;13586:6;13578;13552:41;:::i;:::-;-1:-1:-1;;;;;13691:15:11;;;13685:3;13670:19;;13663:44;13744:22;;;13738:3;13723:19;;13716:51;13816:13;;13838:22;;;-1:-1:-1;13900:17:11;;;13940:16;;;;-1:-1:-1;13612:42:11;;13876:15;;;13984:177;13998:6;13995:1;13992:13;13984:177;;;14063:13;;14059:22;;14047:35;;14149:1;14137:14;;;;14102:12;;;;14013:9;13984:177;;;13988:3;;14178;14170:11;;;;;;14218:6;14212:3;14201:9;14197:19;14190:35;14262:6;14256:3;14245:9;14241:19;14234:35;14278:50;14323:3;14312:9;14308:19;14300:6;14278:50;:::i;14339:226::-;14494:2;14483:9;14476:21;14457:4;14514:45;14555:2;14544:9;14540:18;14532:6;14514:45;:::i;14570:184::-;14640:6;14693:2;14681:9;14672:7;14668:23;14664:32;14661:52;;;14709:1;14706;14699:12;14661:52;-1:-1:-1;14732:16:11;;14570:184;-1:-1:-1;14570:184:11:o;14759:175::-;14796:3;14840:4;14833:5;14829:16;14869:4;14860:7;14857:17;14854:43;;14877:18;;:::i;:::-;14926:1;14913:15;;14759:175;-1:-1:-1;;14759:175:11:o;16354:545::-;16456:2;16451:3;16448:11;16445:448;;;16492:1;16517:5;16513:2;16506:17;16562:4;16558:2;16548:19;16632:2;16620:10;16616:19;16613:1;16609:27;16603:4;16599:38;16668:4;16656:10;16653:20;16650:47;;;-1:-1:-1;16691:4:11;16650:47;16746:2;16741:3;16737:12;16734:1;16730:20;16724:4;16720:31;16710:41;;16801:82;16819:2;16812:5;16809:13;16801:82;;;16864:17;;;16845:1;16834:13;16801:82;;;16805:3;;;16354:545;;;:::o;17075:1352::-;17201:3;17195:10;17228:18;17220:6;17217:30;17214:56;;;17250:18;;:::i;:::-;17279:97;17369:6;17329:38;17361:4;17355:11;17329:38;:::i;:::-;17323:4;17279:97;:::i;:::-;17431:4;;17495:2;17484:14;;17512:1;17507:663;;;;18214:1;18231:6;18228:89;;;-1:-1:-1;18283:19:11;;;18277:26;18228:89;-1:-1:-1;;17032:1:11;17028:11;;;17024:24;17020:29;17010:40;17056:1;17052:11;;;17007:57;18330:81;;17477:944;;17507:663;11764:1;11757:14;;;11801:4;11788:18;;-1:-1:-1;;17543:20:11;;;17661:236;17675:7;17672:1;17669:14;17661:236;;;17764:19;;;17758:26;17743:42;;17856:27;;;;17824:1;17812:14;;;;17691:19;;17661:236;;;17665:3;17925:6;17916:7;17913:19;17910:201;;;17986:19;;;17980:26;-1:-1:-1;;18069:1:11;18065:14;;;18081:3;18061:24;18057:37;18053:42;18038:58;18023:74;;17910:201;-1:-1:-1;;;;;18157:1:11;18141:14;;;18137:22;18124:36;;-1:-1:-1;17075:1352:11:o;19440:168::-;19513:9;;;19544;;19561:15;;;19555:22;;19541:37;19531:71;;19582:18;;:::i",
  "source": "pragma solidity ^0.8.0;\n\nimport \"../proposal/Proposal.sol\";\nimport \"../utils/Proof.sol\";\nimport \"@openzeppelin/contracts/security/PullPayment.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n/// @title Simulation for City improvement proposal system.\n/// @author Joseph Nicholas R. Alcantara\n/// @notice This contract for educational purposes only, \n///         this will simulate a City improvement which \n///         is a type of legal proposal.\n/// @dev All of the functionalities are experimental but are already unit tested.\ncontract CityImprovement is Proposal, PullPayment, Ownable, Pausable {\n\n    using SafeMath for uint;\n\n    // address of patent applicants.\n    mapping(address => bool) public applicants;\n\n    // address of patent approvers.\n    mapping(address => bool) public approvers;\n\n    // address of improvement voters\n    mapping(address => bool) public voters;\n\n    // reward amount\n    uint constant private REWARD_AMOUNT = 1 ether;\n\n    // list of proposals\n    Proposal.ProposalDetails[] public improvements;\n\n    // Modifiers\n    modifier isApprover(address _address) {\n        require(approvers[_address] == true, \"Only approver is allowed\");\n        _;\n    }\n\n    modifier isVoter(address _address) {\n        require(voters[_address] == true, \"Only voter is allowed\");\n        _;\n    }\n\n    modifier notClosed(uint id) {\n        require(improvements[id].status != Proposal.State.Closed, \"Only open proposals are allowed\");\n        _;\n    }\n\n    /// @dev Reads and returns the proposal by Id.\n    /// @param id Proposal id.\n    function readProposal(uint id)\n    public\n    view\n    whenNotPaused\n    returns (string memory title,\n        string memory description,\n        address applicant,\n        address payable[] memory approver,\n        uint votes,\n        bytes32 proof,\n        Proposal.State status) {\n        require(improvements.length > 0, \"There should be a proposal to read on\");\n        return (improvements[id].title,\n        improvements[id].description,\n        improvements[id].applicant,\n        improvements[id].approver,\n        improvements[id].votes,\n        improvements[id].proof,\n        improvements[id].status);\n    }\n\n    /// @dev Start of city improvement application.\n    /// @param title City improvement title.\n    /// @param description City improvement description.\n    /// @param problem City improvement problem it wishes to tackle.\n    /// @param solution Problem's solution.\n    function submit(string memory title, string memory description, string memory problem, string memory solution) public whenNotPaused {\n        require(applicants[msg.sender] == false);\n        require(voters[msg.sender] == false);\n        require(approvers[msg.sender] == false);\n        require(msg.sender != owner());\n\n        ProposalDetails storage improvement = improvements.push();\n        improvement.title = title;\n        improvement.description = description;\n        improvement.problem = problem;\n        improvement.solution = solution;\n        improvement.applicant = payable(msg.sender);\n        improvement.approver = new address payable[](0);\n        //        votes: 0,\n        improvement.approvals = 0;\n        improvement.proof = 0x0;\n        improvement.status = Proposal.State.Submitted;\n\n\n        applicants[msg.sender] = true;\n        emit LogSubmit(improvements.length, msg.sender);\n    }\n\n    /// @dev Approves the City improvement proposal. Application approval sents some reward amount to\n    ///      the applicant which will also vary depending on the number of votes.\n    /// @param id City improvement ID.\n    function approve(uint id) public payable isApprover(msg.sender) notClosed(id) whenNotPaused {\n        require(improvements[id].votes > 0, \"Proposal votes should be present for approval\");\n        require(improvements[id].approvals <= 2, \"Proposal approvals not exceed 2\");\n        require(improvements[id].status == Proposal.State.Submitted, \"Proposal status should still be submitted\");\n        if (improvements[id].approver.length > 0) {\n            require(msg.sender != improvements[id].approver[0], \"Approver can only approve once\");\n        }\n\n        improvements[id].approvals++;\n        improvements[id].approver.push(payable(msg.sender));\n        if (improvements[id].approvals == 2) {\n            improvements[id].status = Proposal.State.Approved;\n\n            //After approval notarize proposal.\n            improvements[id].proof = Proof.notarize(abi.encode(improvements[id].title,\n                improvements[id].description,\n                improvements[id].problem,\n                improvements[id].solution,\n                improvements[id].applicant,\n                improvements[id].approver,\n                improvements[id].votes,\n                improvements[id].approvals,\n                improvements[id].status));\n\n            // reward some tokens to applicant.\n            _asyncTransfer(improvements[id].applicant, REWARD_AMOUNT.mul(improvements[id].votes));\n\n            // once approved applicant can submit, be a voter, or approver.\n            applicants[improvements[id].applicant] = false;\n\n            emit LogApprove(id);\n        }\n    }\n\n    /// @dev This function rejects the idea by the approver.\n    /// @param id Proposal id.\n    function reject(uint id) public isApprover(msg.sender) notClosed(id) whenNotPaused {\n        // Checks if an approver already approved the proposal.\n        if (improvements[id].approver.length > 0) {\n            require(msg.sender != improvements[id].approver[0], \"First approver cannot reject the application\");\n        }\n        require(improvements[id].status == Proposal.State.Submitted, \"Proposal status should still be submitted\");\n        improvements[id].approver.push(payable(msg.sender));\n        improvements[id].status = Proposal.State.Rejected;\n        applicants[msg.sender] = true;\n        emit LogReject(id);\n    }\n\n    /// @dev This function rejects the idea by the approver.\n    /// @param id Proposal id.\n    function vote(uint id) public isVoter(msg.sender) notClosed(id) whenNotPaused {\n        require(improvements[id].status == Proposal.State.Submitted, \"Proposal status should still be submitted\");\n        require(improvements[id].voted[msg.sender] == false, \"Voter can only vote once.\");\n        require(improvements[id].status != Proposal.State.Rejected, \"Cannot vote if already rejected\");\n\n        improvements[id].votes++;\n        improvements[id].voted[msg.sender] = true;\n        emit LogVote(id);\n    }\n\n    /// @dev Owner only function to close a proposal when it is approved or rejected.\n    /// @param id Proposal id.\n    function close(uint id) public onlyOwner notClosed(id) whenNotPaused {\n        require(improvements[id].status == Proposal.State.Approved || improvements[id].status == Proposal.State.Rejected, \"Proposal state should be approved or rejected.\");\n        improvements[id].status = Proposal.State.Closed;\n        emit LogClose(id);\n    }\n\n    /// @dev Marks the caller as the an approver, which will be assigned as among the 2 to approve proposals.\n    function applyForApprover() public whenNotPaused {\n        require(applicants[msg.sender] == false);\n        require(voters[msg.sender] == false);\n        require(approvers[msg.sender] == false);\n        require(msg.sender != owner());\n\n        approvers[msg.sender] = true;\n        emit LogApproverApply(msg.sender);\n    }\n\n    /// @dev Marks the caller as a voter, which can then be vote for proposals.\n    function applyForVoter() public whenNotPaused {\n        require(applicants[msg.sender] == false);\n        require(voters[msg.sender] == false);\n        require(approvers[msg.sender] == false);\n        require(msg.sender != owner());\n\n        voters[msg.sender] = true;\n        emit LogVoterApply(msg.sender);\n    }\n\n    /// @dev Gets the number of proposals.\n    /// @return number of proposals\n    function getNumberOfProposals() public view whenNotPaused returns (uint)  {\n        return improvements.length;\n    }\n\n    /// @dev Helper function to know if approver already is done.\n    /// @return true/false if approver is found in proposal\n    function doneApproving(uint id, address approver) public view returns (bool) {\n        for (uint8 idx = 0; idx < improvements[id].approver.length; idx++) {\n            if (improvements[id].approver[idx] == approver) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @dev Helper function to know if voter already is done.\n    /// @return true/false if voter is found in proposal\n    function doneVoting(uint id, address voter) public view returns (bool) {\n        return improvements[id].voted[voter];\n    }\n}",
  "sourcePath": "/mnt/c/Users/josep/WebstormProjects/proposal-dapp/contracts/city/CityImprovement.sol",
  "ast": {
    "absolutePath": "project:/contracts/city/CityImprovement.sol",
    "exportedSymbols": {
      "Address": [
        578
      ],
      "CityImprovement": [
        1914
      ],
      "Context": [
        600
      ],
      "Escrow": [
        696
      ],
      "Ownable": [
        112
      ],
      "Pausable": [
        220
      ],
      "Proof": [
        2043
      ],
      "Proposal": [
        2026
      ],
      "PullPayment": [
        283
      ],
      "SafeMath": [
        1008
      ]
    },
    "id": 1915,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1068,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:8"
      },
      {
        "absolutePath": "project:/contracts/proposal/Proposal.sol",
        "file": "../proposal/Proposal.sol",
        "id": 1069,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 2027,
        "src": "25:34:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/utils/Proof.sol",
        "file": "../utils/Proof.sol",
        "id": 1070,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 2044,
        "src": "60:28:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/PullPayment.sol",
        "file": "@openzeppelin/contracts/security/PullPayment.sol",
        "id": 1071,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 284,
        "src": "89:58:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 1072,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 113,
        "src": "148:52:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 1073,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 1009,
        "src": "201:57:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
        "file": "@openzeppelin/contracts/security/Pausable.sol",
        "id": 1074,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1915,
        "sourceUnit": 221,
        "src": "259:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1076,
              "name": "Proposal",
              "nameLocations": [
                "683:8:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2026,
              "src": "683:8:8"
            },
            "id": 1077,
            "nodeType": "InheritanceSpecifier",
            "src": "683:8:8"
          },
          {
            "baseName": {
              "id": 1078,
              "name": "PullPayment",
              "nameLocations": [
                "693:11:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 283,
              "src": "693:11:8"
            },
            "id": 1079,
            "nodeType": "InheritanceSpecifier",
            "src": "693:11:8"
          },
          {
            "baseName": {
              "id": 1080,
              "name": "Ownable",
              "nameLocations": [
                "706:7:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "706:7:8"
            },
            "id": 1081,
            "nodeType": "InheritanceSpecifier",
            "src": "706:7:8"
          },
          {
            "baseName": {
              "id": 1082,
              "name": "Pausable",
              "nameLocations": [
                "715:8:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "715:8:8"
            },
            "id": 1083,
            "nodeType": "InheritanceSpecifier",
            "src": "715:8:8"
          }
        ],
        "canonicalName": "CityImprovement",
        "contractDependencies": [
          696
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 1075,
          "nodeType": "StructuredDocumentation",
          "src": "316:339:8",
          "text": "@title Simulation for City improvement proposal system.\n @author Joseph Nicholas R. Alcantara\n @notice This contract for educational purposes only, \n         this will simulate a City improvement which \n         is a type of legal proposal.\n @dev All of the functionalities are experimental but are already unit tested."
        },
        "fullyImplemented": true,
        "id": 1914,
        "linearizedBaseContracts": [
          1914,
          220,
          112,
          600,
          283,
          2026
        ],
        "name": "CityImprovement",
        "nameLocation": "664:15:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1086,
            "libraryName": {
              "id": 1084,
              "name": "SafeMath",
              "nameLocations": [
                "737:8:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1008,
              "src": "737:8:8"
            },
            "nodeType": "UsingForDirective",
            "src": "731:24:8",
            "typeName": {
              "id": 1085,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "750:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ccd66863",
            "id": 1090,
            "mutability": "mutable",
            "name": "applicants",
            "nameLocation": "830:10:8",
            "nodeType": "VariableDeclaration",
            "scope": 1914,
            "src": "798:42:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1089,
              "keyType": {
                "id": 1087,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "806:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "798:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1088,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "817:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0a144391",
            "id": 1094,
            "mutability": "mutable",
            "name": "approvers",
            "nameLocation": "915:9:8",
            "nodeType": "VariableDeclaration",
            "scope": 1914,
            "src": "883:41:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1093,
              "keyType": {
                "id": 1091,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "883:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1092,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "902:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a3ec138d",
            "id": 1098,
            "mutability": "mutable",
            "name": "voters",
            "nameLocation": "1000:6:8",
            "nodeType": "VariableDeclaration",
            "scope": 1914,
            "src": "968:38:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1097,
              "keyType": {
                "id": 1095,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "976:7:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "968:24:8",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1096,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "987:4:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1101,
            "mutability": "constant",
            "name": "REWARD_AMOUNT",
            "nameLocation": "1056:13:8",
            "nodeType": "VariableDeclaration",
            "scope": 1914,
            "src": "1034:45:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1099,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1034:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 1100,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1072:7:8",
              "subdenomination": "ether",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "bf4f1e98",
            "id": 1105,
            "mutability": "mutable",
            "name": "improvements",
            "nameLocation": "1145:12:8",
            "nodeType": "VariableDeclaration",
            "scope": 1914,
            "src": "1111:46:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
              "typeString": "struct Proposal.ProposalDetails[]"
            },
            "typeName": {
              "baseType": {
                "id": 1103,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1102,
                  "name": "Proposal.ProposalDetails",
                  "nameLocations": [
                    "1111:8:8",
                    "1120:15:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1951,
                  "src": "1111:24:8"
                },
                "referencedDeclaration": 1951,
                "src": "1111:24:8",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                  "typeString": "struct Proposal.ProposalDetails"
                }
              },
              "id": 1104,
              "nodeType": "ArrayTypeName",
              "src": "1111:26:8",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage_ptr",
                "typeString": "struct Proposal.ProposalDetails[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1119,
              "nodeType": "Block",
              "src": "1219:92:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1110,
                            "name": "approvers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1237:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1112,
                          "indexExpression": {
                            "id": 1111,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1107,
                            "src": "1247:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1237:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1260:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1237:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920617070726f76657220697320616c6c6f776564",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1266:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a7ee7d584e25d0f1b6e810a2c61c245981ac08c3cdf79dcbd9cc118ad0f1bc9",
                          "typeString": "literal_string \"Only approver is allowed\""
                        },
                        "value": "Only approver is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a7ee7d584e25d0f1b6e810a2c61c245981ac08c3cdf79dcbd9cc118ad0f1bc9",
                          "typeString": "literal_string \"Only approver is allowed\""
                        }
                      ],
                      "id": 1109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1229:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:64:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:64:8"
                },
                {
                  "id": 1118,
                  "nodeType": "PlaceholderStatement",
                  "src": "1303:1:8"
                }
              ]
            },
            "id": 1120,
            "name": "isApprover",
            "nameLocation": "1190:10:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1107,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1209:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1120,
                  "src": "1201:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:18:8"
            },
            "src": "1181:130:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1134,
              "nodeType": "Block",
              "src": "1352:86:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1125,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "1370:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1127,
                          "indexExpression": {
                            "id": 1126,
                            "name": "_address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1122,
                            "src": "1377:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1370:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1390:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "1370:24:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920766f74657220697320616c6c6f776564",
                        "id": 1130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1396:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a4ed89fa2f171494e93272cc7b869ed69bb1b885cec91064a15ada8a2e9f42f2",
                          "typeString": "literal_string \"Only voter is allowed\""
                        },
                        "value": "Only voter is allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a4ed89fa2f171494e93272cc7b869ed69bb1b885cec91064a15ada8a2e9f42f2",
                          "typeString": "literal_string \"Only voter is allowed\""
                        }
                      ],
                      "id": 1124,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1362:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:58:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1132,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:58:8"
                },
                {
                  "id": 1133,
                  "nodeType": "PlaceholderStatement",
                  "src": "1430:1:8"
                }
              ]
            },
            "id": 1135,
            "name": "isVoter",
            "nameLocation": "1326:7:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1342:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1135,
                  "src": "1334:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1334:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1333:18:8"
            },
            "src": "1317:121:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1152,
              "nodeType": "Block",
              "src": "1472:120:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        },
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1140,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "1490:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1142,
                            "indexExpression": {
                              "id": 1141,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1503:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1490:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1507:6:8",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1950,
                          "src": "1490:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1144,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "1517:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                "typeString": "type(contract Proposal)"
                              }
                            },
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1526:5:8",
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1924,
                            "src": "1517:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                              "typeString": "type(enum Proposal.State)"
                            }
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1532:6:8",
                          "memberName": "Closed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1922,
                          "src": "1517:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "src": "1490:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70656e2070726f706f73616c732061726520616c6c6f776564",
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1540:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_352a142377b9a4c12807000a01c867d6704dfd507b82beaa8bd1658bd8f2e516",
                          "typeString": "literal_string \"Only open proposals are allowed\""
                        },
                        "value": "Only open proposals are allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_352a142377b9a4c12807000a01c867d6704dfd507b82beaa8bd1658bd8f2e516",
                          "typeString": "literal_string \"Only open proposals are allowed\""
                        }
                      ],
                      "id": 1139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1482:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:92:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1150,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:92:8"
                },
                {
                  "id": 1151,
                  "nodeType": "PlaceholderStatement",
                  "src": "1584:1:8"
                }
              ]
            },
            "id": 1153,
            "name": "notClosed",
            "nameLocation": "1453:9:8",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1137,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1468:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1153,
                  "src": "1463:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1463:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:9:8"
            },
            "src": "1444:148:8",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1215,
              "nodeType": "Block",
              "src": "1962:337:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1178,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "1980:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1993:6:8",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1980:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2002:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1980:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686572652073686f756c6420626520612070726f706f73616c20746f2072656164206f6e",
                        "id": 1182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2005:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77850cb0f8037976b44c42b20abc5057dedc82423b7e5227f8bc87659e8d42e3",
                          "typeString": "literal_string \"There should be a proposal to read on\""
                        },
                        "value": "There should be a proposal to read on"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77850cb0f8037976b44c42b20abc5057dedc82423b7e5227f8bc87659e8d42e3",
                          "typeString": "literal_string \"There should be a proposal to read on\""
                        }
                      ],
                      "id": 1177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1972:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1972:73:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "1972:73:8"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1185,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2063:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1187,
                          "indexExpression": {
                            "id": 1186,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2076:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2063:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2080:5:8",
                        "memberName": "title",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1926,
                        "src": "2063:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1189,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2095:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1191,
                          "indexExpression": {
                            "id": 1190,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2108:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2095:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2112:11:8",
                        "memberName": "description",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1928,
                        "src": "2095:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1193,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2133:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1195,
                          "indexExpression": {
                            "id": 1194,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2146:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2133:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1196,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2150:9:8",
                        "memberName": "applicant",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1934,
                        "src": "2133:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1197,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2169:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1199,
                          "indexExpression": {
                            "id": 1198,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2182:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2169:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2186:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "2169:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1201,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2204:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1203,
                          "indexExpression": {
                            "id": 1202,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2217:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2204:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2221:5:8",
                        "memberName": "votes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1943,
                        "src": "2204:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1205,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2236:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1207,
                          "indexExpression": {
                            "id": 1206,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2249:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2236:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1208,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2253:5:8",
                        "memberName": "proof",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1947,
                        "src": "2236:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1209,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "2268:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1211,
                          "indexExpression": {
                            "id": 1210,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2281:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2268:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2285:6:8",
                        "memberName": "status",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1950,
                        "src": "2268:23:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        }
                      }
                    ],
                    "id": 1213,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2062:230:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_address_payable_$_t_array$_t_address_payable_$dyn_storage_$_t_uint256_$_t_bytes32_$_t_enum$_State_$1924_$",
                      "typeString": "tuple(string storage ref,string storage ref,address payable,address payable[] storage ref,uint256,bytes32,enum Proposal.State)"
                    }
                  },
                  "functionReturnParameters": 1176,
                  "id": 1214,
                  "nodeType": "Return",
                  "src": "2055:237:8"
                }
              ]
            },
            "documentation": {
              "id": 1154,
              "nodeType": "StructuredDocumentation",
              "src": "1598:77:8",
              "text": "@dev Reads and returns the proposal by Id.\n @param id Proposal id."
            },
            "functionSelector": "d1eba6c7",
            "id": 1216,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1159,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1158,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "1735:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1735:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "1735:13:8"
              }
            ],
            "name": "readProposal",
            "nameLocation": "1689:12:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1707:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1702:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1155,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:9:8"
            },
            "returnParameters": {
              "id": 1176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1161,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "1776:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1762:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1762:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1163,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "1805:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1791:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1162,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1165,
                  "mutability": "mutable",
                  "name": "applicant",
                  "nameLocation": "1834:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1826:17:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1168,
                  "mutability": "mutable",
                  "name": "approver",
                  "nameLocation": "1878:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1853:33:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                    "typeString": "address payable[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1166,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1853:15:8",
                      "stateMutability": "payable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "id": 1167,
                    "nodeType": "ArrayTypeName",
                    "src": "1853:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                      "typeString": "address payable[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "votes",
                  "nameLocation": "1901:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1896:10:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1896:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1172,
                  "mutability": "mutable",
                  "name": "proof",
                  "nameLocation": "1924:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1916:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1171,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1916:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "1954:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1216,
                  "src": "1939:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$1924",
                    "typeString": "enum Proposal.State"
                  },
                  "typeName": {
                    "id": 1174,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1173,
                      "name": "Proposal.State",
                      "nameLocations": [
                        "1939:8:8",
                        "1948:5:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1924,
                      "src": "1939:14:8"
                    },
                    "referencedDeclaration": 1924,
                    "src": "1939:14:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$1924",
                      "typeString": "enum Proposal.State"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1761:200:8"
            },
            "scope": 1914,
            "src": "1680:619:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1993
            ],
            "body": {
              "id": 1350,
              "nodeType": "Block",
              "src": "2704:781:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1231,
                            "name": "applicants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "2722:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1234,
                          "indexExpression": {
                            "expression": {
                              "id": 1232,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2733:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2737:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2733:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2722:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2748:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2722:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2714:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2714:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1238,
                  "nodeType": "ExpressionStatement",
                  "src": "2714:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1240,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "2772:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1243,
                          "indexExpression": {
                            "expression": {
                              "id": 1241,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2779:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2783:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2779:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2772:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2794:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2772:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2764:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "2764:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1249,
                            "name": "approvers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "2818:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1252,
                          "indexExpression": {
                            "expression": {
                              "id": 1250,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2828:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2832:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2828:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2818:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2843:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2818:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2810:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2810:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1256,
                  "nodeType": "ExpressionStatement",
                  "src": "2810:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1258,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2867:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2871:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2867:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1260,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "2881:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2881:7:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2867:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2859:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2859:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1264,
                  "nodeType": "ExpressionStatement",
                  "src": "2859:30:8"
                },
                {
                  "assignments": [
                    1267
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1267,
                      "mutability": "mutable",
                      "name": "improvement",
                      "nameLocation": "2924:11:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1350,
                      "src": "2900:35:8",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                        "typeString": "struct Proposal.ProposalDetails"
                      },
                      "typeName": {
                        "id": 1266,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1265,
                          "name": "ProposalDetails",
                          "nameLocations": [
                            "2900:15:8"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1951,
                          "src": "2900:15:8"
                        },
                        "referencedDeclaration": 1951,
                        "src": "2900:15:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1271,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1268,
                        "name": "improvements",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1105,
                        "src": "2938:12:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2951:4:8",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2938:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage_ptr_$returns$_t_struct$_ProposalDetails_$1951_storage_$bound_to$_t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Proposal.ProposalDetails storage ref[] storage pointer) returns (struct Proposal.ProposalDetails storage ref)"
                      }
                    },
                    "id": 1270,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:19:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                      "typeString": "struct Proposal.ProposalDetails storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2900:57:8"
                },
                {
                  "expression": {
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1272,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "2967:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1274,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2979:5:8",
                      "memberName": "title",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1926,
                      "src": "2967:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1275,
                      "name": "title",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1219,
                      "src": "2987:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2967:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "2967:25:8"
                },
                {
                  "expression": {
                    "id": 1282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1278,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3002:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1280,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3014:11:8",
                      "memberName": "description",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1928,
                      "src": "3002:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1281,
                      "name": "description",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1221,
                      "src": "3028:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3002:37:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1283,
                  "nodeType": "ExpressionStatement",
                  "src": "3002:37:8"
                },
                {
                  "expression": {
                    "id": 1288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1284,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3049:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3061:7:8",
                      "memberName": "problem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1930,
                      "src": "3049:19:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1287,
                      "name": "problem",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1223,
                      "src": "3071:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3049:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1289,
                  "nodeType": "ExpressionStatement",
                  "src": "3049:29:8"
                },
                {
                  "expression": {
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1290,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3088:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1292,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3100:8:8",
                      "memberName": "solution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1932,
                      "src": "3088:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1293,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1225,
                      "src": "3111:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3088:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "3088:31:8"
                },
                {
                  "expression": {
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1296,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3129:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3141:9:8",
                      "memberName": "applicant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1934,
                      "src": "3129:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1301,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3161:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3165:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3161:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3153:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3153:8:8",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3153:19:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "3129:43:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "3129:43:8"
                },
                {
                  "expression": {
                    "id": 1314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1306,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3182:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3194:8:8",
                      "memberName": "approver",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1937,
                      "src": "3182:20:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3227:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3205:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3209:15:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1310,
                          "nodeType": "ArrayTypeName",
                          "src": "3209:17:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 1313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3205:24:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "3182:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 1315,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:47:8"
                },
                {
                  "expression": {
                    "id": 1320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1316,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3267:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3279:9:8",
                      "memberName": "approvals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1945,
                      "src": "3267:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3291:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3267:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1321,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:25:8"
                },
                {
                  "expression": {
                    "id": 1326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1322,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3302:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1324,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3314:5:8",
                      "memberName": "proof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1947,
                      "src": "3302:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307830",
                      "id": 1325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3322:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0x0"
                    },
                    "src": "3302:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1327,
                  "nodeType": "ExpressionStatement",
                  "src": "3302:23:8"
                },
                {
                  "expression": {
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1328,
                        "name": "improvement",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3335:11:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage_ptr",
                          "typeString": "struct Proposal.ProposalDetails storage pointer"
                        }
                      },
                      "id": 1330,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3347:6:8",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "3335:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 1331,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "3356:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                            "typeString": "type(contract Proposal)"
                          }
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3365:5:8",
                        "memberName": "State",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1924,
                        "src": "3356:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                          "typeString": "type(enum Proposal.State)"
                        }
                      },
                      "id": 1333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3371:9:8",
                      "memberName": "Submitted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1918,
                      "src": "3356:24:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "src": "3335:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$1924",
                      "typeString": "enum Proposal.State"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "3335:45:8"
                },
                {
                  "expression": {
                    "id": 1341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1336,
                        "name": "applicants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "3392:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1339,
                      "indexExpression": {
                        "expression": {
                          "id": 1337,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3403:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3407:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3403:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3392:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3417:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3392:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1342,
                  "nodeType": "ExpressionStatement",
                  "src": "3392:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1344,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "3446:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3459:6:8",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3446:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3467:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3471:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3467:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1343,
                      "name": "LogSubmit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1957,
                      "src": "3436:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3436:42:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1349,
                  "nodeType": "EmitStatement",
                  "src": "3431:47:8"
                }
              ]
            },
            "documentation": {
              "id": 1217,
              "nodeType": "StructuredDocumentation",
              "src": "2305:262:8",
              "text": "@dev Start of city improvement application.\n @param title City improvement title.\n @param description City improvement description.\n @param problem City improvement problem it wishes to tackle.\n @param solution Problem's solution."
            },
            "functionSelector": "fdaa0cc7",
            "id": 1351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1227,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "2690:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "2690:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "2690:13:8"
              }
            ],
            "name": "submit",
            "nameLocation": "2581:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "title",
                  "nameLocation": "2602:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "2588:19:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2588:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1221,
                  "mutability": "mutable",
                  "name": "description",
                  "nameLocation": "2623:11:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "2609:25:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1220,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2609:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1223,
                  "mutability": "mutable",
                  "name": "problem",
                  "nameLocation": "2650:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "2636:21:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1222,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1225,
                  "mutability": "mutable",
                  "name": "solution",
                  "nameLocation": "2673:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1351,
                  "src": "2659:22:8",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1224,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2587:95:8"
            },
            "returnParameters": {
              "id": 1229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2704:0:8"
            },
            "scope": 1914,
            "src": "2572:913:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1999
            ],
            "body": {
              "id": 1530,
              "nodeType": "Block",
              "src": "3806:1482:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1367,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "3824:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1369,
                            "indexExpression": {
                              "id": 1368,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "3837:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3824:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3841:5:8",
                          "memberName": "votes",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1943,
                          "src": "3824:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3849:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3824:26:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20766f7465732073686f756c642062652070726573656e7420666f7220617070726f76616c",
                        "id": 1373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3852:47:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08ffc111a0ed98409a55085016b51ffdaf90681463006f6c12b322f42f4ff119",
                          "typeString": "literal_string \"Proposal votes should be present for approval\""
                        },
                        "value": "Proposal votes should be present for approval"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08ffc111a0ed98409a55085016b51ffdaf90681463006f6c12b322f42f4ff119",
                          "typeString": "literal_string \"Proposal votes should be present for approval\""
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3816:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3816:84:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1375,
                  "nodeType": "ExpressionStatement",
                  "src": "3816:84:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1377,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "3918:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1379,
                            "indexExpression": {
                              "id": 1378,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "3931:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3918:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1380,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3935:9:8",
                          "memberName": "approvals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1945,
                          "src": "3918:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 1381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3948:1:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "3918:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c20617070726f76616c73206e6f74206578636565642032",
                        "id": 1383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3951:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23cc21b0be89388eaddd27462435586264c4df8010ef33707d8837ebd3294f5f",
                          "typeString": "literal_string \"Proposal approvals not exceed 2\""
                        },
                        "value": "Proposal approvals not exceed 2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23cc21b0be89388eaddd27462435586264c4df8010ef33707d8837ebd3294f5f",
                          "typeString": "literal_string \"Proposal approvals not exceed 2\""
                        }
                      ],
                      "id": 1376,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3910:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3910:75:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1385,
                  "nodeType": "ExpressionStatement",
                  "src": "3910:75:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        },
                        "id": 1394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1387,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "4003:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1389,
                            "indexExpression": {
                              "id": 1388,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "4016:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4003:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4020:6:8",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1950,
                          "src": "4003:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1391,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "4030:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                "typeString": "type(contract Proposal)"
                              }
                            },
                            "id": 1392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4039:5:8",
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1924,
                            "src": "4030:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                              "typeString": "type(enum Proposal.State)"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4045:9:8",
                          "memberName": "Submitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1918,
                          "src": "4030:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "src": "4003:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c207374617475732073686f756c64207374696c6c206265207375626d6974746564",
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4056:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        },
                        "value": "Proposal status should still be submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        }
                      ],
                      "id": 1386,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3995:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1397,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:105:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1398,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "4114:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1400,
                          "indexExpression": {
                            "id": 1399,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "4127:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4114:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1401,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4131:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "4114:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4140:6:8",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4114:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4149:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4114:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1419,
                  "nodeType": "IfStatement",
                  "src": "4110:152:8",
                  "trueBody": {
                    "id": 1418,
                    "nodeType": "Block",
                    "src": "4152:110:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1406,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4174:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4178:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4174:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1408,
                                      "name": "improvements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "4188:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1410,
                                    "indexExpression": {
                                      "id": 1409,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1354,
                                      "src": "4201:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4188:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                      "typeString": "struct Proposal.ProposalDetails storage ref"
                                    }
                                  },
                                  "id": 1411,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4205:8:8",
                                  "memberName": "approver",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1937,
                                  "src": "4188:25:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                    "typeString": "address payable[] storage ref"
                                  }
                                },
                                "id": 1413,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4214:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4188:28:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "4174:42:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "417070726f7665722063616e206f6e6c7920617070726f7665206f6e6365",
                              "id": 1415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4218:32:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51a9fd02ae513733ddc16cb73ca8d0327f466d4638dccfd4ee134b5191efef2b",
                                "typeString": "literal_string \"Approver can only approve once\""
                              },
                              "value": "Approver can only approve once"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51a9fd02ae513733ddc16cb73ca8d0327f466d4638dccfd4ee134b5191efef2b",
                                "typeString": "literal_string \"Approver can only approve once\""
                              }
                            ],
                            "id": 1405,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4166:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4166:85:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1417,
                        "nodeType": "ExpressionStatement",
                        "src": "4166:85:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "4272:28:8",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1420,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "4272:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1422,
                        "indexExpression": {
                          "id": 1421,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "4285:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4272:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1423,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4289:9:8",
                      "memberName": "approvals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1945,
                      "src": "4272:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1425,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:28:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1433,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4349:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1434,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4353:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4349:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4341:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4341:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4341:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1426,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "4310:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1428,
                          "indexExpression": {
                            "id": 1427,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1354,
                            "src": "4323:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4310:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1429,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4327:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "4310:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4336:4:8",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4310:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 1436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4310:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1437,
                  "nodeType": "ExpressionStatement",
                  "src": "4310:51:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1438,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "4375:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1440,
                        "indexExpression": {
                          "id": 1439,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1354,
                          "src": "4388:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4375:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1441,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4392:9:8",
                      "memberName": "approvals",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1945,
                      "src": "4375:26:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "32",
                      "id": 1442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4405:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "src": "4375:31:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1529,
                  "nodeType": "IfStatement",
                  "src": "4371:911:8",
                  "trueBody": {
                    "id": 1528,
                    "nodeType": "Block",
                    "src": "4408:874:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1444,
                                "name": "improvements",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "4422:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                }
                              },
                              "id": 1446,
                              "indexExpression": {
                                "id": 1445,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1354,
                                "src": "4435:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4422:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref"
                              }
                            },
                            "id": 1447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4439:6:8",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1950,
                            "src": "4422:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "expression": {
                                "id": 1448,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "4448:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                  "typeString": "type(contract Proposal)"
                                }
                              },
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4457:5:8",
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1924,
                              "src": "4448:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                                "typeString": "type(enum Proposal.State)"
                              }
                            },
                            "id": 1450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "4463:8:8",
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1921,
                            "src": "4448:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "src": "4422:49:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "id": 1452,
                        "nodeType": "ExpressionStatement",
                        "src": "4422:49:8"
                      },
                      {
                        "expression": {
                          "id": 1499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1453,
                                "name": "improvements",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "4534:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                }
                              },
                              "id": 1455,
                              "indexExpression": {
                                "id": 1454,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1354,
                                "src": "4547:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4534:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref"
                              }
                            },
                            "id": 1456,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "4551:5:8",
                            "memberName": "proof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1947,
                            "src": "4534:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1461,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4585:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1463,
                                      "indexExpression": {
                                        "id": 1462,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4598:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4585:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1464,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4602:5:8",
                                    "memberName": "title",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1926,
                                    "src": "4585:22:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1465,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4625:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1467,
                                      "indexExpression": {
                                        "id": 1466,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4638:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4625:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1468,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4642:11:8",
                                    "memberName": "description",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1928,
                                    "src": "4625:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1469,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4671:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1471,
                                      "indexExpression": {
                                        "id": 1470,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4684:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4671:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1472,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4688:7:8",
                                    "memberName": "problem",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1930,
                                    "src": "4671:24:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1473,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4713:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1475,
                                      "indexExpression": {
                                        "id": 1474,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4726:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4713:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1476,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4730:8:8",
                                    "memberName": "solution",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1932,
                                    "src": "4713:25:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1477,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4756:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1479,
                                      "indexExpression": {
                                        "id": 1478,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4769:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4756:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1480,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4773:9:8",
                                    "memberName": "applicant",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1934,
                                    "src": "4756:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1481,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4800:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1483,
                                      "indexExpression": {
                                        "id": 1482,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4813:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4800:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1484,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4817:8:8",
                                    "memberName": "approver",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1937,
                                    "src": "4800:25:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1485,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4843:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1487,
                                      "indexExpression": {
                                        "id": 1486,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4856:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4843:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1488,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4860:5:8",
                                    "memberName": "votes",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1943,
                                    "src": "4843:22:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1489,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4883:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1491,
                                      "indexExpression": {
                                        "id": 1490,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4896:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4883:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4900:9:8",
                                    "memberName": "approvals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1945,
                                    "src": "4883:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1493,
                                        "name": "improvements",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1105,
                                        "src": "4927:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                          "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                        }
                                      },
                                      "id": 1495,
                                      "indexExpression": {
                                        "id": 1494,
                                        "name": "id",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1354,
                                        "src": "4940:2:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "4927:16:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref"
                                      }
                                    },
                                    "id": 1496,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4944:6:8",
                                    "memberName": "status",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1950,
                                    "src": "4927:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_State_$1924",
                                      "typeString": "enum Proposal.State"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                      "typeString": "address payable[] storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_State_$1924",
                                      "typeString": "enum Proposal.State"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1459,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967295,
                                    "src": "4574:3:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 1460,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4578:6:8",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "4574:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 1497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4574:377:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 1457,
                                "name": "Proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2043,
                                "src": "4559:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Proof_$2043_$",
                                  "typeString": "type(library Proof)"
                                }
                              },
                              "id": 1458,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4565:8:8",
                              "memberName": "notarize",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2042,
                              "src": "4559:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_delegatecall_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4559:393:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4534:418:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 1500,
                        "nodeType": "ExpressionStatement",
                        "src": "4534:418:8"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1502,
                                  "name": "improvements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1105,
                                  "src": "5030:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                    "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                  }
                                },
                                "id": 1504,
                                "indexExpression": {
                                  "id": 1503,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "5043:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5030:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref"
                                }
                              },
                              "id": 1505,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5047:9:8",
                              "memberName": "applicant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1934,
                              "src": "5030:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1508,
                                      "name": "improvements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "5076:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1510,
                                    "indexExpression": {
                                      "id": 1509,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1354,
                                      "src": "5089:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5076:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                      "typeString": "struct Proposal.ProposalDetails storage ref"
                                    }
                                  },
                                  "id": 1511,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5093:5:8",
                                  "memberName": "votes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1943,
                                  "src": "5076:22:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1506,
                                  "name": "REWARD_AMOUNT",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1101,
                                  "src": "5058:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5072:3:8",
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 902,
                                "src": "5058:17:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5058:41:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1501,
                            "name": "_asyncTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 282,
                            "src": "5015:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5015:85:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1514,
                        "nodeType": "ExpressionStatement",
                        "src": "5015:85:8"
                      },
                      {
                        "expression": {
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1515,
                              "name": "applicants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1090,
                              "src": "5191:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1520,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1516,
                                  "name": "improvements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1105,
                                  "src": "5202:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                    "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                  }
                                },
                                "id": 1518,
                                "indexExpression": {
                                  "id": 1517,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "5215:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5202:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref"
                                }
                              },
                              "id": 1519,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5219:9:8",
                              "memberName": "applicant",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1934,
                              "src": "5202:26:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5191:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5232:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5191:46:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1523,
                        "nodeType": "ExpressionStatement",
                        "src": "5191:46:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1525,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1354,
                              "src": "5268:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1524,
                            "name": "LogApprove",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1961,
                            "src": "5257:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5257:14:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1527,
                        "nodeType": "EmitStatement",
                        "src": "5252:19:8"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1352,
              "nodeType": "StructuredDocumentation",
              "src": "3491:218:8",
              "text": "@dev Approves the City improvement proposal. Application approval sents some reward amount to\n      the applicant which will also vary depending on the number of votes.\n @param id City improvement ID."
            },
            "functionSelector": "b759f954",
            "id": 1531,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1357,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "3766:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3770:6:8",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "3766:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1359,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1356,
                  "name": "isApprover",
                  "nameLocations": [
                    "3755:10:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "3755:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3755:22:8"
              },
              {
                "arguments": [
                  {
                    "id": 1361,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1354,
                    "src": "3788:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1362,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1360,
                  "name": "notClosed",
                  "nameLocations": [
                    "3778:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "3778:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3778:13:8"
              },
              {
                "id": 1364,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1363,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3792:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "3792:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "3792:13:8"
              }
            ],
            "name": "approve",
            "nameLocation": "3723:7:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1354,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3736:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1531,
                  "src": "3731:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1353,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3731:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3730:9:8"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3806:0:8"
            },
            "scope": 1914,
            "src": "3714:1574:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2005
            ],
            "body": {
              "id": 1612,
              "nodeType": "Block",
              "src": "5469:548:8",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1546,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "5547:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1548,
                          "indexExpression": {
                            "id": 1547,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1534,
                            "src": "5560:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5547:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1549,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5564:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "5547:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5573:6:8",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5547:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5582:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5547:36:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1567,
                  "nodeType": "IfStatement",
                  "src": "5543:166:8",
                  "trueBody": {
                    "id": 1566,
                    "nodeType": "Block",
                    "src": "5585:124:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1554,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "5607:3:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5611:6:8",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5607:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1556,
                                      "name": "improvements",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1105,
                                      "src": "5621:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                        "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1558,
                                    "indexExpression": {
                                      "id": 1557,
                                      "name": "id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1534,
                                      "src": "5634:2:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5621:16:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                      "typeString": "struct Proposal.ProposalDetails storage ref"
                                    }
                                  },
                                  "id": 1559,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5638:8:8",
                                  "memberName": "approver",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1937,
                                  "src": "5621:25:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                    "typeString": "address payable[] storage ref"
                                  }
                                },
                                "id": 1561,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 1560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5647:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5621:28:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "5607:42:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "466972737420617070726f7665722063616e6e6f742072656a65637420746865206170706c69636174696f6e",
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5651:46:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b35f0ba61c5433fc14926aedd9b0a825971530a099db8277cdf75ce9772a216",
                                "typeString": "literal_string \"First approver cannot reject the application\""
                              },
                              "value": "First approver cannot reject the application"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b35f0ba61c5433fc14926aedd9b0a825971530a099db8277cdf75ce9772a216",
                                "typeString": "literal_string \"First approver cannot reject the application\""
                              }
                            ],
                            "id": 1553,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "5599:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5599:99:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1565,
                        "nodeType": "ExpressionStatement",
                        "src": "5599:99:8"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        },
                        "id": 1576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1569,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "5726:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1571,
                            "indexExpression": {
                              "id": 1570,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1534,
                              "src": "5739:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5726:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1572,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5743:6:8",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1950,
                          "src": "5726:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1573,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "5753:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                "typeString": "type(contract Proposal)"
                              }
                            },
                            "id": 1574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5762:5:8",
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1924,
                            "src": "5753:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                              "typeString": "type(enum Proposal.State)"
                            }
                          },
                          "id": 1575,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5768:9:8",
                          "memberName": "Submitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1918,
                          "src": "5753:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "src": "5726:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c207374617475732073686f756c64207374696c6c206265207375626d6974746564",
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5779:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        },
                        "value": "Proposal status should still be submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        }
                      ],
                      "id": 1568,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5718:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5718:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1579,
                  "nodeType": "ExpressionStatement",
                  "src": "5718:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1587,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "5872:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5876:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5872:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5864:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1585,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5864:8:8",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5864:19:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1580,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "5833:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1582,
                          "indexExpression": {
                            "id": 1581,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1534,
                            "src": "5846:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5833:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5850:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "5833:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5859:4:8",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5833:30:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 1590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5833:51:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1591,
                  "nodeType": "ExpressionStatement",
                  "src": "5833:51:8"
                },
                {
                  "expression": {
                    "id": 1599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1592,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "5894:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1594,
                        "indexExpression": {
                          "id": 1593,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1534,
                          "src": "5907:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5894:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1595,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5911:6:8",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "5894:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 1596,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "5920:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                            "typeString": "type(contract Proposal)"
                          }
                        },
                        "id": 1597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5929:5:8",
                        "memberName": "State",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1924,
                        "src": "5920:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                          "typeString": "type(enum Proposal.State)"
                        }
                      },
                      "id": 1598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "5935:8:8",
                      "memberName": "Rejected",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1920,
                      "src": "5920:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "src": "5894:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$1924",
                      "typeString": "enum Proposal.State"
                    }
                  },
                  "id": 1600,
                  "nodeType": "ExpressionStatement",
                  "src": "5894:49:8"
                },
                {
                  "expression": {
                    "id": 1606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1601,
                        "name": "applicants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1090,
                        "src": "5953:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1604,
                      "indexExpression": {
                        "expression": {
                          "id": 1602,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5964:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5968:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5964:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5953:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5978:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5953:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1607,
                  "nodeType": "ExpressionStatement",
                  "src": "5953:29:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1609,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1534,
                        "src": "6007:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1608,
                      "name": "LogReject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1965,
                      "src": "5997:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5997:13:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1611,
                  "nodeType": "EmitStatement",
                  "src": "5992:18:8"
                }
              ]
            },
            "documentation": {
              "id": 1532,
              "nodeType": "StructuredDocumentation",
              "src": "5294:87:8",
              "text": "@dev This function rejects the idea by the approver.\n @param id Proposal id."
            },
            "functionSelector": "b8adaa11",
            "id": 1613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1537,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5429:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5433:6:8",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5429:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1539,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1536,
                  "name": "isApprover",
                  "nameLocations": [
                    "5418:10:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "5418:10:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "5418:22:8"
              },
              {
                "arguments": [
                  {
                    "id": 1541,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1534,
                    "src": "5451:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1542,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1540,
                  "name": "notClosed",
                  "nameLocations": [
                    "5441:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "5441:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "5441:13:8"
              },
              {
                "id": 1544,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1543,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "5455:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "5455:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "5455:13:8"
              }
            ],
            "name": "reject",
            "nameLocation": "5395:6:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1534,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5407:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1613,
                  "src": "5402:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5402:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5401:9:8"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5469:0:8"
            },
            "scope": 1914,
            "src": "5386:631:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2011
            ],
            "body": {
              "id": 1685,
              "nodeType": "Block",
              "src": "6193:429:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        },
                        "id": 1636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1629,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "6211:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1631,
                            "indexExpression": {
                              "id": 1630,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "6224:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6211:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1632,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6228:6:8",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1950,
                          "src": "6211:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1633,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "6238:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                "typeString": "type(contract Proposal)"
                              }
                            },
                            "id": 1634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6247:5:8",
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1924,
                            "src": "6238:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                              "typeString": "type(enum Proposal.State)"
                            }
                          },
                          "id": 1635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6253:9:8",
                          "memberName": "Submitted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1918,
                          "src": "6238:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "src": "6211:51:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c207374617475732073686f756c64207374696c6c206265207375626d6974746564",
                        "id": 1637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6264:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        },
                        "value": "Proposal status should still be submitted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8f21e93a9f1cf370f6a5ac29156dd36ebfeb21d9ca8ec1aac0cfac8545ec1cd",
                          "typeString": "literal_string \"Proposal status should still be submitted\""
                        }
                      ],
                      "id": 1628,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6203:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6203:105:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "6203:105:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1641,
                                "name": "improvements",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "6326:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                }
                              },
                              "id": 1643,
                              "indexExpression": {
                                "id": 1642,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1616,
                                "src": "6339:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6326:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref"
                              }
                            },
                            "id": 1644,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6343:5:8",
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1941,
                            "src": "6326:22:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1647,
                          "indexExpression": {
                            "expression": {
                              "id": 1645,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "6349:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6353:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6349:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6326:34:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6364:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "6326:43:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f7465722063616e206f6e6c7920766f7465206f6e63652e",
                        "id": 1650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6371:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_312e135ffbe4e255aad2d472622b5941207f58a868ef10b8a7ca1e5b538d1bc1",
                          "typeString": "literal_string \"Voter can only vote once.\""
                        },
                        "value": "Voter can only vote once."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_312e135ffbe4e255aad2d472622b5941207f58a868ef10b8a7ca1e5b538d1bc1",
                          "typeString": "literal_string \"Voter can only vote once.\""
                        }
                      ],
                      "id": 1640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6318:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6318:81:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "6318:81:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$1924",
                          "typeString": "enum Proposal.State"
                        },
                        "id": 1661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1654,
                              "name": "improvements",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "6417:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                              }
                            },
                            "id": 1656,
                            "indexExpression": {
                              "id": 1655,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1616,
                              "src": "6430:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6417:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref"
                            }
                          },
                          "id": 1657,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6434:6:8",
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1950,
                          "src": "6417:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 1658,
                              "name": "Proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2026,
                              "src": "6444:8:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                "typeString": "type(contract Proposal)"
                              }
                            },
                            "id": 1659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6453:5:8",
                            "memberName": "State",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1924,
                            "src": "6444:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                              "typeString": "type(enum Proposal.State)"
                            }
                          },
                          "id": 1660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6459:8:8",
                          "memberName": "Rejected",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1920,
                          "src": "6444:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          }
                        },
                        "src": "6417:50:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e6e6f7420766f746520696620616c72656164792072656a6563746564",
                        "id": 1662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6469:33:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294613bc706ea900ba3abf6597b1777c99fac053793d24310e1c06ca0b5d327f",
                          "typeString": "literal_string \"Cannot vote if already rejected\""
                        },
                        "value": "Cannot vote if already rejected"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294613bc706ea900ba3abf6597b1777c99fac053793d24310e1c06ca0b5d327f",
                          "typeString": "literal_string \"Cannot vote if already rejected\""
                        }
                      ],
                      "id": 1653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6409:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6409:94:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1664,
                  "nodeType": "ExpressionStatement",
                  "src": "6409:94:8"
                },
                {
                  "expression": {
                    "id": 1669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "6514:24:8",
                    "subExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1665,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "6514:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1667,
                        "indexExpression": {
                          "id": 1666,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1616,
                          "src": "6527:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6514:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1668,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6531:5:8",
                      "memberName": "votes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1943,
                      "src": "6514:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1670,
                  "nodeType": "ExpressionStatement",
                  "src": "6514:24:8"
                },
                {
                  "expression": {
                    "id": 1679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1671,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "6548:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1673,
                          "indexExpression": {
                            "id": 1672,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1616,
                            "src": "6561:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6548:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1674,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6565:5:8",
                        "memberName": "voted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1941,
                        "src": "6548:22:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1677,
                      "indexExpression": {
                        "expression": {
                          "id": 1675,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6571:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6575:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6571:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6548:34:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6585:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6548:41:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1680,
                  "nodeType": "ExpressionStatement",
                  "src": "6548:41:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1682,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1616,
                        "src": "6612:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1681,
                      "name": "LogVote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1973,
                      "src": "6604:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6604:11:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1684,
                  "nodeType": "EmitStatement",
                  "src": "6599:16:8"
                }
              ]
            },
            "documentation": {
              "id": 1614,
              "nodeType": "StructuredDocumentation",
              "src": "6023:87:8",
              "text": "@dev This function rejects the idea by the approver.\n @param id Proposal id."
            },
            "functionSelector": "0121b93f",
            "id": 1686,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1619,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6153:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6157:6:8",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6153:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1621,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1618,
                  "name": "isVoter",
                  "nameLocations": [
                    "6145:7:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1135,
                  "src": "6145:7:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6145:19:8"
              },
              {
                "arguments": [
                  {
                    "id": 1623,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1616,
                    "src": "6175:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1624,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1622,
                  "name": "notClosed",
                  "nameLocations": [
                    "6165:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "6165:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6165:13:8"
              },
              {
                "id": 1626,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1625,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6179:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "6179:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6179:13:8"
              }
            ],
            "name": "vote",
            "nameLocation": "6124:4:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1616,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6134:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1686,
                  "src": "6129:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1615,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6129:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6128:9:8"
            },
            "returnParameters": {
              "id": 1627,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6193:0:8"
            },
            "scope": 1914,
            "src": "6115:507:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2017
            ],
            "body": {
              "id": 1733,
              "nodeType": "Block",
              "src": "6814:264:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1700,
                                "name": "improvements",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "6832:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                }
                              },
                              "id": 1702,
                              "indexExpression": {
                                "id": 1701,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1689,
                                "src": "6845:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6832:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref"
                              }
                            },
                            "id": 1703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6849:6:8",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1950,
                            "src": "6832:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1704,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "6859:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                  "typeString": "type(contract Proposal)"
                                }
                              },
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6868:5:8",
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1924,
                              "src": "6859:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                                "typeString": "type(enum Proposal.State)"
                              }
                            },
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6874:8:8",
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1921,
                            "src": "6859:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "src": "6832:50:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$1924",
                            "typeString": "enum Proposal.State"
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1708,
                                "name": "improvements",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1105,
                                "src": "6886:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                }
                              },
                              "id": 1710,
                              "indexExpression": {
                                "id": 1709,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1689,
                                "src": "6899:2:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6886:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                "typeString": "struct Proposal.ProposalDetails storage ref"
                              }
                            },
                            "id": 1711,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6903:6:8",
                            "memberName": "status",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1950,
                            "src": "6886:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 1712,
                                "name": "Proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2026,
                                "src": "6913:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                                  "typeString": "type(contract Proposal)"
                                }
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6922:5:8",
                              "memberName": "State",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1924,
                              "src": "6913:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                                "typeString": "type(enum Proposal.State)"
                              }
                            },
                            "id": 1714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6928:8:8",
                            "memberName": "Rejected",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1920,
                            "src": "6913:23:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1924",
                              "typeString": "enum Proposal.State"
                            }
                          },
                          "src": "6886:50:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6832:104:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c2073746174652073686f756c6420626520617070726f766564206f722072656a65637465642e",
                        "id": 1717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6938:48:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e945accec4963faa60b880facca57fbdb41b762bbda9c489314a0b8d9516652",
                          "typeString": "literal_string \"Proposal state should be approved or rejected.\""
                        },
                        "value": "Proposal state should be approved or rejected."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e945accec4963faa60b880facca57fbdb41b762bbda9c489314a0b8d9516652",
                          "typeString": "literal_string \"Proposal state should be approved or rejected.\""
                        }
                      ],
                      "id": 1699,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6824:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6824:163:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1719,
                  "nodeType": "ExpressionStatement",
                  "src": "6824:163:8"
                },
                {
                  "expression": {
                    "id": 1727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1720,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "6997:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1722,
                        "indexExpression": {
                          "id": 1721,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1689,
                          "src": "7010:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6997:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1723,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7014:6:8",
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1950,
                      "src": "6997:23:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 1724,
                          "name": "Proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2026,
                          "src": "7023:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Proposal_$2026_$",
                            "typeString": "type(contract Proposal)"
                          }
                        },
                        "id": 1725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7032:5:8",
                        "memberName": "State",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1924,
                        "src": "7023:14:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$1924_$",
                          "typeString": "type(enum Proposal.State)"
                        }
                      },
                      "id": 1726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "7038:6:8",
                      "memberName": "Closed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1922,
                      "src": "7023:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1924",
                        "typeString": "enum Proposal.State"
                      }
                    },
                    "src": "6997:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$1924",
                      "typeString": "enum Proposal.State"
                    }
                  },
                  "id": 1728,
                  "nodeType": "ExpressionStatement",
                  "src": "6997:47:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1730,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1689,
                        "src": "7068:2:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1729,
                      "name": "LogClose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1969,
                      "src": "7059:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7059:12:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1732,
                  "nodeType": "EmitStatement",
                  "src": "7054:17:8"
                }
              ]
            },
            "documentation": {
              "id": 1687,
              "nodeType": "StructuredDocumentation",
              "src": "6628:112:8",
              "text": "@dev Owner only function to close a proposal when it is approved or rejected.\n @param id Proposal id."
            },
            "functionSelector": "0aebeb4e",
            "id": 1734,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1692,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1691,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6776:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "6776:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6776:9:8"
              },
              {
                "arguments": [
                  {
                    "id": 1694,
                    "name": "id",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1689,
                    "src": "6796:2:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1695,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1693,
                  "name": "notClosed",
                  "nameLocations": [
                    "6786:9:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1153,
                  "src": "6786:9:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6786:13:8"
              },
              {
                "id": 1697,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1696,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "6800:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "6800:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "6800:13:8"
              }
            ],
            "name": "close",
            "nameLocation": "6754:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1689,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6765:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1734,
                  "src": "6760:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1688,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6760:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6759:9:8"
            },
            "returnParameters": {
              "id": 1698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6814:0:8"
            },
            "scope": 1914,
            "src": "6745:333:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2021
            ],
            "body": {
              "id": 1787,
              "nodeType": "Block",
              "src": "7243:274:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1741,
                            "name": "applicants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "7261:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1744,
                          "indexExpression": {
                            "expression": {
                              "id": 1742,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7272:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7276:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7272:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7261:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7287:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7261:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7253:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7253:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1748,
                  "nodeType": "ExpressionStatement",
                  "src": "7253:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1750,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "7311:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1753,
                          "indexExpression": {
                            "expression": {
                              "id": 1751,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7318:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1752,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7322:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7318:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7311:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7333:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7311:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7303:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7303:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1757,
                  "nodeType": "ExpressionStatement",
                  "src": "7303:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1759,
                            "name": "approvers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "7357:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1762,
                          "indexExpression": {
                            "expression": {
                              "id": 1760,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7367:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7371:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7367:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7357:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7382:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7357:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7349:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7349:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1766,
                  "nodeType": "ExpressionStatement",
                  "src": "7349:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7406:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7410:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7406:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1770,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "7420:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7420:7:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7406:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7398:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7398:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1774,
                  "nodeType": "ExpressionStatement",
                  "src": "7398:30:8"
                },
                {
                  "expression": {
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1775,
                        "name": "approvers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1094,
                        "src": "7439:9:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1778,
                      "indexExpression": {
                        "expression": {
                          "id": 1776,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7449:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7453:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7449:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7439:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7463:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7439:28:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1781,
                  "nodeType": "ExpressionStatement",
                  "src": "7439:28:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1783,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7499:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7503:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7499:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1782,
                      "name": "LogApproverApply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1981,
                      "src": "7482:16:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7482:28:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1786,
                  "nodeType": "EmitStatement",
                  "src": "7477:33:8"
                }
              ]
            },
            "documentation": {
              "id": 1735,
              "nodeType": "StructuredDocumentation",
              "src": "7084:105:8",
              "text": "@dev Marks the caller as the an approver, which will be assigned as among the 2 to approve proposals."
            },
            "functionSelector": "905d5e25",
            "id": 1788,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1738,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1737,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "7229:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "7229:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7229:13:8"
              }
            ],
            "name": "applyForApprover",
            "nameLocation": "7203:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7219:2:8"
            },
            "returnParameters": {
              "id": 1739,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7243:0:8"
            },
            "scope": 1914,
            "src": "7194:323:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2025
            ],
            "body": {
              "id": 1841,
              "nodeType": "Block",
              "src": "7649:268:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1795,
                            "name": "applicants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1090,
                            "src": "7667:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1798,
                          "indexExpression": {
                            "expression": {
                              "id": 1796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7678:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7682:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7678:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7667:22:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7693:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7667:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7659:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7659:40:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1802,
                  "nodeType": "ExpressionStatement",
                  "src": "7659:40:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1804,
                            "name": "voters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "7717:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1807,
                          "indexExpression": {
                            "expression": {
                              "id": 1805,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7724:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1806,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7728:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7724:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7717:18:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7739:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7717:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1803,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7709:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7709:36:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1811,
                  "nodeType": "ExpressionStatement",
                  "src": "7709:36:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1813,
                            "name": "approvers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "7763:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1816,
                          "indexExpression": {
                            "expression": {
                              "id": 1814,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "7773:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7777:6:8",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7773:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7763:21:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7788:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "7763:30:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7755:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7755:39:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1820,
                  "nodeType": "ExpressionStatement",
                  "src": "7755:39:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1822,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7812:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7816:6:8",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7812:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1824,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "7826:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7826:7:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7812:21:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7804:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7804:30:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1828,
                  "nodeType": "ExpressionStatement",
                  "src": "7804:30:8"
                },
                {
                  "expression": {
                    "id": 1834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1829,
                        "name": "voters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1098,
                        "src": "7845:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1832,
                      "indexExpression": {
                        "expression": {
                          "id": 1830,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7852:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7856:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7852:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7845:18:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7866:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7845:25:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1835,
                  "nodeType": "ExpressionStatement",
                  "src": "7845:25:8"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1837,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7899:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7903:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7899:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1836,
                      "name": "LogVoterApply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1977,
                      "src": "7885:13:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7885:25:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1840,
                  "nodeType": "EmitStatement",
                  "src": "7880:30:8"
                }
              ]
            },
            "documentation": {
              "id": 1789,
              "nodeType": "StructuredDocumentation",
              "src": "7523:75:8",
              "text": "@dev Marks the caller as a voter, which can then be vote for proposals."
            },
            "functionSelector": "441822a1",
            "id": 1842,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1792,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1791,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "7635:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "7635:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "7635:13:8"
              }
            ],
            "name": "applyForVoter",
            "nameLocation": "7612:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7625:2:8"
            },
            "returnParameters": {
              "id": 1793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7649:0:8"
            },
            "scope": 1914,
            "src": "7603:314:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1853,
              "nodeType": "Block",
              "src": "8076:43:8",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 1850,
                      "name": "improvements",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1105,
                      "src": "8093:12:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                        "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                      }
                    },
                    "id": 1851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8106:6:8",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "8093:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1849,
                  "id": 1852,
                  "nodeType": "Return",
                  "src": "8086:26:8"
                }
              ]
            },
            "documentation": {
              "id": 1843,
              "nodeType": "StructuredDocumentation",
              "src": "7923:74:8",
              "text": "@dev Gets the number of proposals.\n @return number of proposals"
            },
            "functionSelector": "33809b6c",
            "id": 1854,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1845,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "8046:13:8"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "8046:13:8"
                },
                "nodeType": "ModifierInvocation",
                "src": "8046:13:8"
              }
            ],
            "name": "getNumberOfProposals",
            "nameLocation": "8011:20:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8031:2:8"
            },
            "returnParameters": {
              "id": 1849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "8069:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1847,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8069:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8068:6:8"
            },
            "scope": 1914,
            "src": "8002:117:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1894,
              "nodeType": "Block",
              "src": "8328:221:8",
              "statements": [
                {
                  "body": {
                    "id": 1890,
                    "nodeType": "Block",
                    "src": "8405:116:8",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1878,
                                  "name": "improvements",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1105,
                                  "src": "8423:12:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                                    "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                                  }
                                },
                                "id": 1880,
                                "indexExpression": {
                                  "id": 1879,
                                  "name": "id",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1857,
                                  "src": "8436:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8423:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                                  "typeString": "struct Proposal.ProposalDetails storage ref"
                                }
                              },
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8440:8:8",
                              "memberName": "approver",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1937,
                              "src": "8423:25:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 1883,
                            "indexExpression": {
                              "id": 1882,
                              "name": "idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1865,
                              "src": "8449:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8423:30:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1884,
                            "name": "approver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1859,
                            "src": "8457:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8423:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1889,
                        "nodeType": "IfStatement",
                        "src": "8419:92:8",
                        "trueBody": {
                          "id": 1888,
                          "nodeType": "Block",
                          "src": "8467:44:8",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8492:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 1863,
                              "id": 1887,
                              "nodeType": "Return",
                              "src": "8485:11:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1868,
                      "name": "idx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1865,
                      "src": "8358:3:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 1869,
                            "name": "improvements",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1105,
                            "src": "8364:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                              "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                            }
                          },
                          "id": 1871,
                          "indexExpression": {
                            "id": 1870,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1857,
                            "src": "8377:2:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8364:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref"
                          }
                        },
                        "id": 1872,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8381:8:8",
                        "memberName": "approver",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1937,
                        "src": "8364:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8390:6:8",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "8364:32:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8358:38:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1891,
                  "initializationExpression": {
                    "assignments": [
                      1865
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1865,
                        "mutability": "mutable",
                        "name": "idx",
                        "nameLocation": "8349:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1891,
                        "src": "8343:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1864,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8343:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1867,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8355:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "8343:13:8"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8398:5:8",
                      "subExpression": {
                        "id": 1875,
                        "name": "idx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1865,
                        "src": "8398:3:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 1877,
                    "nodeType": "ExpressionStatement",
                    "src": "8398:5:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "8338:183:8"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 1892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8537:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 1863,
                  "id": 1893,
                  "nodeType": "Return",
                  "src": "8530:12:8"
                }
              ]
            },
            "documentation": {
              "id": 1855,
              "nodeType": "StructuredDocumentation",
              "src": "8125:121:8",
              "text": "@dev Helper function to know if approver already is done.\n @return true/false if approver is found in proposal"
            },
            "functionSelector": "b7808b2e",
            "id": 1895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doneApproving",
            "nameLocation": "8260:13:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1857,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8279:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "8274:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1856,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8274:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "approver",
                  "nameLocation": "8291:8:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "8283:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8283:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8273:27:8"
            },
            "returnParameters": {
              "id": 1863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1862,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1895,
                  "src": "8322:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1861,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8322:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8321:6:8"
            },
            "scope": 1914,
            "src": "8251:298:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1912,
              "nodeType": "Block",
              "src": "8746:53:8",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1905,
                          "name": "improvements",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1105,
                          "src": "8763:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_ProposalDetails_$1951_storage_$dyn_storage",
                            "typeString": "struct Proposal.ProposalDetails storage ref[] storage ref"
                          }
                        },
                        "id": 1907,
                        "indexExpression": {
                          "id": 1906,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1898,
                          "src": "8776:2:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8763:16:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProposalDetails_$1951_storage",
                          "typeString": "struct Proposal.ProposalDetails storage ref"
                        }
                      },
                      "id": 1908,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8780:5:8",
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1941,
                      "src": "8763:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1910,
                    "indexExpression": {
                      "id": 1909,
                      "name": "voter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1900,
                      "src": "8786:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8763:29:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1904,
                  "id": 1911,
                  "nodeType": "Return",
                  "src": "8756:36:8"
                }
              ]
            },
            "documentation": {
              "id": 1896,
              "nodeType": "StructuredDocumentation",
              "src": "8555:115:8",
              "text": "@dev Helper function to know if voter already is done.\n @return true/false if voter is found in proposal"
            },
            "functionSelector": "12645ed4",
            "id": 1913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doneVoting",
            "nameLocation": "8684:10:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1898,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8700:2:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1913,
                  "src": "8695:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1897,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8695:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1900,
                  "mutability": "mutable",
                  "name": "voter",
                  "nameLocation": "8712:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1913,
                  "src": "8704:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1899,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8704:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8694:24:8"
            },
            "returnParameters": {
              "id": 1904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1913,
                  "src": "8740:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1902,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8740:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8739:6:8"
            },
            "scope": 1914,
            "src": "8675:124:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1915,
        "src": "655:8146:8",
        "usedErrors": []
      }
    ],
    "src": "0:8801:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x98c0bb6d6210814cc6a978e62068562220015c52cff19f9e6d948aece9d5ab4e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogApprove",
          "type": "event"
        },
        "0xc38871933b40c4ffa8d26c750fd2068c580d67b247afac95ad4448e74f5e6ef7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogApproverApply",
          "type": "event"
        },
        "0x4b9b0f1aa3faaeeee0ef981e1c0dc91a646fd5365cc6d9f2a3c2792b931ba939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogClose",
          "type": "event"
        },
        "0xdc40839d55e815edf4d9e581b370ff6ddfa8ba7985ea1fa97103cd409f0136ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogReject",
          "type": "event"
        },
        "0x87548bfe9b4f8ecb6b1bc3a07fa980ae775360df21b3e966464afadee044941a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogSubmit",
          "type": "event"
        },
        "0x6387485947507482674c11c0a0f1418b30f5e2fd196714c629bbd4e561828f71": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogVote",
          "type": "event"
        },
        "0x3b6d1122be20c447e0ffabe6b11504493f6711532b7376c380078ececacf2199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogVoterApply",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {
        "Proof": "0xEF243C3E2fd7bDF1aD0e25Ebae6E9ffE23d6dE00"
      },
      "address": "0x2A6d67124b60775139951C3fE0B41A7Ad6E5E3ce",
      "transactionHash": "0xf4e4f1c27ad957c97f3d2a5eb7865b45ad878c8e34d3e65df1de83e683f8f106"
    },
    "5777": {
      "events": {
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x87548bfe9b4f8ecb6b1bc3a07fa980ae775360df21b3e966464afadee044941a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogSubmit",
          "type": "event"
        },
        "0x98c0bb6d6210814cc6a978e62068562220015c52cff19f9e6d948aece9d5ab4e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogApprove",
          "type": "event"
        },
        "0xdc40839d55e815edf4d9e581b370ff6ddfa8ba7985ea1fa97103cd409f0136ee": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogReject",
          "type": "event"
        },
        "0x4b9b0f1aa3faaeeee0ef981e1c0dc91a646fd5365cc6d9f2a3c2792b931ba939": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogClose",
          "type": "event"
        },
        "0x6387485947507482674c11c0a0f1418b30f5e2fd196714c629bbd4e561828f71": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "LogVote",
          "type": "event"
        },
        "0x3b6d1122be20c447e0ffabe6b11504493f6711532b7376c380078ececacf2199": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogVoterApply",
          "type": "event"
        },
        "0xc38871933b40c4ffa8d26c750fd2068c580d67b247afac95ad4448e74f5e6ef7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "name": "LogApproverApply",
          "type": "event"
        }
      },
      "links": {
        "Proof": "0xFE45399aC69481485fae5F4c535675aeA267f27A"
      },
      "address": "0x8bedCd0658Ca394158D7a6834EA0948Dd24E1368",
      "transactionHash": "0x1a76f747dd08f56fd4be7ebd4cfcb2b748ae3561c29c254f7bcf2a843db53ffe"
    }
  },
  "schemaVersion": "3.4.10",
  "updatedAt": "2022-10-20T06:37:44.052Z",
  "devdoc": {
    "author": "Joseph Nicholas R. Alcantara",
    "details": "All of the functionalities are experimental but are already unit tested.",
    "kind": "dev",
    "methods": {
      "applyForApprover()": {
        "details": "Marks the caller as the an approver, which will be assigned as among the 2 to approve proposals."
      },
      "applyForVoter()": {
        "details": "Marks the caller as a voter, which can then be vote for proposals."
      },
      "approve(uint256)": {
        "details": "Approves the City improvement proposal. Application approval sents some reward amount to      the applicant which will also vary depending on the number of votes.",
        "params": {
          "id": "City improvement ID."
        }
      },
      "close(uint256)": {
        "details": "Owner only function to close a proposal when it is approved or rejected.",
        "params": {
          "id": "Proposal id."
        }
      },
      "doneApproving(uint256,address)": {
        "details": "Helper function to know if approver already is done.",
        "returns": {
          "_0": "true/false if approver is found in proposal"
        }
      },
      "doneVoting(uint256,address)": {
        "details": "Helper function to know if voter already is done.",
        "returns": {
          "_0": "true/false if voter is found in proposal"
        }
      },
      "getNumberOfProposals()": {
        "details": "Gets the number of proposals.",
        "returns": {
          "_0": "number of proposals"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "readProposal(uint256)": {
        "details": "Reads and returns the proposal by Id.",
        "params": {
          "id": "Proposal id."
        }
      },
      "reject(uint256)": {
        "details": "This function rejects the idea by the approver.",
        "params": {
          "id": "Proposal id."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "submit(string,string,string,string)": {
        "details": "Start of city improvement application.",
        "params": {
          "description": "City improvement description.",
          "problem": "City improvement problem it wishes to tackle.",
          "solution": "Problem's solution.",
          "title": "City improvement title."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "vote(uint256)": {
        "details": "This function rejects the idea by the approver.",
        "params": {
          "id": "Proposal id."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn. Causes the `escrow` to emit a {Withdrawn} event."
        }
      }
    },
    "title": "Simulation for City improvement proposal system.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract for educational purposes only,          this will simulate a City improvement which          is a type of legal proposal.",
    "version": 1
  }
}